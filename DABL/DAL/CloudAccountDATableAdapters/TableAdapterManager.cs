// Generated by .NET Reflector from E:\Projects\Doyingo_Migration\Website\bin\DABL.dll
namespace DABL.DAL.CloudAccountDATableAdapters
{
    using DABL.DAL;
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.ComponentModel;
    using System.ComponentModel.Design;
    using System.Data;
    using System.Data.Common;
    using System.Data.SqlClient;
    using System.Diagnostics;
    using System.Runtime.InteropServices;
    
    [Designer("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerDesigner, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a"), ToolboxItem(true), HelpKeyword("vs.data.TableAdapterManager"), DesignerCategory("code")]
    public class TableAdapterManager : Component
    {
        private DABL.DAL.CloudAccountDATableAdapters.AboutCategoryMasterTableAdapter _aboutCategoryMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.AboutContentMasterTableAdapter _aboutContentMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.AccountantClientDetailTableAdapter _accountantClientDetailTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.AccountantMasterTableAdapter _accountantMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.AdminPermissionMasterTableAdapter _adminPermissionMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.AutoBillEmailTemplateTableAdapter _autoBillEmailTemplateTableAdapter;
        private bool _backupDataSetBeforeUpdate;
        private DABL.DAL.CloudAccountDATableAdapters.BussinessMasterTableAdapter _bussinessMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.CategoryMasterTableAdapter _categoryMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.CityMasterTableAdapter _cityMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.ClientMasterTableAdapter _clientMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.ClientPermissionMasterTableAdapter _clientPermissionMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.CloudPackageDetailsTableAdapter _cloudPackageDetailsTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.CloudPackageMasterTableAdapter _cloudPackageMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.CompanyAdminRightsMasterTableAdapter _companyAdminRightsMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.CompanyClientContactDetailTableAdapter _companyClientContactDetailTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.CompanyClientMasterTableAdapter _companyClientMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.CompanyLoginMasterTableAdapter _companyLoginMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.CompanyMasterTableAdapter _companyMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.CompanyPackageDetailsTableAdapter _companyPackageDetailsTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.CompanyPackageMasterTableAdapter _companyPackageMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.CompanyPaymentMasterTableAdapter _companyPaymentMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.CompanyPaypalMasterTableAdapter _companyPaypalMasterTableAdapter;
        private IDbConnection _connection;
        private DABL.DAL.CloudAccountDATableAdapters.ContactMasterTableAdapter _contactMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.ContractorMasterTableAdapter _contractorMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.ContractorProjectDetailTableAdapter _contractorProjectDetailTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.CountryMasterTableAdapter _countryMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.CreditDefaultTermsMasterTableAdapter _creditDefaultTermsMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.CreditHistoryDetailTableAdapter _creditHistoryDetailTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.CreditItemDetailTableAdapter _creditItemDetailTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.CreditMasterTableAdapter _creditMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.CreditTaskDetailTableAdapter _creditTaskDetailTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.CurrencyMasterTableAdapter _currencyMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.CurrentAccountMasterTableAdapter _currentAccountMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.DoyinGoSupportDiscussionTableAdapter _doyinGoSupportDiscussionTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.DoyinGoSupportTicketTableAdapter _doyinGoSupportTicketTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.DoyinGoTicketAttachmentTableAdapter _doyinGoTicketAttachmentTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.EmailNotificationsTableAdapter _emailNotificationsTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.EstimateDefaultTermsMasterTableAdapter _estimateDefaultTermsMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.EstimateDisputeHistoryTableAdapter _estimateDisputeHistoryTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.EstimateItemDetailTableAdapter _estimateItemDetailTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.EstimateMasterTableAdapter _estimateMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.EstimateTaskDetailTableAdapter _estimateTaskDetailTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.ExpenseMasterTableAdapter _expenseMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.FAQCategoryMasterTableAdapter _fAQCategoryMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.FAQMasterTableAdapter _fAQMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.FeatureCategoryMasterTableAdapter _featureCategoryMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.FeatureContentMasterTableAdapter _featureContentMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.FeatureMasterTableAdapter _featureMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.FooterContentTableAdapter _footerContentTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.FormMasterTableAdapter _formMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.FreePackageSettingsTableAdapter _freePackageSettingsTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.FrequencyMasterTableAdapter _frequencyMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.HomeMasterTableAdapter _homeMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.HomePageSliderTableAdapter _homePageSliderTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.IndustryMasterTableAdapter _industryMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.InquiryMasterTableAdapter _inquiryMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.InvoiceDefaultTermsMasterTableAdapter _invoiceDefaultTermsMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.InvoiceDisputeHistoryTableAdapter _invoiceDisputeHistoryTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.InvoiceItemDetailTableAdapter _invoiceItemDetailTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.InvoiceMasterTableAdapter _invoiceMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.InvoiceTaskDetailTableAdapter _invoiceTaskDetailTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.ItemMasterTableAdapter _itemMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.LatePaymentReminderTemplateTableAdapter _latePaymentReminderTemplateTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.MasterAdminLoginMasterTableAdapter _masterAdminLoginMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.MasterAdminRightsMasterTableAdapter _masterAdminRightsMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.MiscellaneousMasterTableAdapter _miscellaneousMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.ModuleFormMasterTableAdapter _moduleFormMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.ModuleMasterTableAdapter _moduleMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.NewClientEmailTemplateTableAdapter _newClientEmailTemplateTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.NewCreditEmailTemplateTableAdapter _newCreditEmailTemplateTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.NewEstimateEmailTemplateTableAdapter _newEstimateEmailTemplateTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.NewInvoiceEmailTemplateTableAdapter _newInvoiceEmailTemplateTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.NewPaymentEmailTemplateTableAdapter _newPaymentEmailTemplateTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.NewStaffEmailTemplateTableAdapter _newStaffEmailTemplateTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.PackageDetailsTableAdapter _packageDetailsTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.PackageFeatureMasterTableAdapter _packageFeatureMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.PackageMasterTableAdapter _packageMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.PackageModuleMasterTableAdapter _packageModuleMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.PackageUpgradeRequestMasterTableAdapter _packageUpgradeRequestMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.PaymentGatewayMasterTableAdapter _paymentGatewayMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.PaymentGatewayPaypalMasterTableAdapter _paymentGatewayPaypalMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.PaymentMasterTableAdapter _paymentMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.PrivacyPolicyContentTableAdapter _privacyPolicyContentTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.ProjectMasterTableAdapter _projectMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.ProjectTaskDetailTableAdapter _projectTaskDetailTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.RecurringItemDetailTableAdapter _recurringItemDetailTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.RecurringMasterTableAdapter _recurringMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.RecurringTaskDetailTableAdapter _recurringTaskDetailTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.RunningFromMasterTableAdapter _runningFromMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.SecurityQuestionMasterTableAdapter _securityQuestionMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.SMTPSettingsTableAdapter _sMTPSettingsTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.StaffClientAssignDetailTableAdapter _staffClientAssignDetailTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.StaffMasterTableAdapter _staffMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.StaffPermissionMasterTableAdapter _staffPermissionMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.StaffProjectDetailTableAdapter _staffProjectDetailTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.StateMasterTableAdapter _stateMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.SubCategoryMasterTableAdapter _subCategoryMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.SupportDepartmentMasterTableAdapter _supportDepartmentMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.TaskMasterTableAdapter _taskMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.TaxMasterTableAdapter _taxMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.TemplateMasterTableAdapter _templateMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.TemplateSettingsTableAdapter _templateSettingsTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.TermServiceContentTableAdapter _termServiceContentTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.TestimonialsMasterTableAdapter _testimonialsMasterTableAdapter;
        private DABL.DAL.CloudAccountDATableAdapters.TimesheetMasterTableAdapter _timesheetMasterTableAdapter;
        private UpdateOrderOption _updateOrder;
        
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private DataRow[] GetRealUpdatedRows(DataRow[] updatedRows, List<DataRow> allAddedRows)
        {
            if ((updatedRows == null) || (updatedRows.Length < 1))
            {
                return updatedRows;
            }
            if ((allAddedRows == null) || (allAddedRows.Count < 1))
            {
                return updatedRows;
            }
            List<DataRow> list = new List<DataRow>();
            for (int i = 0; i < updatedRows.Length; i++)
            {
                DataRow item = updatedRows[i];
                if (!allAddedRows.Contains(item))
                {
                    list.Add(item);
                }
            }
            return list.ToArray();
        }
        
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        protected virtual bool MatchTableAdapterConnection(IDbConnection inputConnection)
        {
            return ((this._connection != null) || (((this.Connection == null) || (inputConnection == null)) || string.Equals(this.Connection.ConnectionString, inputConnection.ConnectionString, StringComparison.Ordinal)));
        }
        
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        protected virtual void SortSelfReferenceRows(DataRow[] rows, DataRelation relation, bool childFirst)
        {
            Array.Sort<DataRow>(rows, new SelfReferenceComparer(relation, childFirst));
        }
        
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public virtual int UpdateAll(CloudAccountDA dataSet)
        {
            if (dataSet == null)
            {
                throw new ArgumentNullException("dataSet");
            }
            if (!dataSet.HasChanges())
            {
                return 0;
            }
            if ((this._aboutContentMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._aboutContentMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._aboutCategoryMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._aboutCategoryMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._featureCategoryMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._featureCategoryMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._featureContentMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._featureContentMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._homeMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._homeMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._fAQCategoryMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._fAQCategoryMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._fAQMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._fAQMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._homePageSliderTableAdapter != null) && !this.MatchTableAdapterConnection(this._homePageSliderTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._contactMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._contactMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._featureMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._featureMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._countryMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._countryMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._stateMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._stateMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._cityMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._cityMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._currencyMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._currencyMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._clientMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._clientMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._testimonialsMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._testimonialsMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._inquiryMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._inquiryMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._footerContentTableAdapter != null) && !this.MatchTableAdapterConnection(this._footerContentTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._masterAdminLoginMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._masterAdminLoginMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._moduleMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._moduleMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._packageDetailsTableAdapter != null) && !this.MatchTableAdapterConnection(this._packageDetailsTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._packageMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._packageMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._companyPackageDetailsTableAdapter != null) && !this.MatchTableAdapterConnection(this._companyPackageDetailsTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._formMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._formMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._masterAdminRightsMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._masterAdminRightsMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._moduleFormMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._moduleFormMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._companyLoginMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._companyLoginMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._companyAdminRightsMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._companyAdminRightsMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._packageUpgradeRequestMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._packageUpgradeRequestMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._bussinessMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._bussinessMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._currentAccountMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._currentAccountMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._industryMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._industryMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._runningFromMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._runningFromMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._packageModuleMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._packageModuleMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._cloudPackageDetailsTableAdapter != null) && !this.MatchTableAdapterConnection(this._cloudPackageDetailsTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._packageFeatureMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._packageFeatureMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._staffMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._staffMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._taskMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._taskMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._contractorMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._contractorMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._itemMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._itemMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._taxMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._taxMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._contractorProjectDetailTableAdapter != null) && !this.MatchTableAdapterConnection(this._contractorProjectDetailTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._staffProjectDetailTableAdapter != null) && !this.MatchTableAdapterConnection(this._staffProjectDetailTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._projectTaskDetailTableAdapter != null) && !this.MatchTableAdapterConnection(this._projectTaskDetailTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._projectMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._projectMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._staffClientAssignDetailTableAdapter != null) && !this.MatchTableAdapterConnection(this._staffClientAssignDetailTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._securityQuestionMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._securityQuestionMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._invoiceItemDetailTableAdapter != null) && !this.MatchTableAdapterConnection(this._invoiceItemDetailTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._invoiceTaskDetailTableAdapter != null) && !this.MatchTableAdapterConnection(this._invoiceTaskDetailTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._companyMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._companyMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._paymentMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._paymentMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._estimateTaskDetailTableAdapter != null) && !this.MatchTableAdapterConnection(this._estimateTaskDetailTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._estimateItemDetailTableAdapter != null) && !this.MatchTableAdapterConnection(this._estimateItemDetailTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._creditTaskDetailTableAdapter != null) && !this.MatchTableAdapterConnection(this._creditTaskDetailTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._creditItemDetailTableAdapter != null) && !this.MatchTableAdapterConnection(this._creditItemDetailTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._companyClientContactDetailTableAdapter != null) && !this.MatchTableAdapterConnection(this._companyClientContactDetailTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._companyClientMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._companyClientMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._creditDefaultTermsMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._creditDefaultTermsMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._estimateDefaultTermsMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._estimateDefaultTermsMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._invoiceDefaultTermsMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._invoiceDefaultTermsMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._recurringTaskDetailTableAdapter != null) && !this.MatchTableAdapterConnection(this._recurringTaskDetailTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._recurringItemDetailTableAdapter != null) && !this.MatchTableAdapterConnection(this._recurringItemDetailTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._categoryMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._categoryMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._subCategoryMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._subCategoryMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._expenseMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._expenseMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._timesheetMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._timesheetMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._creditMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._creditMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._creditHistoryDetailTableAdapter != null) && !this.MatchTableAdapterConnection(this._creditHistoryDetailTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._accountantMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._accountantMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._accountantClientDetailTableAdapter != null) && !this.MatchTableAdapterConnection(this._accountantClientDetailTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._frequencyMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._frequencyMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._recurringMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._recurringMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._invoiceMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._invoiceMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._estimateMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._estimateMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._adminPermissionMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._adminPermissionMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._staffPermissionMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._staffPermissionMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._clientPermissionMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._clientPermissionMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._templateMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._templateMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._templateSettingsTableAdapter != null) && !this.MatchTableAdapterConnection(this._templateSettingsTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._miscellaneousMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._miscellaneousMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._newInvoiceEmailTemplateTableAdapter != null) && !this.MatchTableAdapterConnection(this._newInvoiceEmailTemplateTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._newEstimateEmailTemplateTableAdapter != null) && !this.MatchTableAdapterConnection(this._newEstimateEmailTemplateTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._newCreditEmailTemplateTableAdapter != null) && !this.MatchTableAdapterConnection(this._newCreditEmailTemplateTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._newStaffEmailTemplateTableAdapter != null) && !this.MatchTableAdapterConnection(this._newStaffEmailTemplateTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._newClientEmailTemplateTableAdapter != null) && !this.MatchTableAdapterConnection(this._newClientEmailTemplateTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._sMTPSettingsTableAdapter != null) && !this.MatchTableAdapterConnection(this._sMTPSettingsTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._emailNotificationsTableAdapter != null) && !this.MatchTableAdapterConnection(this._emailNotificationsTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._newPaymentEmailTemplateTableAdapter != null) && !this.MatchTableAdapterConnection(this._newPaymentEmailTemplateTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._latePaymentReminderTemplateTableAdapter != null) && !this.MatchTableAdapterConnection(this._latePaymentReminderTemplateTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._autoBillEmailTemplateTableAdapter != null) && !this.MatchTableAdapterConnection(this._autoBillEmailTemplateTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._invoiceDisputeHistoryTableAdapter != null) && !this.MatchTableAdapterConnection(this._invoiceDisputeHistoryTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._estimateDisputeHistoryTableAdapter != null) && !this.MatchTableAdapterConnection(this._estimateDisputeHistoryTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._paymentGatewayMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._paymentGatewayMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._paymentGatewayPaypalMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._paymentGatewayPaypalMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._companyPaypalMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._companyPaypalMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._companyPaymentMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._companyPaymentMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._cloudPackageMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._cloudPackageMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._companyPackageMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._companyPackageMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._freePackageSettingsTableAdapter != null) && !this.MatchTableAdapterConnection(this._freePackageSettingsTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._supportDepartmentMasterTableAdapter != null) && !this.MatchTableAdapterConnection(this._supportDepartmentMasterTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._doyinGoSupportTicketTableAdapter != null) && !this.MatchTableAdapterConnection(this._doyinGoSupportTicketTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._doyinGoTicketAttachmentTableAdapter != null) && !this.MatchTableAdapterConnection(this._doyinGoTicketAttachmentTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._doyinGoSupportDiscussionTableAdapter != null) && !this.MatchTableAdapterConnection(this._doyinGoSupportDiscussionTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._termServiceContentTableAdapter != null) && !this.MatchTableAdapterConnection(this._termServiceContentTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            if ((this._privacyPolicyContentTableAdapter != null) && !this.MatchTableAdapterConnection(this._privacyPolicyContentTableAdapter.Connection))
            {
                throw new ArgumentException("All TableAdapters managed by a TableAdapterManager must use the same connection string.");
            }
            IDbConnection connection = this.Connection;
            if (connection == null)
            {
                throw new ApplicationException("TableAdapterManager contains no connection information. Set each TableAdapterManager TableAdapter property to a valid TableAdapter instance.");
            }
            bool flag = false;
            if ((connection.State & ConnectionState.Broken) == ConnectionState.Broken)
            {
                connection.Close();
            }
            if (connection.State == ConnectionState.Closed)
            {
                connection.Open();
                flag = true;
            }
            IDbTransaction transaction = connection.BeginTransaction();
            if (transaction == null)
            {
                throw new ApplicationException("The transaction cannot begin. The current data connection does not support transactions or the current state is not allowing the transaction to begin.");
            }
            List<DataRow> allChangedRows = new List<DataRow>();
            List<DataRow> allAddedRows = new List<DataRow>();
            List<DataAdapter> list3 = new List<DataAdapter>();
            Dictionary<object, IDbConnection> dictionary = new Dictionary<object, IDbConnection>();
            int num = 0;
            DataSet set = null;
            if (this.BackupDataSetBeforeUpdate)
            {
                set = new DataSet();
                set.Merge(dataSet);
            }
            try
            {
                if (this._aboutContentMasterTableAdapter != null)
                {
                    dictionary.Add(this._aboutContentMasterTableAdapter, this._aboutContentMasterTableAdapter.Connection);
                    this._aboutContentMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._aboutContentMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._aboutContentMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._aboutContentMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._aboutContentMasterTableAdapter.Adapter);
                    }
                }
                if (this._aboutCategoryMasterTableAdapter != null)
                {
                    dictionary.Add(this._aboutCategoryMasterTableAdapter, this._aboutCategoryMasterTableAdapter.Connection);
                    this._aboutCategoryMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._aboutCategoryMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._aboutCategoryMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._aboutCategoryMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._aboutCategoryMasterTableAdapter.Adapter);
                    }
                }
                if (this._featureCategoryMasterTableAdapter != null)
                {
                    dictionary.Add(this._featureCategoryMasterTableAdapter, this._featureCategoryMasterTableAdapter.Connection);
                    this._featureCategoryMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._featureCategoryMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._featureCategoryMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._featureCategoryMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._featureCategoryMasterTableAdapter.Adapter);
                    }
                }
                if (this._featureContentMasterTableAdapter != null)
                {
                    dictionary.Add(this._featureContentMasterTableAdapter, this._featureContentMasterTableAdapter.Connection);
                    this._featureContentMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._featureContentMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._featureContentMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._featureContentMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._featureContentMasterTableAdapter.Adapter);
                    }
                }
                if (this._homeMasterTableAdapter != null)
                {
                    dictionary.Add(this._homeMasterTableAdapter, this._homeMasterTableAdapter.Connection);
                    this._homeMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._homeMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._homeMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._homeMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._homeMasterTableAdapter.Adapter);
                    }
                }
                if (this._fAQCategoryMasterTableAdapter != null)
                {
                    dictionary.Add(this._fAQCategoryMasterTableAdapter, this._fAQCategoryMasterTableAdapter.Connection);
                    this._fAQCategoryMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._fAQCategoryMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._fAQCategoryMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._fAQCategoryMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._fAQCategoryMasterTableAdapter.Adapter);
                    }
                }
                if (this._fAQMasterTableAdapter != null)
                {
                    dictionary.Add(this._fAQMasterTableAdapter, this._fAQMasterTableAdapter.Connection);
                    this._fAQMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._fAQMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._fAQMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._fAQMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._fAQMasterTableAdapter.Adapter);
                    }
                }
                if (this._homePageSliderTableAdapter != null)
                {
                    dictionary.Add(this._homePageSliderTableAdapter, this._homePageSliderTableAdapter.Connection);
                    this._homePageSliderTableAdapter.Connection = (SqlConnection) connection;
                    this._homePageSliderTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._homePageSliderTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._homePageSliderTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._homePageSliderTableAdapter.Adapter);
                    }
                }
                if (this._contactMasterTableAdapter != null)
                {
                    dictionary.Add(this._contactMasterTableAdapter, this._contactMasterTableAdapter.Connection);
                    this._contactMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._contactMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._contactMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._contactMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._contactMasterTableAdapter.Adapter);
                    }
                }
                if (this._featureMasterTableAdapter != null)
                {
                    dictionary.Add(this._featureMasterTableAdapter, this._featureMasterTableAdapter.Connection);
                    this._featureMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._featureMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._featureMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._featureMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._featureMasterTableAdapter.Adapter);
                    }
                }
                if (this._countryMasterTableAdapter != null)
                {
                    dictionary.Add(this._countryMasterTableAdapter, this._countryMasterTableAdapter.Connection);
                    this._countryMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._countryMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._countryMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._countryMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._countryMasterTableAdapter.Adapter);
                    }
                }
                if (this._stateMasterTableAdapter != null)
                {
                    dictionary.Add(this._stateMasterTableAdapter, this._stateMasterTableAdapter.Connection);
                    this._stateMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._stateMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._stateMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._stateMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._stateMasterTableAdapter.Adapter);
                    }
                }
                if (this._cityMasterTableAdapter != null)
                {
                    dictionary.Add(this._cityMasterTableAdapter, this._cityMasterTableAdapter.Connection);
                    this._cityMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._cityMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._cityMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._cityMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._cityMasterTableAdapter.Adapter);
                    }
                }
                if (this._currencyMasterTableAdapter != null)
                {
                    dictionary.Add(this._currencyMasterTableAdapter, this._currencyMasterTableAdapter.Connection);
                    this._currencyMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._currencyMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._currencyMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._currencyMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._currencyMasterTableAdapter.Adapter);
                    }
                }
                if (this._clientMasterTableAdapter != null)
                {
                    dictionary.Add(this._clientMasterTableAdapter, this._clientMasterTableAdapter.Connection);
                    this._clientMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._clientMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._clientMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._clientMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._clientMasterTableAdapter.Adapter);
                    }
                }
                if (this._testimonialsMasterTableAdapter != null)
                {
                    dictionary.Add(this._testimonialsMasterTableAdapter, this._testimonialsMasterTableAdapter.Connection);
                    this._testimonialsMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._testimonialsMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._testimonialsMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._testimonialsMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._testimonialsMasterTableAdapter.Adapter);
                    }
                }
                if (this._inquiryMasterTableAdapter != null)
                {
                    dictionary.Add(this._inquiryMasterTableAdapter, this._inquiryMasterTableAdapter.Connection);
                    this._inquiryMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._inquiryMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._inquiryMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._inquiryMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._inquiryMasterTableAdapter.Adapter);
                    }
                }
                if (this._footerContentTableAdapter != null)
                {
                    dictionary.Add(this._footerContentTableAdapter, this._footerContentTableAdapter.Connection);
                    this._footerContentTableAdapter.Connection = (SqlConnection) connection;
                    this._footerContentTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._footerContentTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._footerContentTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._footerContentTableAdapter.Adapter);
                    }
                }
                if (this._masterAdminLoginMasterTableAdapter != null)
                {
                    dictionary.Add(this._masterAdminLoginMasterTableAdapter, this._masterAdminLoginMasterTableAdapter.Connection);
                    this._masterAdminLoginMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._masterAdminLoginMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._masterAdminLoginMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._masterAdminLoginMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._masterAdminLoginMasterTableAdapter.Adapter);
                    }
                }
                if (this._moduleMasterTableAdapter != null)
                {
                    dictionary.Add(this._moduleMasterTableAdapter, this._moduleMasterTableAdapter.Connection);
                    this._moduleMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._moduleMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._moduleMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._moduleMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._moduleMasterTableAdapter.Adapter);
                    }
                }
                if (this._packageDetailsTableAdapter != null)
                {
                    dictionary.Add(this._packageDetailsTableAdapter, this._packageDetailsTableAdapter.Connection);
                    this._packageDetailsTableAdapter.Connection = (SqlConnection) connection;
                    this._packageDetailsTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._packageDetailsTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._packageDetailsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._packageDetailsTableAdapter.Adapter);
                    }
                }
                if (this._packageMasterTableAdapter != null)
                {
                    dictionary.Add(this._packageMasterTableAdapter, this._packageMasterTableAdapter.Connection);
                    this._packageMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._packageMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._packageMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._packageMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._packageMasterTableAdapter.Adapter);
                    }
                }
                if (this._companyPackageDetailsTableAdapter != null)
                {
                    dictionary.Add(this._companyPackageDetailsTableAdapter, this._companyPackageDetailsTableAdapter.Connection);
                    this._companyPackageDetailsTableAdapter.Connection = (SqlConnection) connection;
                    this._companyPackageDetailsTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._companyPackageDetailsTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._companyPackageDetailsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._companyPackageDetailsTableAdapter.Adapter);
                    }
                }
                if (this._formMasterTableAdapter != null)
                {
                    dictionary.Add(this._formMasterTableAdapter, this._formMasterTableAdapter.Connection);
                    this._formMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._formMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._formMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._formMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._formMasterTableAdapter.Adapter);
                    }
                }
                if (this._masterAdminRightsMasterTableAdapter != null)
                {
                    dictionary.Add(this._masterAdminRightsMasterTableAdapter, this._masterAdminRightsMasterTableAdapter.Connection);
                    this._masterAdminRightsMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._masterAdminRightsMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._masterAdminRightsMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._masterAdminRightsMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._masterAdminRightsMasterTableAdapter.Adapter);
                    }
                }
                if (this._moduleFormMasterTableAdapter != null)
                {
                    dictionary.Add(this._moduleFormMasterTableAdapter, this._moduleFormMasterTableAdapter.Connection);
                    this._moduleFormMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._moduleFormMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._moduleFormMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._moduleFormMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._moduleFormMasterTableAdapter.Adapter);
                    }
                }
                if (this._companyLoginMasterTableAdapter != null)
                {
                    dictionary.Add(this._companyLoginMasterTableAdapter, this._companyLoginMasterTableAdapter.Connection);
                    this._companyLoginMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._companyLoginMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._companyLoginMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._companyLoginMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._companyLoginMasterTableAdapter.Adapter);
                    }
                }
                if (this._companyAdminRightsMasterTableAdapter != null)
                {
                    dictionary.Add(this._companyAdminRightsMasterTableAdapter, this._companyAdminRightsMasterTableAdapter.Connection);
                    this._companyAdminRightsMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._companyAdminRightsMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._companyAdminRightsMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._companyAdminRightsMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._companyAdminRightsMasterTableAdapter.Adapter);
                    }
                }
                if (this._packageUpgradeRequestMasterTableAdapter != null)
                {
                    dictionary.Add(this._packageUpgradeRequestMasterTableAdapter, this._packageUpgradeRequestMasterTableAdapter.Connection);
                    this._packageUpgradeRequestMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._packageUpgradeRequestMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._packageUpgradeRequestMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._packageUpgradeRequestMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._packageUpgradeRequestMasterTableAdapter.Adapter);
                    }
                }
                if (this._bussinessMasterTableAdapter != null)
                {
                    dictionary.Add(this._bussinessMasterTableAdapter, this._bussinessMasterTableAdapter.Connection);
                    this._bussinessMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._bussinessMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._bussinessMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._bussinessMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._bussinessMasterTableAdapter.Adapter);
                    }
                }
                if (this._currentAccountMasterTableAdapter != null)
                {
                    dictionary.Add(this._currentAccountMasterTableAdapter, this._currentAccountMasterTableAdapter.Connection);
                    this._currentAccountMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._currentAccountMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._currentAccountMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._currentAccountMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._currentAccountMasterTableAdapter.Adapter);
                    }
                }
                if (this._industryMasterTableAdapter != null)
                {
                    dictionary.Add(this._industryMasterTableAdapter, this._industryMasterTableAdapter.Connection);
                    this._industryMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._industryMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._industryMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._industryMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._industryMasterTableAdapter.Adapter);
                    }
                }
                if (this._runningFromMasterTableAdapter != null)
                {
                    dictionary.Add(this._runningFromMasterTableAdapter, this._runningFromMasterTableAdapter.Connection);
                    this._runningFromMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._runningFromMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._runningFromMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._runningFromMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._runningFromMasterTableAdapter.Adapter);
                    }
                }
                if (this._packageModuleMasterTableAdapter != null)
                {
                    dictionary.Add(this._packageModuleMasterTableAdapter, this._packageModuleMasterTableAdapter.Connection);
                    this._packageModuleMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._packageModuleMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._packageModuleMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._packageModuleMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._packageModuleMasterTableAdapter.Adapter);
                    }
                }
                if (this._cloudPackageDetailsTableAdapter != null)
                {
                    dictionary.Add(this._cloudPackageDetailsTableAdapter, this._cloudPackageDetailsTableAdapter.Connection);
                    this._cloudPackageDetailsTableAdapter.Connection = (SqlConnection) connection;
                    this._cloudPackageDetailsTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._cloudPackageDetailsTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._cloudPackageDetailsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._cloudPackageDetailsTableAdapter.Adapter);
                    }
                }
                if (this._packageFeatureMasterTableAdapter != null)
                {
                    dictionary.Add(this._packageFeatureMasterTableAdapter, this._packageFeatureMasterTableAdapter.Connection);
                    this._packageFeatureMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._packageFeatureMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._packageFeatureMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._packageFeatureMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._packageFeatureMasterTableAdapter.Adapter);
                    }
                }
                if (this._staffMasterTableAdapter != null)
                {
                    dictionary.Add(this._staffMasterTableAdapter, this._staffMasterTableAdapter.Connection);
                    this._staffMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._staffMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._staffMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._staffMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._staffMasterTableAdapter.Adapter);
                    }
                }
                if (this._taskMasterTableAdapter != null)
                {
                    dictionary.Add(this._taskMasterTableAdapter, this._taskMasterTableAdapter.Connection);
                    this._taskMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._taskMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._taskMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._taskMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._taskMasterTableAdapter.Adapter);
                    }
                }
                if (this._contractorMasterTableAdapter != null)
                {
                    dictionary.Add(this._contractorMasterTableAdapter, this._contractorMasterTableAdapter.Connection);
                    this._contractorMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._contractorMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._contractorMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._contractorMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._contractorMasterTableAdapter.Adapter);
                    }
                }
                if (this._itemMasterTableAdapter != null)
                {
                    dictionary.Add(this._itemMasterTableAdapter, this._itemMasterTableAdapter.Connection);
                    this._itemMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._itemMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._itemMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._itemMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._itemMasterTableAdapter.Adapter);
                    }
                }
                if (this._taxMasterTableAdapter != null)
                {
                    dictionary.Add(this._taxMasterTableAdapter, this._taxMasterTableAdapter.Connection);
                    this._taxMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._taxMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._taxMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._taxMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._taxMasterTableAdapter.Adapter);
                    }
                }
                if (this._contractorProjectDetailTableAdapter != null)
                {
                    dictionary.Add(this._contractorProjectDetailTableAdapter, this._contractorProjectDetailTableAdapter.Connection);
                    this._contractorProjectDetailTableAdapter.Connection = (SqlConnection) connection;
                    this._contractorProjectDetailTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._contractorProjectDetailTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._contractorProjectDetailTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._contractorProjectDetailTableAdapter.Adapter);
                    }
                }
                if (this._staffProjectDetailTableAdapter != null)
                {
                    dictionary.Add(this._staffProjectDetailTableAdapter, this._staffProjectDetailTableAdapter.Connection);
                    this._staffProjectDetailTableAdapter.Connection = (SqlConnection) connection;
                    this._staffProjectDetailTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._staffProjectDetailTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._staffProjectDetailTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._staffProjectDetailTableAdapter.Adapter);
                    }
                }
                if (this._projectTaskDetailTableAdapter != null)
                {
                    dictionary.Add(this._projectTaskDetailTableAdapter, this._projectTaskDetailTableAdapter.Connection);
                    this._projectTaskDetailTableAdapter.Connection = (SqlConnection) connection;
                    this._projectTaskDetailTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._projectTaskDetailTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._projectTaskDetailTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._projectTaskDetailTableAdapter.Adapter);
                    }
                }
                if (this._projectMasterTableAdapter != null)
                {
                    dictionary.Add(this._projectMasterTableAdapter, this._projectMasterTableAdapter.Connection);
                    this._projectMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._projectMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._projectMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._projectMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._projectMasterTableAdapter.Adapter);
                    }
                }
                if (this._staffClientAssignDetailTableAdapter != null)
                {
                    dictionary.Add(this._staffClientAssignDetailTableAdapter, this._staffClientAssignDetailTableAdapter.Connection);
                    this._staffClientAssignDetailTableAdapter.Connection = (SqlConnection) connection;
                    this._staffClientAssignDetailTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._staffClientAssignDetailTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._staffClientAssignDetailTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._staffClientAssignDetailTableAdapter.Adapter);
                    }
                }
                if (this._securityQuestionMasterTableAdapter != null)
                {
                    dictionary.Add(this._securityQuestionMasterTableAdapter, this._securityQuestionMasterTableAdapter.Connection);
                    this._securityQuestionMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._securityQuestionMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._securityQuestionMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._securityQuestionMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._securityQuestionMasterTableAdapter.Adapter);
                    }
                }
                if (this._invoiceItemDetailTableAdapter != null)
                {
                    dictionary.Add(this._invoiceItemDetailTableAdapter, this._invoiceItemDetailTableAdapter.Connection);
                    this._invoiceItemDetailTableAdapter.Connection = (SqlConnection) connection;
                    this._invoiceItemDetailTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._invoiceItemDetailTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._invoiceItemDetailTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._invoiceItemDetailTableAdapter.Adapter);
                    }
                }
                if (this._invoiceTaskDetailTableAdapter != null)
                {
                    dictionary.Add(this._invoiceTaskDetailTableAdapter, this._invoiceTaskDetailTableAdapter.Connection);
                    this._invoiceTaskDetailTableAdapter.Connection = (SqlConnection) connection;
                    this._invoiceTaskDetailTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._invoiceTaskDetailTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._invoiceTaskDetailTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._invoiceTaskDetailTableAdapter.Adapter);
                    }
                }
                if (this._companyMasterTableAdapter != null)
                {
                    dictionary.Add(this._companyMasterTableAdapter, this._companyMasterTableAdapter.Connection);
                    this._companyMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._companyMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._companyMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._companyMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._companyMasterTableAdapter.Adapter);
                    }
                }
                if (this._paymentMasterTableAdapter != null)
                {
                    dictionary.Add(this._paymentMasterTableAdapter, this._paymentMasterTableAdapter.Connection);
                    this._paymentMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._paymentMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._paymentMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._paymentMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._paymentMasterTableAdapter.Adapter);
                    }
                }
                if (this._estimateTaskDetailTableAdapter != null)
                {
                    dictionary.Add(this._estimateTaskDetailTableAdapter, this._estimateTaskDetailTableAdapter.Connection);
                    this._estimateTaskDetailTableAdapter.Connection = (SqlConnection) connection;
                    this._estimateTaskDetailTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._estimateTaskDetailTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._estimateTaskDetailTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._estimateTaskDetailTableAdapter.Adapter);
                    }
                }
                if (this._estimateItemDetailTableAdapter != null)
                {
                    dictionary.Add(this._estimateItemDetailTableAdapter, this._estimateItemDetailTableAdapter.Connection);
                    this._estimateItemDetailTableAdapter.Connection = (SqlConnection) connection;
                    this._estimateItemDetailTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._estimateItemDetailTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._estimateItemDetailTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._estimateItemDetailTableAdapter.Adapter);
                    }
                }
                if (this._creditTaskDetailTableAdapter != null)
                {
                    dictionary.Add(this._creditTaskDetailTableAdapter, this._creditTaskDetailTableAdapter.Connection);
                    this._creditTaskDetailTableAdapter.Connection = (SqlConnection) connection;
                    this._creditTaskDetailTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._creditTaskDetailTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._creditTaskDetailTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._creditTaskDetailTableAdapter.Adapter);
                    }
                }
                if (this._creditItemDetailTableAdapter != null)
                {
                    dictionary.Add(this._creditItemDetailTableAdapter, this._creditItemDetailTableAdapter.Connection);
                    this._creditItemDetailTableAdapter.Connection = (SqlConnection) connection;
                    this._creditItemDetailTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._creditItemDetailTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._creditItemDetailTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._creditItemDetailTableAdapter.Adapter);
                    }
                }
                if (this._companyClientContactDetailTableAdapter != null)
                {
                    dictionary.Add(this._companyClientContactDetailTableAdapter, this._companyClientContactDetailTableAdapter.Connection);
                    this._companyClientContactDetailTableAdapter.Connection = (SqlConnection) connection;
                    this._companyClientContactDetailTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._companyClientContactDetailTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._companyClientContactDetailTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._companyClientContactDetailTableAdapter.Adapter);
                    }
                }
                if (this._companyClientMasterTableAdapter != null)
                {
                    dictionary.Add(this._companyClientMasterTableAdapter, this._companyClientMasterTableAdapter.Connection);
                    this._companyClientMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._companyClientMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._companyClientMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._companyClientMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._companyClientMasterTableAdapter.Adapter);
                    }
                }
                if (this._creditDefaultTermsMasterTableAdapter != null)
                {
                    dictionary.Add(this._creditDefaultTermsMasterTableAdapter, this._creditDefaultTermsMasterTableAdapter.Connection);
                    this._creditDefaultTermsMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._creditDefaultTermsMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._creditDefaultTermsMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._creditDefaultTermsMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._creditDefaultTermsMasterTableAdapter.Adapter);
                    }
                }
                if (this._estimateDefaultTermsMasterTableAdapter != null)
                {
                    dictionary.Add(this._estimateDefaultTermsMasterTableAdapter, this._estimateDefaultTermsMasterTableAdapter.Connection);
                    this._estimateDefaultTermsMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._estimateDefaultTermsMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._estimateDefaultTermsMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._estimateDefaultTermsMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._estimateDefaultTermsMasterTableAdapter.Adapter);
                    }
                }
                if (this._invoiceDefaultTermsMasterTableAdapter != null)
                {
                    dictionary.Add(this._invoiceDefaultTermsMasterTableAdapter, this._invoiceDefaultTermsMasterTableAdapter.Connection);
                    this._invoiceDefaultTermsMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._invoiceDefaultTermsMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._invoiceDefaultTermsMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._invoiceDefaultTermsMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._invoiceDefaultTermsMasterTableAdapter.Adapter);
                    }
                }
                if (this._recurringTaskDetailTableAdapter != null)
                {
                    dictionary.Add(this._recurringTaskDetailTableAdapter, this._recurringTaskDetailTableAdapter.Connection);
                    this._recurringTaskDetailTableAdapter.Connection = (SqlConnection) connection;
                    this._recurringTaskDetailTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._recurringTaskDetailTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._recurringTaskDetailTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._recurringTaskDetailTableAdapter.Adapter);
                    }
                }
                if (this._recurringItemDetailTableAdapter != null)
                {
                    dictionary.Add(this._recurringItemDetailTableAdapter, this._recurringItemDetailTableAdapter.Connection);
                    this._recurringItemDetailTableAdapter.Connection = (SqlConnection) connection;
                    this._recurringItemDetailTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._recurringItemDetailTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._recurringItemDetailTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._recurringItemDetailTableAdapter.Adapter);
                    }
                }
                if (this._categoryMasterTableAdapter != null)
                {
                    dictionary.Add(this._categoryMasterTableAdapter, this._categoryMasterTableAdapter.Connection);
                    this._categoryMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._categoryMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._categoryMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._categoryMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._categoryMasterTableAdapter.Adapter);
                    }
                }
                if (this._subCategoryMasterTableAdapter != null)
                {
                    dictionary.Add(this._subCategoryMasterTableAdapter, this._subCategoryMasterTableAdapter.Connection);
                    this._subCategoryMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._subCategoryMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._subCategoryMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._subCategoryMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._subCategoryMasterTableAdapter.Adapter);
                    }
                }
                if (this._expenseMasterTableAdapter != null)
                {
                    dictionary.Add(this._expenseMasterTableAdapter, this._expenseMasterTableAdapter.Connection);
                    this._expenseMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._expenseMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._expenseMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._expenseMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._expenseMasterTableAdapter.Adapter);
                    }
                }
                if (this._timesheetMasterTableAdapter != null)
                {
                    dictionary.Add(this._timesheetMasterTableAdapter, this._timesheetMasterTableAdapter.Connection);
                    this._timesheetMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._timesheetMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._timesheetMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._timesheetMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._timesheetMasterTableAdapter.Adapter);
                    }
                }
                if (this._creditMasterTableAdapter != null)
                {
                    dictionary.Add(this._creditMasterTableAdapter, this._creditMasterTableAdapter.Connection);
                    this._creditMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._creditMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._creditMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._creditMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._creditMasterTableAdapter.Adapter);
                    }
                }
                if (this._creditHistoryDetailTableAdapter != null)
                {
                    dictionary.Add(this._creditHistoryDetailTableAdapter, this._creditHistoryDetailTableAdapter.Connection);
                    this._creditHistoryDetailTableAdapter.Connection = (SqlConnection) connection;
                    this._creditHistoryDetailTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._creditHistoryDetailTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._creditHistoryDetailTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._creditHistoryDetailTableAdapter.Adapter);
                    }
                }
                if (this._accountantMasterTableAdapter != null)
                {
                    dictionary.Add(this._accountantMasterTableAdapter, this._accountantMasterTableAdapter.Connection);
                    this._accountantMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._accountantMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._accountantMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._accountantMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._accountantMasterTableAdapter.Adapter);
                    }
                }
                if (this._accountantClientDetailTableAdapter != null)
                {
                    dictionary.Add(this._accountantClientDetailTableAdapter, this._accountantClientDetailTableAdapter.Connection);
                    this._accountantClientDetailTableAdapter.Connection = (SqlConnection) connection;
                    this._accountantClientDetailTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._accountantClientDetailTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._accountantClientDetailTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._accountantClientDetailTableAdapter.Adapter);
                    }
                }
                if (this._frequencyMasterTableAdapter != null)
                {
                    dictionary.Add(this._frequencyMasterTableAdapter, this._frequencyMasterTableAdapter.Connection);
                    this._frequencyMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._frequencyMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._frequencyMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._frequencyMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._frequencyMasterTableAdapter.Adapter);
                    }
                }
                if (this._recurringMasterTableAdapter != null)
                {
                    dictionary.Add(this._recurringMasterTableAdapter, this._recurringMasterTableAdapter.Connection);
                    this._recurringMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._recurringMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._recurringMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._recurringMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._recurringMasterTableAdapter.Adapter);
                    }
                }
                if (this._invoiceMasterTableAdapter != null)
                {
                    dictionary.Add(this._invoiceMasterTableAdapter, this._invoiceMasterTableAdapter.Connection);
                    this._invoiceMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._invoiceMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._invoiceMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._invoiceMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._invoiceMasterTableAdapter.Adapter);
                    }
                }
                if (this._estimateMasterTableAdapter != null)
                {
                    dictionary.Add(this._estimateMasterTableAdapter, this._estimateMasterTableAdapter.Connection);
                    this._estimateMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._estimateMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._estimateMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._estimateMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._estimateMasterTableAdapter.Adapter);
                    }
                }
                if (this._adminPermissionMasterTableAdapter != null)
                {
                    dictionary.Add(this._adminPermissionMasterTableAdapter, this._adminPermissionMasterTableAdapter.Connection);
                    this._adminPermissionMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._adminPermissionMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._adminPermissionMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._adminPermissionMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._adminPermissionMasterTableAdapter.Adapter);
                    }
                }
                if (this._staffPermissionMasterTableAdapter != null)
                {
                    dictionary.Add(this._staffPermissionMasterTableAdapter, this._staffPermissionMasterTableAdapter.Connection);
                    this._staffPermissionMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._staffPermissionMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._staffPermissionMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._staffPermissionMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._staffPermissionMasterTableAdapter.Adapter);
                    }
                }
                if (this._clientPermissionMasterTableAdapter != null)
                {
                    dictionary.Add(this._clientPermissionMasterTableAdapter, this._clientPermissionMasterTableAdapter.Connection);
                    this._clientPermissionMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._clientPermissionMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._clientPermissionMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._clientPermissionMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._clientPermissionMasterTableAdapter.Adapter);
                    }
                }
                if (this._templateMasterTableAdapter != null)
                {
                    dictionary.Add(this._templateMasterTableAdapter, this._templateMasterTableAdapter.Connection);
                    this._templateMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._templateMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._templateMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._templateMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._templateMasterTableAdapter.Adapter);
                    }
                }
                if (this._templateSettingsTableAdapter != null)
                {
                    dictionary.Add(this._templateSettingsTableAdapter, this._templateSettingsTableAdapter.Connection);
                    this._templateSettingsTableAdapter.Connection = (SqlConnection) connection;
                    this._templateSettingsTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._templateSettingsTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._templateSettingsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._templateSettingsTableAdapter.Adapter);
                    }
                }
                if (this._miscellaneousMasterTableAdapter != null)
                {
                    dictionary.Add(this._miscellaneousMasterTableAdapter, this._miscellaneousMasterTableAdapter.Connection);
                    this._miscellaneousMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._miscellaneousMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._miscellaneousMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._miscellaneousMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._miscellaneousMasterTableAdapter.Adapter);
                    }
                }
                if (this._newInvoiceEmailTemplateTableAdapter != null)
                {
                    dictionary.Add(this._newInvoiceEmailTemplateTableAdapter, this._newInvoiceEmailTemplateTableAdapter.Connection);
                    this._newInvoiceEmailTemplateTableAdapter.Connection = (SqlConnection) connection;
                    this._newInvoiceEmailTemplateTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._newInvoiceEmailTemplateTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._newInvoiceEmailTemplateTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._newInvoiceEmailTemplateTableAdapter.Adapter);
                    }
                }
                if (this._newEstimateEmailTemplateTableAdapter != null)
                {
                    dictionary.Add(this._newEstimateEmailTemplateTableAdapter, this._newEstimateEmailTemplateTableAdapter.Connection);
                    this._newEstimateEmailTemplateTableAdapter.Connection = (SqlConnection) connection;
                    this._newEstimateEmailTemplateTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._newEstimateEmailTemplateTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._newEstimateEmailTemplateTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._newEstimateEmailTemplateTableAdapter.Adapter);
                    }
                }
                if (this._newCreditEmailTemplateTableAdapter != null)
                {
                    dictionary.Add(this._newCreditEmailTemplateTableAdapter, this._newCreditEmailTemplateTableAdapter.Connection);
                    this._newCreditEmailTemplateTableAdapter.Connection = (SqlConnection) connection;
                    this._newCreditEmailTemplateTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._newCreditEmailTemplateTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._newCreditEmailTemplateTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._newCreditEmailTemplateTableAdapter.Adapter);
                    }
                }
                if (this._newStaffEmailTemplateTableAdapter != null)
                {
                    dictionary.Add(this._newStaffEmailTemplateTableAdapter, this._newStaffEmailTemplateTableAdapter.Connection);
                    this._newStaffEmailTemplateTableAdapter.Connection = (SqlConnection) connection;
                    this._newStaffEmailTemplateTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._newStaffEmailTemplateTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._newStaffEmailTemplateTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._newStaffEmailTemplateTableAdapter.Adapter);
                    }
                }
                if (this._newClientEmailTemplateTableAdapter != null)
                {
                    dictionary.Add(this._newClientEmailTemplateTableAdapter, this._newClientEmailTemplateTableAdapter.Connection);
                    this._newClientEmailTemplateTableAdapter.Connection = (SqlConnection) connection;
                    this._newClientEmailTemplateTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._newClientEmailTemplateTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._newClientEmailTemplateTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._newClientEmailTemplateTableAdapter.Adapter);
                    }
                }
                if (this._sMTPSettingsTableAdapter != null)
                {
                    dictionary.Add(this._sMTPSettingsTableAdapter, this._sMTPSettingsTableAdapter.Connection);
                    this._sMTPSettingsTableAdapter.Connection = (SqlConnection) connection;
                    this._sMTPSettingsTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._sMTPSettingsTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._sMTPSettingsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._sMTPSettingsTableAdapter.Adapter);
                    }
                }
                if (this._emailNotificationsTableAdapter != null)
                {
                    dictionary.Add(this._emailNotificationsTableAdapter, this._emailNotificationsTableAdapter.Connection);
                    this._emailNotificationsTableAdapter.Connection = (SqlConnection) connection;
                    this._emailNotificationsTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._emailNotificationsTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._emailNotificationsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._emailNotificationsTableAdapter.Adapter);
                    }
                }
                if (this._newPaymentEmailTemplateTableAdapter != null)
                {
                    dictionary.Add(this._newPaymentEmailTemplateTableAdapter, this._newPaymentEmailTemplateTableAdapter.Connection);
                    this._newPaymentEmailTemplateTableAdapter.Connection = (SqlConnection) connection;
                    this._newPaymentEmailTemplateTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._newPaymentEmailTemplateTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._newPaymentEmailTemplateTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._newPaymentEmailTemplateTableAdapter.Adapter);
                    }
                }
                if (this._latePaymentReminderTemplateTableAdapter != null)
                {
                    dictionary.Add(this._latePaymentReminderTemplateTableAdapter, this._latePaymentReminderTemplateTableAdapter.Connection);
                    this._latePaymentReminderTemplateTableAdapter.Connection = (SqlConnection) connection;
                    this._latePaymentReminderTemplateTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._latePaymentReminderTemplateTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._latePaymentReminderTemplateTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._latePaymentReminderTemplateTableAdapter.Adapter);
                    }
                }
                if (this._autoBillEmailTemplateTableAdapter != null)
                {
                    dictionary.Add(this._autoBillEmailTemplateTableAdapter, this._autoBillEmailTemplateTableAdapter.Connection);
                    this._autoBillEmailTemplateTableAdapter.Connection = (SqlConnection) connection;
                    this._autoBillEmailTemplateTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._autoBillEmailTemplateTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._autoBillEmailTemplateTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._autoBillEmailTemplateTableAdapter.Adapter);
                    }
                }
                if (this._invoiceDisputeHistoryTableAdapter != null)
                {
                    dictionary.Add(this._invoiceDisputeHistoryTableAdapter, this._invoiceDisputeHistoryTableAdapter.Connection);
                    this._invoiceDisputeHistoryTableAdapter.Connection = (SqlConnection) connection;
                    this._invoiceDisputeHistoryTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._invoiceDisputeHistoryTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._invoiceDisputeHistoryTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._invoiceDisputeHistoryTableAdapter.Adapter);
                    }
                }
                if (this._estimateDisputeHistoryTableAdapter != null)
                {
                    dictionary.Add(this._estimateDisputeHistoryTableAdapter, this._estimateDisputeHistoryTableAdapter.Connection);
                    this._estimateDisputeHistoryTableAdapter.Connection = (SqlConnection) connection;
                    this._estimateDisputeHistoryTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._estimateDisputeHistoryTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._estimateDisputeHistoryTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._estimateDisputeHistoryTableAdapter.Adapter);
                    }
                }
                if (this._paymentGatewayMasterTableAdapter != null)
                {
                    dictionary.Add(this._paymentGatewayMasterTableAdapter, this._paymentGatewayMasterTableAdapter.Connection);
                    this._paymentGatewayMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._paymentGatewayMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._paymentGatewayMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._paymentGatewayMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._paymentGatewayMasterTableAdapter.Adapter);
                    }
                }
                if (this._paymentGatewayPaypalMasterTableAdapter != null)
                {
                    dictionary.Add(this._paymentGatewayPaypalMasterTableAdapter, this._paymentGatewayPaypalMasterTableAdapter.Connection);
                    this._paymentGatewayPaypalMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._paymentGatewayPaypalMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._paymentGatewayPaypalMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._paymentGatewayPaypalMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._paymentGatewayPaypalMasterTableAdapter.Adapter);
                    }
                }
                if (this._companyPaypalMasterTableAdapter != null)
                {
                    dictionary.Add(this._companyPaypalMasterTableAdapter, this._companyPaypalMasterTableAdapter.Connection);
                    this._companyPaypalMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._companyPaypalMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._companyPaypalMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._companyPaypalMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._companyPaypalMasterTableAdapter.Adapter);
                    }
                }
                if (this._companyPaymentMasterTableAdapter != null)
                {
                    dictionary.Add(this._companyPaymentMasterTableAdapter, this._companyPaymentMasterTableAdapter.Connection);
                    this._companyPaymentMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._companyPaymentMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._companyPaymentMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._companyPaymentMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._companyPaymentMasterTableAdapter.Adapter);
                    }
                }
                if (this._cloudPackageMasterTableAdapter != null)
                {
                    dictionary.Add(this._cloudPackageMasterTableAdapter, this._cloudPackageMasterTableAdapter.Connection);
                    this._cloudPackageMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._cloudPackageMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._cloudPackageMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._cloudPackageMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._cloudPackageMasterTableAdapter.Adapter);
                    }
                }
                if (this._companyPackageMasterTableAdapter != null)
                {
                    dictionary.Add(this._companyPackageMasterTableAdapter, this._companyPackageMasterTableAdapter.Connection);
                    this._companyPackageMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._companyPackageMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._companyPackageMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._companyPackageMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._companyPackageMasterTableAdapter.Adapter);
                    }
                }
                if (this._freePackageSettingsTableAdapter != null)
                {
                    dictionary.Add(this._freePackageSettingsTableAdapter, this._freePackageSettingsTableAdapter.Connection);
                    this._freePackageSettingsTableAdapter.Connection = (SqlConnection) connection;
                    this._freePackageSettingsTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._freePackageSettingsTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._freePackageSettingsTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._freePackageSettingsTableAdapter.Adapter);
                    }
                }
                if (this._supportDepartmentMasterTableAdapter != null)
                {
                    dictionary.Add(this._supportDepartmentMasterTableAdapter, this._supportDepartmentMasterTableAdapter.Connection);
                    this._supportDepartmentMasterTableAdapter.Connection = (SqlConnection) connection;
                    this._supportDepartmentMasterTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._supportDepartmentMasterTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._supportDepartmentMasterTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._supportDepartmentMasterTableAdapter.Adapter);
                    }
                }
                if (this._doyinGoSupportTicketTableAdapter != null)
                {
                    dictionary.Add(this._doyinGoSupportTicketTableAdapter, this._doyinGoSupportTicketTableAdapter.Connection);
                    this._doyinGoSupportTicketTableAdapter.Connection = (SqlConnection) connection;
                    this._doyinGoSupportTicketTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._doyinGoSupportTicketTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._doyinGoSupportTicketTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._doyinGoSupportTicketTableAdapter.Adapter);
                    }
                }
                if (this._doyinGoTicketAttachmentTableAdapter != null)
                {
                    dictionary.Add(this._doyinGoTicketAttachmentTableAdapter, this._doyinGoTicketAttachmentTableAdapter.Connection);
                    this._doyinGoTicketAttachmentTableAdapter.Connection = (SqlConnection) connection;
                    this._doyinGoTicketAttachmentTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._doyinGoTicketAttachmentTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._doyinGoTicketAttachmentTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._doyinGoTicketAttachmentTableAdapter.Adapter);
                    }
                }
                if (this._doyinGoSupportDiscussionTableAdapter != null)
                {
                    dictionary.Add(this._doyinGoSupportDiscussionTableAdapter, this._doyinGoSupportDiscussionTableAdapter.Connection);
                    this._doyinGoSupportDiscussionTableAdapter.Connection = (SqlConnection) connection;
                    this._doyinGoSupportDiscussionTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._doyinGoSupportDiscussionTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._doyinGoSupportDiscussionTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._doyinGoSupportDiscussionTableAdapter.Adapter);
                    }
                }
                if (this._termServiceContentTableAdapter != null)
                {
                    dictionary.Add(this._termServiceContentTableAdapter, this._termServiceContentTableAdapter.Connection);
                    this._termServiceContentTableAdapter.Connection = (SqlConnection) connection;
                    this._termServiceContentTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._termServiceContentTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._termServiceContentTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._termServiceContentTableAdapter.Adapter);
                    }
                }
                if (this._privacyPolicyContentTableAdapter != null)
                {
                    dictionary.Add(this._privacyPolicyContentTableAdapter, this._privacyPolicyContentTableAdapter.Connection);
                    this._privacyPolicyContentTableAdapter.Connection = (SqlConnection) connection;
                    this._privacyPolicyContentTableAdapter.Transaction = (SqlTransaction) transaction;
                    if (this._privacyPolicyContentTableAdapter.Adapter.AcceptChangesDuringUpdate)
                    {
                        this._privacyPolicyContentTableAdapter.Adapter.AcceptChangesDuringUpdate = false;
                        list3.Add(this._privacyPolicyContentTableAdapter.Adapter);
                    }
                }
                if (this.UpdateOrder == UpdateOrderOption.UpdateInsertDelete)
                {
                    num += this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows);
                    num += this.UpdateInsertedRows(dataSet, allAddedRows);
                }
                else
                {
                    num += this.UpdateInsertedRows(dataSet, allAddedRows);
                    num += this.UpdateUpdatedRows(dataSet, allChangedRows, allAddedRows);
                }
                num += this.UpdateDeletedRows(dataSet, allChangedRows);
                transaction.Commit();
                if (0 < allAddedRows.Count)
                {
                    DataRow[] array = new DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(array);
                    for (int i = 0; i < array.Length; i++)
                    {
                        array[i].AcceptChanges();
                    }
                }
                if (0 < allChangedRows.Count)
                {
                    DataRow[] rowArray2 = new DataRow[allChangedRows.Count];
                    allChangedRows.CopyTo(rowArray2);
                    for (int j = 0; j < rowArray2.Length; j++)
                    {
                        rowArray2[j].AcceptChanges();
                    }
                }
                return num;
            }
            catch (Exception exception)
            {
                transaction.Rollback();
                if (this.BackupDataSetBeforeUpdate)
                {
                    dataSet.Clear();
                    dataSet.Merge(set);
                }
                else if (0 < allAddedRows.Count)
                {
                    DataRow[] rowArray3 = new DataRow[allAddedRows.Count];
                    allAddedRows.CopyTo(rowArray3);
                    for (int k = 0; k < rowArray3.Length; k++)
                    {
                        DataRow row3 = rowArray3[k];
                        row3.AcceptChanges();
                        row3.SetAdded();
                    }
                }
                throw exception;
            }
            finally
            {
                if (flag)
                {
                    connection.Close();
                }
                if (this._aboutContentMasterTableAdapter != null)
                {
                    this._aboutContentMasterTableAdapter.Connection = (SqlConnection) dictionary[this._aboutContentMasterTableAdapter];
                    this._aboutContentMasterTableAdapter.Transaction = null;
                }
                if (this._aboutCategoryMasterTableAdapter != null)
                {
                    this._aboutCategoryMasterTableAdapter.Connection = (SqlConnection) dictionary[this._aboutCategoryMasterTableAdapter];
                    this._aboutCategoryMasterTableAdapter.Transaction = null;
                }
                if (this._featureCategoryMasterTableAdapter != null)
                {
                    this._featureCategoryMasterTableAdapter.Connection = (SqlConnection) dictionary[this._featureCategoryMasterTableAdapter];
                    this._featureCategoryMasterTableAdapter.Transaction = null;
                }
                if (this._featureContentMasterTableAdapter != null)
                {
                    this._featureContentMasterTableAdapter.Connection = (SqlConnection) dictionary[this._featureContentMasterTableAdapter];
                    this._featureContentMasterTableAdapter.Transaction = null;
                }
                if (this._homeMasterTableAdapter != null)
                {
                    this._homeMasterTableAdapter.Connection = (SqlConnection) dictionary[this._homeMasterTableAdapter];
                    this._homeMasterTableAdapter.Transaction = null;
                }
                if (this._fAQCategoryMasterTableAdapter != null)
                {
                    this._fAQCategoryMasterTableAdapter.Connection = (SqlConnection) dictionary[this._fAQCategoryMasterTableAdapter];
                    this._fAQCategoryMasterTableAdapter.Transaction = null;
                }
                if (this._fAQMasterTableAdapter != null)
                {
                    this._fAQMasterTableAdapter.Connection = (SqlConnection) dictionary[this._fAQMasterTableAdapter];
                    this._fAQMasterTableAdapter.Transaction = null;
                }
                if (this._homePageSliderTableAdapter != null)
                {
                    this._homePageSliderTableAdapter.Connection = (SqlConnection) dictionary[this._homePageSliderTableAdapter];
                    this._homePageSliderTableAdapter.Transaction = null;
                }
                if (this._contactMasterTableAdapter != null)
                {
                    this._contactMasterTableAdapter.Connection = (SqlConnection) dictionary[this._contactMasterTableAdapter];
                    this._contactMasterTableAdapter.Transaction = null;
                }
                if (this._featureMasterTableAdapter != null)
                {
                    this._featureMasterTableAdapter.Connection = (SqlConnection) dictionary[this._featureMasterTableAdapter];
                    this._featureMasterTableAdapter.Transaction = null;
                }
                if (this._countryMasterTableAdapter != null)
                {
                    this._countryMasterTableAdapter.Connection = (SqlConnection) dictionary[this._countryMasterTableAdapter];
                    this._countryMasterTableAdapter.Transaction = null;
                }
                if (this._stateMasterTableAdapter != null)
                {
                    this._stateMasterTableAdapter.Connection = (SqlConnection) dictionary[this._stateMasterTableAdapter];
                    this._stateMasterTableAdapter.Transaction = null;
                }
                if (this._cityMasterTableAdapter != null)
                {
                    this._cityMasterTableAdapter.Connection = (SqlConnection) dictionary[this._cityMasterTableAdapter];
                    this._cityMasterTableAdapter.Transaction = null;
                }
                if (this._currencyMasterTableAdapter != null)
                {
                    this._currencyMasterTableAdapter.Connection = (SqlConnection) dictionary[this._currencyMasterTableAdapter];
                    this._currencyMasterTableAdapter.Transaction = null;
                }
                if (this._clientMasterTableAdapter != null)
                {
                    this._clientMasterTableAdapter.Connection = (SqlConnection) dictionary[this._clientMasterTableAdapter];
                    this._clientMasterTableAdapter.Transaction = null;
                }
                if (this._testimonialsMasterTableAdapter != null)
                {
                    this._testimonialsMasterTableAdapter.Connection = (SqlConnection) dictionary[this._testimonialsMasterTableAdapter];
                    this._testimonialsMasterTableAdapter.Transaction = null;
                }
                if (this._inquiryMasterTableAdapter != null)
                {
                    this._inquiryMasterTableAdapter.Connection = (SqlConnection) dictionary[this._inquiryMasterTableAdapter];
                    this._inquiryMasterTableAdapter.Transaction = null;
                }
                if (this._footerContentTableAdapter != null)
                {
                    this._footerContentTableAdapter.Connection = (SqlConnection) dictionary[this._footerContentTableAdapter];
                    this._footerContentTableAdapter.Transaction = null;
                }
                if (this._masterAdminLoginMasterTableAdapter != null)
                {
                    this._masterAdminLoginMasterTableAdapter.Connection = (SqlConnection) dictionary[this._masterAdminLoginMasterTableAdapter];
                    this._masterAdminLoginMasterTableAdapter.Transaction = null;
                }
                if (this._moduleMasterTableAdapter != null)
                {
                    this._moduleMasterTableAdapter.Connection = (SqlConnection) dictionary[this._moduleMasterTableAdapter];
                    this._moduleMasterTableAdapter.Transaction = null;
                }
                if (this._packageDetailsTableAdapter != null)
                {
                    this._packageDetailsTableAdapter.Connection = (SqlConnection) dictionary[this._packageDetailsTableAdapter];
                    this._packageDetailsTableAdapter.Transaction = null;
                }
                if (this._packageMasterTableAdapter != null)
                {
                    this._packageMasterTableAdapter.Connection = (SqlConnection) dictionary[this._packageMasterTableAdapter];
                    this._packageMasterTableAdapter.Transaction = null;
                }
                if (this._companyPackageDetailsTableAdapter != null)
                {
                    this._companyPackageDetailsTableAdapter.Connection = (SqlConnection) dictionary[this._companyPackageDetailsTableAdapter];
                    this._companyPackageDetailsTableAdapter.Transaction = null;
                }
                if (this._formMasterTableAdapter != null)
                {
                    this._formMasterTableAdapter.Connection = (SqlConnection) dictionary[this._formMasterTableAdapter];
                    this._formMasterTableAdapter.Transaction = null;
                }
                if (this._masterAdminRightsMasterTableAdapter != null)
                {
                    this._masterAdminRightsMasterTableAdapter.Connection = (SqlConnection) dictionary[this._masterAdminRightsMasterTableAdapter];
                    this._masterAdminRightsMasterTableAdapter.Transaction = null;
                }
                if (this._moduleFormMasterTableAdapter != null)
                {
                    this._moduleFormMasterTableAdapter.Connection = (SqlConnection) dictionary[this._moduleFormMasterTableAdapter];
                    this._moduleFormMasterTableAdapter.Transaction = null;
                }
                if (this._companyLoginMasterTableAdapter != null)
                {
                    this._companyLoginMasterTableAdapter.Connection = (SqlConnection) dictionary[this._companyLoginMasterTableAdapter];
                    this._companyLoginMasterTableAdapter.Transaction = null;
                }
                if (this._companyAdminRightsMasterTableAdapter != null)
                {
                    this._companyAdminRightsMasterTableAdapter.Connection = (SqlConnection) dictionary[this._companyAdminRightsMasterTableAdapter];
                    this._companyAdminRightsMasterTableAdapter.Transaction = null;
                }
                if (this._packageUpgradeRequestMasterTableAdapter != null)
                {
                    this._packageUpgradeRequestMasterTableAdapter.Connection = (SqlConnection) dictionary[this._packageUpgradeRequestMasterTableAdapter];
                    this._packageUpgradeRequestMasterTableAdapter.Transaction = null;
                }
                if (this._bussinessMasterTableAdapter != null)
                {
                    this._bussinessMasterTableAdapter.Connection = (SqlConnection) dictionary[this._bussinessMasterTableAdapter];
                    this._bussinessMasterTableAdapter.Transaction = null;
                }
                if (this._currentAccountMasterTableAdapter != null)
                {
                    this._currentAccountMasterTableAdapter.Connection = (SqlConnection) dictionary[this._currentAccountMasterTableAdapter];
                    this._currentAccountMasterTableAdapter.Transaction = null;
                }
                if (this._industryMasterTableAdapter != null)
                {
                    this._industryMasterTableAdapter.Connection = (SqlConnection) dictionary[this._industryMasterTableAdapter];
                    this._industryMasterTableAdapter.Transaction = null;
                }
                if (this._runningFromMasterTableAdapter != null)
                {
                    this._runningFromMasterTableAdapter.Connection = (SqlConnection) dictionary[this._runningFromMasterTableAdapter];
                    this._runningFromMasterTableAdapter.Transaction = null;
                }
                if (this._packageModuleMasterTableAdapter != null)
                {
                    this._packageModuleMasterTableAdapter.Connection = (SqlConnection) dictionary[this._packageModuleMasterTableAdapter];
                    this._packageModuleMasterTableAdapter.Transaction = null;
                }
                if (this._cloudPackageDetailsTableAdapter != null)
                {
                    this._cloudPackageDetailsTableAdapter.Connection = (SqlConnection) dictionary[this._cloudPackageDetailsTableAdapter];
                    this._cloudPackageDetailsTableAdapter.Transaction = null;
                }
                if (this._packageFeatureMasterTableAdapter != null)
                {
                    this._packageFeatureMasterTableAdapter.Connection = (SqlConnection) dictionary[this._packageFeatureMasterTableAdapter];
                    this._packageFeatureMasterTableAdapter.Transaction = null;
                }
                if (this._staffMasterTableAdapter != null)
                {
                    this._staffMasterTableAdapter.Connection = (SqlConnection) dictionary[this._staffMasterTableAdapter];
                    this._staffMasterTableAdapter.Transaction = null;
                }
                if (this._taskMasterTableAdapter != null)
                {
                    this._taskMasterTableAdapter.Connection = (SqlConnection) dictionary[this._taskMasterTableAdapter];
                    this._taskMasterTableAdapter.Transaction = null;
                }
                if (this._contractorMasterTableAdapter != null)
                {
                    this._contractorMasterTableAdapter.Connection = (SqlConnection) dictionary[this._contractorMasterTableAdapter];
                    this._contractorMasterTableAdapter.Transaction = null;
                }
                if (this._itemMasterTableAdapter != null)
                {
                    this._itemMasterTableAdapter.Connection = (SqlConnection) dictionary[this._itemMasterTableAdapter];
                    this._itemMasterTableAdapter.Transaction = null;
                }
                if (this._taxMasterTableAdapter != null)
                {
                    this._taxMasterTableAdapter.Connection = (SqlConnection) dictionary[this._taxMasterTableAdapter];
                    this._taxMasterTableAdapter.Transaction = null;
                }
                if (this._contractorProjectDetailTableAdapter != null)
                {
                    this._contractorProjectDetailTableAdapter.Connection = (SqlConnection) dictionary[this._contractorProjectDetailTableAdapter];
                    this._contractorProjectDetailTableAdapter.Transaction = null;
                }
                if (this._staffProjectDetailTableAdapter != null)
                {
                    this._staffProjectDetailTableAdapter.Connection = (SqlConnection) dictionary[this._staffProjectDetailTableAdapter];
                    this._staffProjectDetailTableAdapter.Transaction = null;
                }
                if (this._projectTaskDetailTableAdapter != null)
                {
                    this._projectTaskDetailTableAdapter.Connection = (SqlConnection) dictionary[this._projectTaskDetailTableAdapter];
                    this._projectTaskDetailTableAdapter.Transaction = null;
                }
                if (this._projectMasterTableAdapter != null)
                {
                    this._projectMasterTableAdapter.Connection = (SqlConnection) dictionary[this._projectMasterTableAdapter];
                    this._projectMasterTableAdapter.Transaction = null;
                }
                if (this._staffClientAssignDetailTableAdapter != null)
                {
                    this._staffClientAssignDetailTableAdapter.Connection = (SqlConnection) dictionary[this._staffClientAssignDetailTableAdapter];
                    this._staffClientAssignDetailTableAdapter.Transaction = null;
                }
                if (this._securityQuestionMasterTableAdapter != null)
                {
                    this._securityQuestionMasterTableAdapter.Connection = (SqlConnection) dictionary[this._securityQuestionMasterTableAdapter];
                    this._securityQuestionMasterTableAdapter.Transaction = null;
                }
                if (this._invoiceItemDetailTableAdapter != null)
                {
                    this._invoiceItemDetailTableAdapter.Connection = (SqlConnection) dictionary[this._invoiceItemDetailTableAdapter];
                    this._invoiceItemDetailTableAdapter.Transaction = null;
                }
                if (this._invoiceTaskDetailTableAdapter != null)
                {
                    this._invoiceTaskDetailTableAdapter.Connection = (SqlConnection) dictionary[this._invoiceTaskDetailTableAdapter];
                    this._invoiceTaskDetailTableAdapter.Transaction = null;
                }
                if (this._companyMasterTableAdapter != null)
                {
                    this._companyMasterTableAdapter.Connection = (SqlConnection) dictionary[this._companyMasterTableAdapter];
                    this._companyMasterTableAdapter.Transaction = null;
                }
                if (this._paymentMasterTableAdapter != null)
                {
                    this._paymentMasterTableAdapter.Connection = (SqlConnection) dictionary[this._paymentMasterTableAdapter];
                    this._paymentMasterTableAdapter.Transaction = null;
                }
                if (this._estimateTaskDetailTableAdapter != null)
                {
                    this._estimateTaskDetailTableAdapter.Connection = (SqlConnection) dictionary[this._estimateTaskDetailTableAdapter];
                    this._estimateTaskDetailTableAdapter.Transaction = null;
                }
                if (this._estimateItemDetailTableAdapter != null)
                {
                    this._estimateItemDetailTableAdapter.Connection = (SqlConnection) dictionary[this._estimateItemDetailTableAdapter];
                    this._estimateItemDetailTableAdapter.Transaction = null;
                }
                if (this._creditTaskDetailTableAdapter != null)
                {
                    this._creditTaskDetailTableAdapter.Connection = (SqlConnection) dictionary[this._creditTaskDetailTableAdapter];
                    this._creditTaskDetailTableAdapter.Transaction = null;
                }
                if (this._creditItemDetailTableAdapter != null)
                {
                    this._creditItemDetailTableAdapter.Connection = (SqlConnection) dictionary[this._creditItemDetailTableAdapter];
                    this._creditItemDetailTableAdapter.Transaction = null;
                }
                if (this._companyClientContactDetailTableAdapter != null)
                {
                    this._companyClientContactDetailTableAdapter.Connection = (SqlConnection) dictionary[this._companyClientContactDetailTableAdapter];
                    this._companyClientContactDetailTableAdapter.Transaction = null;
                }
                if (this._companyClientMasterTableAdapter != null)
                {
                    this._companyClientMasterTableAdapter.Connection = (SqlConnection) dictionary[this._companyClientMasterTableAdapter];
                    this._companyClientMasterTableAdapter.Transaction = null;
                }
                if (this._creditDefaultTermsMasterTableAdapter != null)
                {
                    this._creditDefaultTermsMasterTableAdapter.Connection = (SqlConnection) dictionary[this._creditDefaultTermsMasterTableAdapter];
                    this._creditDefaultTermsMasterTableAdapter.Transaction = null;
                }
                if (this._estimateDefaultTermsMasterTableAdapter != null)
                {
                    this._estimateDefaultTermsMasterTableAdapter.Connection = (SqlConnection) dictionary[this._estimateDefaultTermsMasterTableAdapter];
                    this._estimateDefaultTermsMasterTableAdapter.Transaction = null;
                }
                if (this._invoiceDefaultTermsMasterTableAdapter != null)
                {
                    this._invoiceDefaultTermsMasterTableAdapter.Connection = (SqlConnection) dictionary[this._invoiceDefaultTermsMasterTableAdapter];
                    this._invoiceDefaultTermsMasterTableAdapter.Transaction = null;
                }
                if (this._recurringTaskDetailTableAdapter != null)
                {
                    this._recurringTaskDetailTableAdapter.Connection = (SqlConnection) dictionary[this._recurringTaskDetailTableAdapter];
                    this._recurringTaskDetailTableAdapter.Transaction = null;
                }
                if (this._recurringItemDetailTableAdapter != null)
                {
                    this._recurringItemDetailTableAdapter.Connection = (SqlConnection) dictionary[this._recurringItemDetailTableAdapter];
                    this._recurringItemDetailTableAdapter.Transaction = null;
                }
                if (this._categoryMasterTableAdapter != null)
                {
                    this._categoryMasterTableAdapter.Connection = (SqlConnection) dictionary[this._categoryMasterTableAdapter];
                    this._categoryMasterTableAdapter.Transaction = null;
                }
                if (this._subCategoryMasterTableAdapter != null)
                {
                    this._subCategoryMasterTableAdapter.Connection = (SqlConnection) dictionary[this._subCategoryMasterTableAdapter];
                    this._subCategoryMasterTableAdapter.Transaction = null;
                }
                if (this._expenseMasterTableAdapter != null)
                {
                    this._expenseMasterTableAdapter.Connection = (SqlConnection) dictionary[this._expenseMasterTableAdapter];
                    this._expenseMasterTableAdapter.Transaction = null;
                }
                if (this._timesheetMasterTableAdapter != null)
                {
                    this._timesheetMasterTableAdapter.Connection = (SqlConnection) dictionary[this._timesheetMasterTableAdapter];
                    this._timesheetMasterTableAdapter.Transaction = null;
                }
                if (this._creditMasterTableAdapter != null)
                {
                    this._creditMasterTableAdapter.Connection = (SqlConnection) dictionary[this._creditMasterTableAdapter];
                    this._creditMasterTableAdapter.Transaction = null;
                }
                if (this._creditHistoryDetailTableAdapter != null)
                {
                    this._creditHistoryDetailTableAdapter.Connection = (SqlConnection) dictionary[this._creditHistoryDetailTableAdapter];
                    this._creditHistoryDetailTableAdapter.Transaction = null;
                }
                if (this._accountantMasterTableAdapter != null)
                {
                    this._accountantMasterTableAdapter.Connection = (SqlConnection) dictionary[this._accountantMasterTableAdapter];
                    this._accountantMasterTableAdapter.Transaction = null;
                }
                if (this._accountantClientDetailTableAdapter != null)
                {
                    this._accountantClientDetailTableAdapter.Connection = (SqlConnection) dictionary[this._accountantClientDetailTableAdapter];
                    this._accountantClientDetailTableAdapter.Transaction = null;
                }
                if (this._frequencyMasterTableAdapter != null)
                {
                    this._frequencyMasterTableAdapter.Connection = (SqlConnection) dictionary[this._frequencyMasterTableAdapter];
                    this._frequencyMasterTableAdapter.Transaction = null;
                }
                if (this._recurringMasterTableAdapter != null)
                {
                    this._recurringMasterTableAdapter.Connection = (SqlConnection) dictionary[this._recurringMasterTableAdapter];
                    this._recurringMasterTableAdapter.Transaction = null;
                }
                if (this._invoiceMasterTableAdapter != null)
                {
                    this._invoiceMasterTableAdapter.Connection = (SqlConnection) dictionary[this._invoiceMasterTableAdapter];
                    this._invoiceMasterTableAdapter.Transaction = null;
                }
                if (this._estimateMasterTableAdapter != null)
                {
                    this._estimateMasterTableAdapter.Connection = (SqlConnection) dictionary[this._estimateMasterTableAdapter];
                    this._estimateMasterTableAdapter.Transaction = null;
                }
                if (this._adminPermissionMasterTableAdapter != null)
                {
                    this._adminPermissionMasterTableAdapter.Connection = (SqlConnection) dictionary[this._adminPermissionMasterTableAdapter];
                    this._adminPermissionMasterTableAdapter.Transaction = null;
                }
                if (this._staffPermissionMasterTableAdapter != null)
                {
                    this._staffPermissionMasterTableAdapter.Connection = (SqlConnection) dictionary[this._staffPermissionMasterTableAdapter];
                    this._staffPermissionMasterTableAdapter.Transaction = null;
                }
                if (this._clientPermissionMasterTableAdapter != null)
                {
                    this._clientPermissionMasterTableAdapter.Connection = (SqlConnection) dictionary[this._clientPermissionMasterTableAdapter];
                    this._clientPermissionMasterTableAdapter.Transaction = null;
                }
                if (this._templateMasterTableAdapter != null)
                {
                    this._templateMasterTableAdapter.Connection = (SqlConnection) dictionary[this._templateMasterTableAdapter];
                    this._templateMasterTableAdapter.Transaction = null;
                }
                if (this._templateSettingsTableAdapter != null)
                {
                    this._templateSettingsTableAdapter.Connection = (SqlConnection) dictionary[this._templateSettingsTableAdapter];
                    this._templateSettingsTableAdapter.Transaction = null;
                }
                if (this._miscellaneousMasterTableAdapter != null)
                {
                    this._miscellaneousMasterTableAdapter.Connection = (SqlConnection) dictionary[this._miscellaneousMasterTableAdapter];
                    this._miscellaneousMasterTableAdapter.Transaction = null;
                }
                if (this._newInvoiceEmailTemplateTableAdapter != null)
                {
                    this._newInvoiceEmailTemplateTableAdapter.Connection = (SqlConnection) dictionary[this._newInvoiceEmailTemplateTableAdapter];
                    this._newInvoiceEmailTemplateTableAdapter.Transaction = null;
                }
                if (this._newEstimateEmailTemplateTableAdapter != null)
                {
                    this._newEstimateEmailTemplateTableAdapter.Connection = (SqlConnection) dictionary[this._newEstimateEmailTemplateTableAdapter];
                    this._newEstimateEmailTemplateTableAdapter.Transaction = null;
                }
                if (this._newCreditEmailTemplateTableAdapter != null)
                {
                    this._newCreditEmailTemplateTableAdapter.Connection = (SqlConnection) dictionary[this._newCreditEmailTemplateTableAdapter];
                    this._newCreditEmailTemplateTableAdapter.Transaction = null;
                }
                if (this._newStaffEmailTemplateTableAdapter != null)
                {
                    this._newStaffEmailTemplateTableAdapter.Connection = (SqlConnection) dictionary[this._newStaffEmailTemplateTableAdapter];
                    this._newStaffEmailTemplateTableAdapter.Transaction = null;
                }
                if (this._newClientEmailTemplateTableAdapter != null)
                {
                    this._newClientEmailTemplateTableAdapter.Connection = (SqlConnection) dictionary[this._newClientEmailTemplateTableAdapter];
                    this._newClientEmailTemplateTableAdapter.Transaction = null;
                }
                if (this._sMTPSettingsTableAdapter != null)
                {
                    this._sMTPSettingsTableAdapter.Connection = (SqlConnection) dictionary[this._sMTPSettingsTableAdapter];
                    this._sMTPSettingsTableAdapter.Transaction = null;
                }
                if (this._emailNotificationsTableAdapter != null)
                {
                    this._emailNotificationsTableAdapter.Connection = (SqlConnection) dictionary[this._emailNotificationsTableAdapter];
                    this._emailNotificationsTableAdapter.Transaction = null;
                }
                if (this._newPaymentEmailTemplateTableAdapter != null)
                {
                    this._newPaymentEmailTemplateTableAdapter.Connection = (SqlConnection) dictionary[this._newPaymentEmailTemplateTableAdapter];
                    this._newPaymentEmailTemplateTableAdapter.Transaction = null;
                }
                if (this._latePaymentReminderTemplateTableAdapter != null)
                {
                    this._latePaymentReminderTemplateTableAdapter.Connection = (SqlConnection) dictionary[this._latePaymentReminderTemplateTableAdapter];
                    this._latePaymentReminderTemplateTableAdapter.Transaction = null;
                }
                if (this._autoBillEmailTemplateTableAdapter != null)
                {
                    this._autoBillEmailTemplateTableAdapter.Connection = (SqlConnection) dictionary[this._autoBillEmailTemplateTableAdapter];
                    this._autoBillEmailTemplateTableAdapter.Transaction = null;
                }
                if (this._invoiceDisputeHistoryTableAdapter != null)
                {
                    this._invoiceDisputeHistoryTableAdapter.Connection = (SqlConnection) dictionary[this._invoiceDisputeHistoryTableAdapter];
                    this._invoiceDisputeHistoryTableAdapter.Transaction = null;
                }
                if (this._estimateDisputeHistoryTableAdapter != null)
                {
                    this._estimateDisputeHistoryTableAdapter.Connection = (SqlConnection) dictionary[this._estimateDisputeHistoryTableAdapter];
                    this._estimateDisputeHistoryTableAdapter.Transaction = null;
                }
                if (this._paymentGatewayMasterTableAdapter != null)
                {
                    this._paymentGatewayMasterTableAdapter.Connection = (SqlConnection) dictionary[this._paymentGatewayMasterTableAdapter];
                    this._paymentGatewayMasterTableAdapter.Transaction = null;
                }
                if (this._paymentGatewayPaypalMasterTableAdapter != null)
                {
                    this._paymentGatewayPaypalMasterTableAdapter.Connection = (SqlConnection) dictionary[this._paymentGatewayPaypalMasterTableAdapter];
                    this._paymentGatewayPaypalMasterTableAdapter.Transaction = null;
                }
                if (this._companyPaypalMasterTableAdapter != null)
                {
                    this._companyPaypalMasterTableAdapter.Connection = (SqlConnection) dictionary[this._companyPaypalMasterTableAdapter];
                    this._companyPaypalMasterTableAdapter.Transaction = null;
                }
                if (this._companyPaymentMasterTableAdapter != null)
                {
                    this._companyPaymentMasterTableAdapter.Connection = (SqlConnection) dictionary[this._companyPaymentMasterTableAdapter];
                    this._companyPaymentMasterTableAdapter.Transaction = null;
                }
                if (this._cloudPackageMasterTableAdapter != null)
                {
                    this._cloudPackageMasterTableAdapter.Connection = (SqlConnection) dictionary[this._cloudPackageMasterTableAdapter];
                    this._cloudPackageMasterTableAdapter.Transaction = null;
                }
                if (this._companyPackageMasterTableAdapter != null)
                {
                    this._companyPackageMasterTableAdapter.Connection = (SqlConnection) dictionary[this._companyPackageMasterTableAdapter];
                    this._companyPackageMasterTableAdapter.Transaction = null;
                }
                if (this._freePackageSettingsTableAdapter != null)
                {
                    this._freePackageSettingsTableAdapter.Connection = (SqlConnection) dictionary[this._freePackageSettingsTableAdapter];
                    this._freePackageSettingsTableAdapter.Transaction = null;
                }
                if (this._supportDepartmentMasterTableAdapter != null)
                {
                    this._supportDepartmentMasterTableAdapter.Connection = (SqlConnection) dictionary[this._supportDepartmentMasterTableAdapter];
                    this._supportDepartmentMasterTableAdapter.Transaction = null;
                }
                if (this._doyinGoSupportTicketTableAdapter != null)
                {
                    this._doyinGoSupportTicketTableAdapter.Connection = (SqlConnection) dictionary[this._doyinGoSupportTicketTableAdapter];
                    this._doyinGoSupportTicketTableAdapter.Transaction = null;
                }
                if (this._doyinGoTicketAttachmentTableAdapter != null)
                {
                    this._doyinGoTicketAttachmentTableAdapter.Connection = (SqlConnection) dictionary[this._doyinGoTicketAttachmentTableAdapter];
                    this._doyinGoTicketAttachmentTableAdapter.Transaction = null;
                }
                if (this._doyinGoSupportDiscussionTableAdapter != null)
                {
                    this._doyinGoSupportDiscussionTableAdapter.Connection = (SqlConnection) dictionary[this._doyinGoSupportDiscussionTableAdapter];
                    this._doyinGoSupportDiscussionTableAdapter.Transaction = null;
                }
                if (this._termServiceContentTableAdapter != null)
                {
                    this._termServiceContentTableAdapter.Connection = (SqlConnection) dictionary[this._termServiceContentTableAdapter];
                    this._termServiceContentTableAdapter.Transaction = null;
                }
                if (this._privacyPolicyContentTableAdapter != null)
                {
                    this._privacyPolicyContentTableAdapter.Connection = (SqlConnection) dictionary[this._privacyPolicyContentTableAdapter];
                    this._privacyPolicyContentTableAdapter.Transaction = null;
                }
                if (0 < list3.Count)
                {
                    DataAdapter[] adapterArray = new DataAdapter[list3.Count];
                    list3.CopyTo(adapterArray);
                    for (int m = 0; m < adapterArray.Length; m++)
                    {
                        DataAdapter adapter = adapterArray[m];
                        adapter.AcceptChangesDuringUpdate = true;
                    }
                }
            }
            return num;
        }
        
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private int UpdateDeletedRows(CloudAccountDA dataSet, List<DataRow> allChangedRows)
        {
            int num = 0;
            if (this._privacyPolicyContentTableAdapter != null)
            {
                DataRow[] dataRows = dataSet.PrivacyPolicyContent.Select(null, null, DataViewRowState.Deleted);
                if ((dataRows != null) && (0 < dataRows.Length))
                {
                    num += this._privacyPolicyContentTableAdapter.Update(dataRows);
                    allChangedRows.AddRange(dataRows);
                }
            }
            if (this._staffClientAssignDetailTableAdapter != null)
            {
                DataRow[] rowArray2 = dataSet.StaffClientAssignDetail.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray2 != null) && (0 < rowArray2.Length))
                {
                    num += this._staffClientAssignDetailTableAdapter.Update(rowArray2);
                    allChangedRows.AddRange(rowArray2);
                }
            }
            if (this._industryMasterTableAdapter != null)
            {
                DataRow[] rowArray3 = dataSet.IndustryMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray3 != null) && (0 < rowArray3.Length))
                {
                    num += this._industryMasterTableAdapter.Update(rowArray3);
                    allChangedRows.AddRange(rowArray3);
                }
            }
            if (this._runningFromMasterTableAdapter != null)
            {
                DataRow[] rowArray4 = dataSet.RunningFromMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray4 != null) && (0 < rowArray4.Length))
                {
                    num += this._runningFromMasterTableAdapter.Update(rowArray4);
                    allChangedRows.AddRange(rowArray4);
                }
            }
            if (this._packageModuleMasterTableAdapter != null)
            {
                DataRow[] rowArray5 = dataSet.PackageModuleMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray5 != null) && (0 < rowArray5.Length))
                {
                    num += this._packageModuleMasterTableAdapter.Update(rowArray5);
                    allChangedRows.AddRange(rowArray5);
                }
            }
            if (this._cloudPackageDetailsTableAdapter != null)
            {
                DataRow[] rowArray6 = dataSet.CloudPackageDetails.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray6 != null) && (0 < rowArray6.Length))
                {
                    num += this._cloudPackageDetailsTableAdapter.Update(rowArray6);
                    allChangedRows.AddRange(rowArray6);
                }
            }
            if (this._packageFeatureMasterTableAdapter != null)
            {
                DataRow[] rowArray7 = dataSet.PackageFeatureMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray7 != null) && (0 < rowArray7.Length))
                {
                    num += this._packageFeatureMasterTableAdapter.Update(rowArray7);
                    allChangedRows.AddRange(rowArray7);
                }
            }
            if (this._staffMasterTableAdapter != null)
            {
                DataRow[] rowArray8 = dataSet.StaffMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray8 != null) && (0 < rowArray8.Length))
                {
                    num += this._staffMasterTableAdapter.Update(rowArray8);
                    allChangedRows.AddRange(rowArray8);
                }
            }
            if (this._taskMasterTableAdapter != null)
            {
                DataRow[] rowArray9 = dataSet.TaskMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray9 != null) && (0 < rowArray9.Length))
                {
                    num += this._taskMasterTableAdapter.Update(rowArray9);
                    allChangedRows.AddRange(rowArray9);
                }
            }
            if (this._contractorMasterTableAdapter != null)
            {
                DataRow[] rowArray10 = dataSet.ContractorMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray10 != null) && (0 < rowArray10.Length))
                {
                    num += this._contractorMasterTableAdapter.Update(rowArray10);
                    allChangedRows.AddRange(rowArray10);
                }
            }
            if (this._itemMasterTableAdapter != null)
            {
                DataRow[] rowArray11 = dataSet.ItemMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray11 != null) && (0 < rowArray11.Length))
                {
                    num += this._itemMasterTableAdapter.Update(rowArray11);
                    allChangedRows.AddRange(rowArray11);
                }
            }
            if (this._taxMasterTableAdapter != null)
            {
                DataRow[] rowArray12 = dataSet.TaxMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray12 != null) && (0 < rowArray12.Length))
                {
                    num += this._taxMasterTableAdapter.Update(rowArray12);
                    allChangedRows.AddRange(rowArray12);
                }
            }
            if (this._contractorProjectDetailTableAdapter != null)
            {
                DataRow[] rowArray13 = dataSet.ContractorProjectDetail.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray13 != null) && (0 < rowArray13.Length))
                {
                    num += this._contractorProjectDetailTableAdapter.Update(rowArray13);
                    allChangedRows.AddRange(rowArray13);
                }
            }
            if (this._staffProjectDetailTableAdapter != null)
            {
                DataRow[] rowArray14 = dataSet.StaffProjectDetail.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray14 != null) && (0 < rowArray14.Length))
                {
                    num += this._staffProjectDetailTableAdapter.Update(rowArray14);
                    allChangedRows.AddRange(rowArray14);
                }
            }
            if (this._projectTaskDetailTableAdapter != null)
            {
                DataRow[] rowArray15 = dataSet.ProjectTaskDetail.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray15 != null) && (0 < rowArray15.Length))
                {
                    num += this._projectTaskDetailTableAdapter.Update(rowArray15);
                    allChangedRows.AddRange(rowArray15);
                }
            }
            if (this._projectMasterTableAdapter != null)
            {
                DataRow[] rowArray16 = dataSet.ProjectMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray16 != null) && (0 < rowArray16.Length))
                {
                    num += this._projectMasterTableAdapter.Update(rowArray16);
                    allChangedRows.AddRange(rowArray16);
                }
            }
            if (this._securityQuestionMasterTableAdapter != null)
            {
                DataRow[] rowArray17 = dataSet.SecurityQuestionMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray17 != null) && (0 < rowArray17.Length))
                {
                    num += this._securityQuestionMasterTableAdapter.Update(rowArray17);
                    allChangedRows.AddRange(rowArray17);
                }
            }
            if (this._recurringItemDetailTableAdapter != null)
            {
                DataRow[] rowArray18 = dataSet.RecurringItemDetail.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray18 != null) && (0 < rowArray18.Length))
                {
                    num += this._recurringItemDetailTableAdapter.Update(rowArray18);
                    allChangedRows.AddRange(rowArray18);
                }
            }
            if (this._invoiceItemDetailTableAdapter != null)
            {
                DataRow[] rowArray19 = dataSet.InvoiceItemDetail.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray19 != null) && (0 < rowArray19.Length))
                {
                    num += this._invoiceItemDetailTableAdapter.Update(rowArray19);
                    allChangedRows.AddRange(rowArray19);
                }
            }
            if (this._invoiceTaskDetailTableAdapter != null)
            {
                DataRow[] rowArray20 = dataSet.InvoiceTaskDetail.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray20 != null) && (0 < rowArray20.Length))
                {
                    num += this._invoiceTaskDetailTableAdapter.Update(rowArray20);
                    allChangedRows.AddRange(rowArray20);
                }
            }
            if (this._companyMasterTableAdapter != null)
            {
                DataRow[] rowArray21 = dataSet.CompanyMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray21 != null) && (0 < rowArray21.Length))
                {
                    num += this._companyMasterTableAdapter.Update(rowArray21);
                    allChangedRows.AddRange(rowArray21);
                }
            }
            if (this._paymentMasterTableAdapter != null)
            {
                DataRow[] rowArray22 = dataSet.PaymentMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray22 != null) && (0 < rowArray22.Length))
                {
                    num += this._paymentMasterTableAdapter.Update(rowArray22);
                    allChangedRows.AddRange(rowArray22);
                }
            }
            if (this._estimateTaskDetailTableAdapter != null)
            {
                DataRow[] rowArray23 = dataSet.EstimateTaskDetail.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray23 != null) && (0 < rowArray23.Length))
                {
                    num += this._estimateTaskDetailTableAdapter.Update(rowArray23);
                    allChangedRows.AddRange(rowArray23);
                }
            }
            if (this._estimateItemDetailTableAdapter != null)
            {
                DataRow[] rowArray24 = dataSet.EstimateItemDetail.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray24 != null) && (0 < rowArray24.Length))
                {
                    num += this._estimateItemDetailTableAdapter.Update(rowArray24);
                    allChangedRows.AddRange(rowArray24);
                }
            }
            if (this._creditTaskDetailTableAdapter != null)
            {
                DataRow[] rowArray25 = dataSet.CreditTaskDetail.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray25 != null) && (0 < rowArray25.Length))
                {
                    num += this._creditTaskDetailTableAdapter.Update(rowArray25);
                    allChangedRows.AddRange(rowArray25);
                }
            }
            if (this._creditItemDetailTableAdapter != null)
            {
                DataRow[] rowArray26 = dataSet.CreditItemDetail.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray26 != null) && (0 < rowArray26.Length))
                {
                    num += this._creditItemDetailTableAdapter.Update(rowArray26);
                    allChangedRows.AddRange(rowArray26);
                }
            }
            if (this._companyClientContactDetailTableAdapter != null)
            {
                DataRow[] rowArray27 = dataSet.CompanyClientContactDetail.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray27 != null) && (0 < rowArray27.Length))
                {
                    num += this._companyClientContactDetailTableAdapter.Update(rowArray27);
                    allChangedRows.AddRange(rowArray27);
                }
            }
            if (this._companyClientMasterTableAdapter != null)
            {
                DataRow[] rowArray28 = dataSet.CompanyClientMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray28 != null) && (0 < rowArray28.Length))
                {
                    num += this._companyClientMasterTableAdapter.Update(rowArray28);
                    allChangedRows.AddRange(rowArray28);
                }
            }
            if (this._creditDefaultTermsMasterTableAdapter != null)
            {
                DataRow[] rowArray29 = dataSet.CreditDefaultTermsMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray29 != null) && (0 < rowArray29.Length))
                {
                    num += this._creditDefaultTermsMasterTableAdapter.Update(rowArray29);
                    allChangedRows.AddRange(rowArray29);
                }
            }
            if (this._estimateDefaultTermsMasterTableAdapter != null)
            {
                DataRow[] rowArray30 = dataSet.EstimateDefaultTermsMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray30 != null) && (0 < rowArray30.Length))
                {
                    num += this._estimateDefaultTermsMasterTableAdapter.Update(rowArray30);
                    allChangedRows.AddRange(rowArray30);
                }
            }
            if (this._invoiceDefaultTermsMasterTableAdapter != null)
            {
                DataRow[] rowArray31 = dataSet.InvoiceDefaultTermsMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray31 != null) && (0 < rowArray31.Length))
                {
                    num += this._invoiceDefaultTermsMasterTableAdapter.Update(rowArray31);
                    allChangedRows.AddRange(rowArray31);
                }
            }
            if (this._currentAccountMasterTableAdapter != null)
            {
                DataRow[] rowArray32 = dataSet.CurrentAccountMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray32 != null) && (0 < rowArray32.Length))
                {
                    num += this._currentAccountMasterTableAdapter.Update(rowArray32);
                    allChangedRows.AddRange(rowArray32);
                }
            }
            if (this._bussinessMasterTableAdapter != null)
            {
                DataRow[] rowArray33 = dataSet.BussinessMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray33 != null) && (0 < rowArray33.Length))
                {
                    num += this._bussinessMasterTableAdapter.Update(rowArray33);
                    allChangedRows.AddRange(rowArray33);
                }
            }
            if (this._packageUpgradeRequestMasterTableAdapter != null)
            {
                DataRow[] rowArray34 = dataSet.PackageUpgradeRequestMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray34 != null) && (0 < rowArray34.Length))
                {
                    num += this._packageUpgradeRequestMasterTableAdapter.Update(rowArray34);
                    allChangedRows.AddRange(rowArray34);
                }
            }
            if (this._companyAdminRightsMasterTableAdapter != null)
            {
                DataRow[] rowArray35 = dataSet.CompanyAdminRightsMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray35 != null) && (0 < rowArray35.Length))
                {
                    num += this._companyAdminRightsMasterTableAdapter.Update(rowArray35);
                    allChangedRows.AddRange(rowArray35);
                }
            }
            if (this._aboutCategoryMasterTableAdapter != null)
            {
                DataRow[] rowArray36 = dataSet.AboutCategoryMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray36 != null) && (0 < rowArray36.Length))
                {
                    num += this._aboutCategoryMasterTableAdapter.Update(rowArray36);
                    allChangedRows.AddRange(rowArray36);
                }
            }
            if (this._featureCategoryMasterTableAdapter != null)
            {
                DataRow[] rowArray37 = dataSet.FeatureCategoryMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray37 != null) && (0 < rowArray37.Length))
                {
                    num += this._featureCategoryMasterTableAdapter.Update(rowArray37);
                    allChangedRows.AddRange(rowArray37);
                }
            }
            if (this._featureContentMasterTableAdapter != null)
            {
                DataRow[] rowArray38 = dataSet.FeatureContentMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray38 != null) && (0 < rowArray38.Length))
                {
                    num += this._featureContentMasterTableAdapter.Update(rowArray38);
                    allChangedRows.AddRange(rowArray38);
                }
            }
            if (this._homeMasterTableAdapter != null)
            {
                DataRow[] rowArray39 = dataSet.HomeMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray39 != null) && (0 < rowArray39.Length))
                {
                    num += this._homeMasterTableAdapter.Update(rowArray39);
                    allChangedRows.AddRange(rowArray39);
                }
            }
            if (this._fAQCategoryMasterTableAdapter != null)
            {
                DataRow[] rowArray40 = dataSet.FAQCategoryMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray40 != null) && (0 < rowArray40.Length))
                {
                    num += this._fAQCategoryMasterTableAdapter.Update(rowArray40);
                    allChangedRows.AddRange(rowArray40);
                }
            }
            if (this._fAQMasterTableAdapter != null)
            {
                DataRow[] rowArray41 = dataSet.FAQMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray41 != null) && (0 < rowArray41.Length))
                {
                    num += this._fAQMasterTableAdapter.Update(rowArray41);
                    allChangedRows.AddRange(rowArray41);
                }
            }
            if (this._homePageSliderTableAdapter != null)
            {
                DataRow[] rowArray42 = dataSet.HomePageSlider.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray42 != null) && (0 < rowArray42.Length))
                {
                    num += this._homePageSliderTableAdapter.Update(rowArray42);
                    allChangedRows.AddRange(rowArray42);
                }
            }
            if (this._contactMasterTableAdapter != null)
            {
                DataRow[] rowArray43 = dataSet.ContactMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray43 != null) && (0 < rowArray43.Length))
                {
                    num += this._contactMasterTableAdapter.Update(rowArray43);
                    allChangedRows.AddRange(rowArray43);
                }
            }
            if (this._featureMasterTableAdapter != null)
            {
                DataRow[] rowArray44 = dataSet.FeatureMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray44 != null) && (0 < rowArray44.Length))
                {
                    num += this._featureMasterTableAdapter.Update(rowArray44);
                    allChangedRows.AddRange(rowArray44);
                }
            }
            if (this._countryMasterTableAdapter != null)
            {
                DataRow[] rowArray45 = dataSet.CountryMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray45 != null) && (0 < rowArray45.Length))
                {
                    num += this._countryMasterTableAdapter.Update(rowArray45);
                    allChangedRows.AddRange(rowArray45);
                }
            }
            if (this._stateMasterTableAdapter != null)
            {
                DataRow[] rowArray46 = dataSet.StateMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray46 != null) && (0 < rowArray46.Length))
                {
                    num += this._stateMasterTableAdapter.Update(rowArray46);
                    allChangedRows.AddRange(rowArray46);
                }
            }
            if (this._cityMasterTableAdapter != null)
            {
                DataRow[] rowArray47 = dataSet.CityMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray47 != null) && (0 < rowArray47.Length))
                {
                    num += this._cityMasterTableAdapter.Update(rowArray47);
                    allChangedRows.AddRange(rowArray47);
                }
            }
            if (this._currencyMasterTableAdapter != null)
            {
                DataRow[] rowArray48 = dataSet.CurrencyMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray48 != null) && (0 < rowArray48.Length))
                {
                    num += this._currencyMasterTableAdapter.Update(rowArray48);
                    allChangedRows.AddRange(rowArray48);
                }
            }
            if (this._clientMasterTableAdapter != null)
            {
                DataRow[] rowArray49 = dataSet.ClientMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray49 != null) && (0 < rowArray49.Length))
                {
                    num += this._clientMasterTableAdapter.Update(rowArray49);
                    allChangedRows.AddRange(rowArray49);
                }
            }
            if (this._testimonialsMasterTableAdapter != null)
            {
                DataRow[] rowArray50 = dataSet.TestimonialsMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray50 != null) && (0 < rowArray50.Length))
                {
                    num += this._testimonialsMasterTableAdapter.Update(rowArray50);
                    allChangedRows.AddRange(rowArray50);
                }
            }
            if (this._inquiryMasterTableAdapter != null)
            {
                DataRow[] rowArray51 = dataSet.InquiryMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray51 != null) && (0 < rowArray51.Length))
                {
                    num += this._inquiryMasterTableAdapter.Update(rowArray51);
                    allChangedRows.AddRange(rowArray51);
                }
            }
            if (this._footerContentTableAdapter != null)
            {
                DataRow[] rowArray52 = dataSet.FooterContent.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray52 != null) && (0 < rowArray52.Length))
                {
                    num += this._footerContentTableAdapter.Update(rowArray52);
                    allChangedRows.AddRange(rowArray52);
                }
            }
            if (this._masterAdminLoginMasterTableAdapter != null)
            {
                DataRow[] rowArray53 = dataSet.MasterAdminLoginMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray53 != null) && (0 < rowArray53.Length))
                {
                    num += this._masterAdminLoginMasterTableAdapter.Update(rowArray53);
                    allChangedRows.AddRange(rowArray53);
                }
            }
            if (this._moduleMasterTableAdapter != null)
            {
                DataRow[] rowArray54 = dataSet.ModuleMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray54 != null) && (0 < rowArray54.Length))
                {
                    num += this._moduleMasterTableAdapter.Update(rowArray54);
                    allChangedRows.AddRange(rowArray54);
                }
            }
            if (this._packageDetailsTableAdapter != null)
            {
                DataRow[] rowArray55 = dataSet.PackageDetails.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray55 != null) && (0 < rowArray55.Length))
                {
                    num += this._packageDetailsTableAdapter.Update(rowArray55);
                    allChangedRows.AddRange(rowArray55);
                }
            }
            if (this._packageMasterTableAdapter != null)
            {
                DataRow[] rowArray56 = dataSet.PackageMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray56 != null) && (0 < rowArray56.Length))
                {
                    num += this._packageMasterTableAdapter.Update(rowArray56);
                    allChangedRows.AddRange(rowArray56);
                }
            }
            if (this._companyPackageDetailsTableAdapter != null)
            {
                DataRow[] rowArray57 = dataSet.CompanyPackageDetails.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray57 != null) && (0 < rowArray57.Length))
                {
                    num += this._companyPackageDetailsTableAdapter.Update(rowArray57);
                    allChangedRows.AddRange(rowArray57);
                }
            }
            if (this._formMasterTableAdapter != null)
            {
                DataRow[] rowArray58 = dataSet.FormMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray58 != null) && (0 < rowArray58.Length))
                {
                    num += this._formMasterTableAdapter.Update(rowArray58);
                    allChangedRows.AddRange(rowArray58);
                }
            }
            if (this._masterAdminRightsMasterTableAdapter != null)
            {
                DataRow[] rowArray59 = dataSet.MasterAdminRightsMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray59 != null) && (0 < rowArray59.Length))
                {
                    num += this._masterAdminRightsMasterTableAdapter.Update(rowArray59);
                    allChangedRows.AddRange(rowArray59);
                }
            }
            if (this._moduleFormMasterTableAdapter != null)
            {
                DataRow[] rowArray60 = dataSet.ModuleFormMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray60 != null) && (0 < rowArray60.Length))
                {
                    num += this._moduleFormMasterTableAdapter.Update(rowArray60);
                    allChangedRows.AddRange(rowArray60);
                }
            }
            if (this._companyLoginMasterTableAdapter != null)
            {
                DataRow[] rowArray61 = dataSet.CompanyLoginMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray61 != null) && (0 < rowArray61.Length))
                {
                    num += this._companyLoginMasterTableAdapter.Update(rowArray61);
                    allChangedRows.AddRange(rowArray61);
                }
            }
            if (this._recurringTaskDetailTableAdapter != null)
            {
                DataRow[] rowArray62 = dataSet.RecurringTaskDetail.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray62 != null) && (0 < rowArray62.Length))
                {
                    num += this._recurringTaskDetailTableAdapter.Update(rowArray62);
                    allChangedRows.AddRange(rowArray62);
                }
            }
            if (this._categoryMasterTableAdapter != null)
            {
                DataRow[] rowArray63 = dataSet.CategoryMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray63 != null) && (0 < rowArray63.Length))
                {
                    num += this._categoryMasterTableAdapter.Update(rowArray63);
                    allChangedRows.AddRange(rowArray63);
                }
            }
            if (this._termServiceContentTableAdapter != null)
            {
                DataRow[] rowArray64 = dataSet.TermServiceContent.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray64 != null) && (0 < rowArray64.Length))
                {
                    num += this._termServiceContentTableAdapter.Update(rowArray64);
                    allChangedRows.AddRange(rowArray64);
                }
            }
            if (this._subCategoryMasterTableAdapter != null)
            {
                DataRow[] rowArray65 = dataSet.SubCategoryMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray65 != null) && (0 < rowArray65.Length))
                {
                    num += this._subCategoryMasterTableAdapter.Update(rowArray65);
                    allChangedRows.AddRange(rowArray65);
                }
            }
            if (this._paymentGatewayMasterTableAdapter != null)
            {
                DataRow[] rowArray66 = dataSet.PaymentGatewayMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray66 != null) && (0 < rowArray66.Length))
                {
                    num += this._paymentGatewayMasterTableAdapter.Update(rowArray66);
                    allChangedRows.AddRange(rowArray66);
                }
            }
            if (this._paymentGatewayPaypalMasterTableAdapter != null)
            {
                DataRow[] rowArray67 = dataSet.PaymentGatewayPaypalMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray67 != null) && (0 < rowArray67.Length))
                {
                    num += this._paymentGatewayPaypalMasterTableAdapter.Update(rowArray67);
                    allChangedRows.AddRange(rowArray67);
                }
            }
            if (this._companyPaypalMasterTableAdapter != null)
            {
                DataRow[] rowArray68 = dataSet.CompanyPaypalMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray68 != null) && (0 < rowArray68.Length))
                {
                    num += this._companyPaypalMasterTableAdapter.Update(rowArray68);
                    allChangedRows.AddRange(rowArray68);
                }
            }
            if (this._companyPaymentMasterTableAdapter != null)
            {
                DataRow[] rowArray69 = dataSet.CompanyPaymentMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray69 != null) && (0 < rowArray69.Length))
                {
                    num += this._companyPaymentMasterTableAdapter.Update(rowArray69);
                    allChangedRows.AddRange(rowArray69);
                }
            }
            if (this._cloudPackageMasterTableAdapter != null)
            {
                DataRow[] rowArray70 = dataSet.CloudPackageMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray70 != null) && (0 < rowArray70.Length))
                {
                    num += this._cloudPackageMasterTableAdapter.Update(rowArray70);
                    allChangedRows.AddRange(rowArray70);
                }
            }
            if (this._companyPackageMasterTableAdapter != null)
            {
                DataRow[] rowArray71 = dataSet.CompanyPackageMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray71 != null) && (0 < rowArray71.Length))
                {
                    num += this._companyPackageMasterTableAdapter.Update(rowArray71);
                    allChangedRows.AddRange(rowArray71);
                }
            }
            if (this._freePackageSettingsTableAdapter != null)
            {
                DataRow[] rowArray72 = dataSet.FreePackageSettings.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray72 != null) && (0 < rowArray72.Length))
                {
                    num += this._freePackageSettingsTableAdapter.Update(rowArray72);
                    allChangedRows.AddRange(rowArray72);
                }
            }
            if (this._supportDepartmentMasterTableAdapter != null)
            {
                DataRow[] rowArray73 = dataSet.SupportDepartmentMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray73 != null) && (0 < rowArray73.Length))
                {
                    num += this._supportDepartmentMasterTableAdapter.Update(rowArray73);
                    allChangedRows.AddRange(rowArray73);
                }
            }
            if (this._doyinGoSupportTicketTableAdapter != null)
            {
                DataRow[] rowArray74 = dataSet.DoyinGoSupportTicket.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray74 != null) && (0 < rowArray74.Length))
                {
                    num += this._doyinGoSupportTicketTableAdapter.Update(rowArray74);
                    allChangedRows.AddRange(rowArray74);
                }
            }
            if (this._doyinGoTicketAttachmentTableAdapter != null)
            {
                DataRow[] rowArray75 = dataSet.DoyinGoTicketAttachment.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray75 != null) && (0 < rowArray75.Length))
                {
                    num += this._doyinGoTicketAttachmentTableAdapter.Update(rowArray75);
                    allChangedRows.AddRange(rowArray75);
                }
            }
            if (this._doyinGoSupportDiscussionTableAdapter != null)
            {
                DataRow[] rowArray76 = dataSet.DoyinGoSupportDiscussion.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray76 != null) && (0 < rowArray76.Length))
                {
                    num += this._doyinGoSupportDiscussionTableAdapter.Update(rowArray76);
                    allChangedRows.AddRange(rowArray76);
                }
            }
            if (this._estimateDisputeHistoryTableAdapter != null)
            {
                DataRow[] rowArray77 = dataSet.EstimateDisputeHistory.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray77 != null) && (0 < rowArray77.Length))
                {
                    num += this._estimateDisputeHistoryTableAdapter.Update(rowArray77);
                    allChangedRows.AddRange(rowArray77);
                }
            }
            if (this._invoiceDisputeHistoryTableAdapter != null)
            {
                DataRow[] rowArray78 = dataSet.InvoiceDisputeHistory.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray78 != null) && (0 < rowArray78.Length))
                {
                    num += this._invoiceDisputeHistoryTableAdapter.Update(rowArray78);
                    allChangedRows.AddRange(rowArray78);
                }
            }
            if (this._expenseMasterTableAdapter != null)
            {
                DataRow[] rowArray79 = dataSet.ExpenseMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray79 != null) && (0 < rowArray79.Length))
                {
                    num += this._expenseMasterTableAdapter.Update(rowArray79);
                    allChangedRows.AddRange(rowArray79);
                }
            }
            if (this._timesheetMasterTableAdapter != null)
            {
                DataRow[] rowArray80 = dataSet.TimesheetMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray80 != null) && (0 < rowArray80.Length))
                {
                    num += this._timesheetMasterTableAdapter.Update(rowArray80);
                    allChangedRows.AddRange(rowArray80);
                }
            }
            if (this._creditMasterTableAdapter != null)
            {
                DataRow[] rowArray81 = dataSet.CreditMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray81 != null) && (0 < rowArray81.Length))
                {
                    num += this._creditMasterTableAdapter.Update(rowArray81);
                    allChangedRows.AddRange(rowArray81);
                }
            }
            if (this._creditHistoryDetailTableAdapter != null)
            {
                DataRow[] rowArray82 = dataSet.CreditHistoryDetail.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray82 != null) && (0 < rowArray82.Length))
                {
                    num += this._creditHistoryDetailTableAdapter.Update(rowArray82);
                    allChangedRows.AddRange(rowArray82);
                }
            }
            if (this._accountantMasterTableAdapter != null)
            {
                DataRow[] rowArray83 = dataSet.AccountantMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray83 != null) && (0 < rowArray83.Length))
                {
                    num += this._accountantMasterTableAdapter.Update(rowArray83);
                    allChangedRows.AddRange(rowArray83);
                }
            }
            if (this._accountantClientDetailTableAdapter != null)
            {
                DataRow[] rowArray84 = dataSet.AccountantClientDetail.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray84 != null) && (0 < rowArray84.Length))
                {
                    num += this._accountantClientDetailTableAdapter.Update(rowArray84);
                    allChangedRows.AddRange(rowArray84);
                }
            }
            if (this._frequencyMasterTableAdapter != null)
            {
                DataRow[] rowArray85 = dataSet.FrequencyMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray85 != null) && (0 < rowArray85.Length))
                {
                    num += this._frequencyMasterTableAdapter.Update(rowArray85);
                    allChangedRows.AddRange(rowArray85);
                }
            }
            if (this._recurringMasterTableAdapter != null)
            {
                DataRow[] rowArray86 = dataSet.RecurringMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray86 != null) && (0 < rowArray86.Length))
                {
                    num += this._recurringMasterTableAdapter.Update(rowArray86);
                    allChangedRows.AddRange(rowArray86);
                }
            }
            if (this._invoiceMasterTableAdapter != null)
            {
                DataRow[] rowArray87 = dataSet.InvoiceMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray87 != null) && (0 < rowArray87.Length))
                {
                    num += this._invoiceMasterTableAdapter.Update(rowArray87);
                    allChangedRows.AddRange(rowArray87);
                }
            }
            if (this._estimateMasterTableAdapter != null)
            {
                DataRow[] rowArray88 = dataSet.EstimateMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray88 != null) && (0 < rowArray88.Length))
                {
                    num += this._estimateMasterTableAdapter.Update(rowArray88);
                    allChangedRows.AddRange(rowArray88);
                }
            }
            if (this._adminPermissionMasterTableAdapter != null)
            {
                DataRow[] rowArray89 = dataSet.AdminPermissionMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray89 != null) && (0 < rowArray89.Length))
                {
                    num += this._adminPermissionMasterTableAdapter.Update(rowArray89);
                    allChangedRows.AddRange(rowArray89);
                }
            }
            if (this._staffPermissionMasterTableAdapter != null)
            {
                DataRow[] rowArray90 = dataSet.StaffPermissionMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray90 != null) && (0 < rowArray90.Length))
                {
                    num += this._staffPermissionMasterTableAdapter.Update(rowArray90);
                    allChangedRows.AddRange(rowArray90);
                }
            }
            if (this._clientPermissionMasterTableAdapter != null)
            {
                DataRow[] rowArray91 = dataSet.ClientPermissionMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray91 != null) && (0 < rowArray91.Length))
                {
                    num += this._clientPermissionMasterTableAdapter.Update(rowArray91);
                    allChangedRows.AddRange(rowArray91);
                }
            }
            if (this._templateMasterTableAdapter != null)
            {
                DataRow[] rowArray92 = dataSet.TemplateMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray92 != null) && (0 < rowArray92.Length))
                {
                    num += this._templateMasterTableAdapter.Update(rowArray92);
                    allChangedRows.AddRange(rowArray92);
                }
            }
            if (this._templateSettingsTableAdapter != null)
            {
                DataRow[] rowArray93 = dataSet.TemplateSettings.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray93 != null) && (0 < rowArray93.Length))
                {
                    num += this._templateSettingsTableAdapter.Update(rowArray93);
                    allChangedRows.AddRange(rowArray93);
                }
            }
            if (this._miscellaneousMasterTableAdapter != null)
            {
                DataRow[] rowArray94 = dataSet.MiscellaneousMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray94 != null) && (0 < rowArray94.Length))
                {
                    num += this._miscellaneousMasterTableAdapter.Update(rowArray94);
                    allChangedRows.AddRange(rowArray94);
                }
            }
            if (this._newInvoiceEmailTemplateTableAdapter != null)
            {
                DataRow[] rowArray95 = dataSet.NewInvoiceEmailTemplate.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray95 != null) && (0 < rowArray95.Length))
                {
                    num += this._newInvoiceEmailTemplateTableAdapter.Update(rowArray95);
                    allChangedRows.AddRange(rowArray95);
                }
            }
            if (this._newEstimateEmailTemplateTableAdapter != null)
            {
                DataRow[] rowArray96 = dataSet.NewEstimateEmailTemplate.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray96 != null) && (0 < rowArray96.Length))
                {
                    num += this._newEstimateEmailTemplateTableAdapter.Update(rowArray96);
                    allChangedRows.AddRange(rowArray96);
                }
            }
            if (this._newCreditEmailTemplateTableAdapter != null)
            {
                DataRow[] rowArray97 = dataSet.NewCreditEmailTemplate.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray97 != null) && (0 < rowArray97.Length))
                {
                    num += this._newCreditEmailTemplateTableAdapter.Update(rowArray97);
                    allChangedRows.AddRange(rowArray97);
                }
            }
            if (this._newStaffEmailTemplateTableAdapter != null)
            {
                DataRow[] rowArray98 = dataSet.NewStaffEmailTemplate.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray98 != null) && (0 < rowArray98.Length))
                {
                    num += this._newStaffEmailTemplateTableAdapter.Update(rowArray98);
                    allChangedRows.AddRange(rowArray98);
                }
            }
            if (this._newClientEmailTemplateTableAdapter != null)
            {
                DataRow[] rowArray99 = dataSet.NewClientEmailTemplate.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray99 != null) && (0 < rowArray99.Length))
                {
                    num += this._newClientEmailTemplateTableAdapter.Update(rowArray99);
                    allChangedRows.AddRange(rowArray99);
                }
            }
            if (this._sMTPSettingsTableAdapter != null)
            {
                DataRow[] rowArray100 = dataSet.SMTPSettings.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray100 != null) && (0 < rowArray100.Length))
                {
                    num += this._sMTPSettingsTableAdapter.Update(rowArray100);
                    allChangedRows.AddRange(rowArray100);
                }
            }
            if (this._emailNotificationsTableAdapter != null)
            {
                DataRow[] rowArray101 = dataSet.EmailNotifications.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray101 != null) && (0 < rowArray101.Length))
                {
                    num += this._emailNotificationsTableAdapter.Update(rowArray101);
                    allChangedRows.AddRange(rowArray101);
                }
            }
            if (this._newPaymentEmailTemplateTableAdapter != null)
            {
                DataRow[] rowArray102 = dataSet.NewPaymentEmailTemplate.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray102 != null) && (0 < rowArray102.Length))
                {
                    num += this._newPaymentEmailTemplateTableAdapter.Update(rowArray102);
                    allChangedRows.AddRange(rowArray102);
                }
            }
            if (this._latePaymentReminderTemplateTableAdapter != null)
            {
                DataRow[] rowArray103 = dataSet.LatePaymentReminderTemplate.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray103 != null) && (0 < rowArray103.Length))
                {
                    num += this._latePaymentReminderTemplateTableAdapter.Update(rowArray103);
                    allChangedRows.AddRange(rowArray103);
                }
            }
            if (this._autoBillEmailTemplateTableAdapter != null)
            {
                DataRow[] rowArray104 = dataSet.AutoBillEmailTemplate.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray104 != null) && (0 < rowArray104.Length))
                {
                    num += this._autoBillEmailTemplateTableAdapter.Update(rowArray104);
                    allChangedRows.AddRange(rowArray104);
                }
            }
            if (this._aboutContentMasterTableAdapter != null)
            {
                DataRow[] rowArray105 = dataSet.AboutContentMaster.Select(null, null, DataViewRowState.Deleted);
                if ((rowArray105 != null) && (0 < rowArray105.Length))
                {
                    num += this._aboutContentMasterTableAdapter.Update(rowArray105);
                    allChangedRows.AddRange(rowArray105);
                }
            }
            return num;
        }
        
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private int UpdateInsertedRows(CloudAccountDA dataSet, List<DataRow> allAddedRows)
        {
            int num = 0;
            if (this._aboutContentMasterTableAdapter != null)
            {
                DataRow[] dataRows = dataSet.AboutContentMaster.Select(null, null, DataViewRowState.Added);
                if ((dataRows != null) && (0 < dataRows.Length))
                {
                    num += this._aboutContentMasterTableAdapter.Update(dataRows);
                    allAddedRows.AddRange(dataRows);
                }
            }
            if (this._autoBillEmailTemplateTableAdapter != null)
            {
                DataRow[] rowArray2 = dataSet.AutoBillEmailTemplate.Select(null, null, DataViewRowState.Added);
                if ((rowArray2 != null) && (0 < rowArray2.Length))
                {
                    num += this._autoBillEmailTemplateTableAdapter.Update(rowArray2);
                    allAddedRows.AddRange(rowArray2);
                }
            }
            if (this._latePaymentReminderTemplateTableAdapter != null)
            {
                DataRow[] rowArray3 = dataSet.LatePaymentReminderTemplate.Select(null, null, DataViewRowState.Added);
                if ((rowArray3 != null) && (0 < rowArray3.Length))
                {
                    num += this._latePaymentReminderTemplateTableAdapter.Update(rowArray3);
                    allAddedRows.AddRange(rowArray3);
                }
            }
            if (this._newPaymentEmailTemplateTableAdapter != null)
            {
                DataRow[] rowArray4 = dataSet.NewPaymentEmailTemplate.Select(null, null, DataViewRowState.Added);
                if ((rowArray4 != null) && (0 < rowArray4.Length))
                {
                    num += this._newPaymentEmailTemplateTableAdapter.Update(rowArray4);
                    allAddedRows.AddRange(rowArray4);
                }
            }
            if (this._emailNotificationsTableAdapter != null)
            {
                DataRow[] rowArray5 = dataSet.EmailNotifications.Select(null, null, DataViewRowState.Added);
                if ((rowArray5 != null) && (0 < rowArray5.Length))
                {
                    num += this._emailNotificationsTableAdapter.Update(rowArray5);
                    allAddedRows.AddRange(rowArray5);
                }
            }
            if (this._sMTPSettingsTableAdapter != null)
            {
                DataRow[] rowArray6 = dataSet.SMTPSettings.Select(null, null, DataViewRowState.Added);
                if ((rowArray6 != null) && (0 < rowArray6.Length))
                {
                    num += this._sMTPSettingsTableAdapter.Update(rowArray6);
                    allAddedRows.AddRange(rowArray6);
                }
            }
            if (this._newClientEmailTemplateTableAdapter != null)
            {
                DataRow[] rowArray7 = dataSet.NewClientEmailTemplate.Select(null, null, DataViewRowState.Added);
                if ((rowArray7 != null) && (0 < rowArray7.Length))
                {
                    num += this._newClientEmailTemplateTableAdapter.Update(rowArray7);
                    allAddedRows.AddRange(rowArray7);
                }
            }
            if (this._newStaffEmailTemplateTableAdapter != null)
            {
                DataRow[] rowArray8 = dataSet.NewStaffEmailTemplate.Select(null, null, DataViewRowState.Added);
                if ((rowArray8 != null) && (0 < rowArray8.Length))
                {
                    num += this._newStaffEmailTemplateTableAdapter.Update(rowArray8);
                    allAddedRows.AddRange(rowArray8);
                }
            }
            if (this._newCreditEmailTemplateTableAdapter != null)
            {
                DataRow[] rowArray9 = dataSet.NewCreditEmailTemplate.Select(null, null, DataViewRowState.Added);
                if ((rowArray9 != null) && (0 < rowArray9.Length))
                {
                    num += this._newCreditEmailTemplateTableAdapter.Update(rowArray9);
                    allAddedRows.AddRange(rowArray9);
                }
            }
            if (this._newEstimateEmailTemplateTableAdapter != null)
            {
                DataRow[] rowArray10 = dataSet.NewEstimateEmailTemplate.Select(null, null, DataViewRowState.Added);
                if ((rowArray10 != null) && (0 < rowArray10.Length))
                {
                    num += this._newEstimateEmailTemplateTableAdapter.Update(rowArray10);
                    allAddedRows.AddRange(rowArray10);
                }
            }
            if (this._newInvoiceEmailTemplateTableAdapter != null)
            {
                DataRow[] rowArray11 = dataSet.NewInvoiceEmailTemplate.Select(null, null, DataViewRowState.Added);
                if ((rowArray11 != null) && (0 < rowArray11.Length))
                {
                    num += this._newInvoiceEmailTemplateTableAdapter.Update(rowArray11);
                    allAddedRows.AddRange(rowArray11);
                }
            }
            if (this._miscellaneousMasterTableAdapter != null)
            {
                DataRow[] rowArray12 = dataSet.MiscellaneousMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray12 != null) && (0 < rowArray12.Length))
                {
                    num += this._miscellaneousMasterTableAdapter.Update(rowArray12);
                    allAddedRows.AddRange(rowArray12);
                }
            }
            if (this._templateSettingsTableAdapter != null)
            {
                DataRow[] rowArray13 = dataSet.TemplateSettings.Select(null, null, DataViewRowState.Added);
                if ((rowArray13 != null) && (0 < rowArray13.Length))
                {
                    num += this._templateSettingsTableAdapter.Update(rowArray13);
                    allAddedRows.AddRange(rowArray13);
                }
            }
            if (this._templateMasterTableAdapter != null)
            {
                DataRow[] rowArray14 = dataSet.TemplateMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray14 != null) && (0 < rowArray14.Length))
                {
                    num += this._templateMasterTableAdapter.Update(rowArray14);
                    allAddedRows.AddRange(rowArray14);
                }
            }
            if (this._clientPermissionMasterTableAdapter != null)
            {
                DataRow[] rowArray15 = dataSet.ClientPermissionMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray15 != null) && (0 < rowArray15.Length))
                {
                    num += this._clientPermissionMasterTableAdapter.Update(rowArray15);
                    allAddedRows.AddRange(rowArray15);
                }
            }
            if (this._staffPermissionMasterTableAdapter != null)
            {
                DataRow[] rowArray16 = dataSet.StaffPermissionMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray16 != null) && (0 < rowArray16.Length))
                {
                    num += this._staffPermissionMasterTableAdapter.Update(rowArray16);
                    allAddedRows.AddRange(rowArray16);
                }
            }
            if (this._adminPermissionMasterTableAdapter != null)
            {
                DataRow[] rowArray17 = dataSet.AdminPermissionMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray17 != null) && (0 < rowArray17.Length))
                {
                    num += this._adminPermissionMasterTableAdapter.Update(rowArray17);
                    allAddedRows.AddRange(rowArray17);
                }
            }
            if (this._estimateMasterTableAdapter != null)
            {
                DataRow[] rowArray18 = dataSet.EstimateMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray18 != null) && (0 < rowArray18.Length))
                {
                    num += this._estimateMasterTableAdapter.Update(rowArray18);
                    allAddedRows.AddRange(rowArray18);
                }
            }
            if (this._invoiceMasterTableAdapter != null)
            {
                DataRow[] rowArray19 = dataSet.InvoiceMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray19 != null) && (0 < rowArray19.Length))
                {
                    num += this._invoiceMasterTableAdapter.Update(rowArray19);
                    allAddedRows.AddRange(rowArray19);
                }
            }
            if (this._recurringMasterTableAdapter != null)
            {
                DataRow[] rowArray20 = dataSet.RecurringMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray20 != null) && (0 < rowArray20.Length))
                {
                    num += this._recurringMasterTableAdapter.Update(rowArray20);
                    allAddedRows.AddRange(rowArray20);
                }
            }
            if (this._frequencyMasterTableAdapter != null)
            {
                DataRow[] rowArray21 = dataSet.FrequencyMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray21 != null) && (0 < rowArray21.Length))
                {
                    num += this._frequencyMasterTableAdapter.Update(rowArray21);
                    allAddedRows.AddRange(rowArray21);
                }
            }
            if (this._accountantClientDetailTableAdapter != null)
            {
                DataRow[] rowArray22 = dataSet.AccountantClientDetail.Select(null, null, DataViewRowState.Added);
                if ((rowArray22 != null) && (0 < rowArray22.Length))
                {
                    num += this._accountantClientDetailTableAdapter.Update(rowArray22);
                    allAddedRows.AddRange(rowArray22);
                }
            }
            if (this._accountantMasterTableAdapter != null)
            {
                DataRow[] rowArray23 = dataSet.AccountantMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray23 != null) && (0 < rowArray23.Length))
                {
                    num += this._accountantMasterTableAdapter.Update(rowArray23);
                    allAddedRows.AddRange(rowArray23);
                }
            }
            if (this._creditHistoryDetailTableAdapter != null)
            {
                DataRow[] rowArray24 = dataSet.CreditHistoryDetail.Select(null, null, DataViewRowState.Added);
                if ((rowArray24 != null) && (0 < rowArray24.Length))
                {
                    num += this._creditHistoryDetailTableAdapter.Update(rowArray24);
                    allAddedRows.AddRange(rowArray24);
                }
            }
            if (this._creditMasterTableAdapter != null)
            {
                DataRow[] rowArray25 = dataSet.CreditMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray25 != null) && (0 < rowArray25.Length))
                {
                    num += this._creditMasterTableAdapter.Update(rowArray25);
                    allAddedRows.AddRange(rowArray25);
                }
            }
            if (this._timesheetMasterTableAdapter != null)
            {
                DataRow[] rowArray26 = dataSet.TimesheetMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray26 != null) && (0 < rowArray26.Length))
                {
                    num += this._timesheetMasterTableAdapter.Update(rowArray26);
                    allAddedRows.AddRange(rowArray26);
                }
            }
            if (this._expenseMasterTableAdapter != null)
            {
                DataRow[] rowArray27 = dataSet.ExpenseMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray27 != null) && (0 < rowArray27.Length))
                {
                    num += this._expenseMasterTableAdapter.Update(rowArray27);
                    allAddedRows.AddRange(rowArray27);
                }
            }
            if (this._invoiceDisputeHistoryTableAdapter != null)
            {
                DataRow[] rowArray28 = dataSet.InvoiceDisputeHistory.Select(null, null, DataViewRowState.Added);
                if ((rowArray28 != null) && (0 < rowArray28.Length))
                {
                    num += this._invoiceDisputeHistoryTableAdapter.Update(rowArray28);
                    allAddedRows.AddRange(rowArray28);
                }
            }
            if (this._estimateDisputeHistoryTableAdapter != null)
            {
                DataRow[] rowArray29 = dataSet.EstimateDisputeHistory.Select(null, null, DataViewRowState.Added);
                if ((rowArray29 != null) && (0 < rowArray29.Length))
                {
                    num += this._estimateDisputeHistoryTableAdapter.Update(rowArray29);
                    allAddedRows.AddRange(rowArray29);
                }
            }
            if (this._doyinGoSupportDiscussionTableAdapter != null)
            {
                DataRow[] rowArray30 = dataSet.DoyinGoSupportDiscussion.Select(null, null, DataViewRowState.Added);
                if ((rowArray30 != null) && (0 < rowArray30.Length))
                {
                    num += this._doyinGoSupportDiscussionTableAdapter.Update(rowArray30);
                    allAddedRows.AddRange(rowArray30);
                }
            }
            if (this._doyinGoTicketAttachmentTableAdapter != null)
            {
                DataRow[] rowArray31 = dataSet.DoyinGoTicketAttachment.Select(null, null, DataViewRowState.Added);
                if ((rowArray31 != null) && (0 < rowArray31.Length))
                {
                    num += this._doyinGoTicketAttachmentTableAdapter.Update(rowArray31);
                    allAddedRows.AddRange(rowArray31);
                }
            }
            if (this._doyinGoSupportTicketTableAdapter != null)
            {
                DataRow[] rowArray32 = dataSet.DoyinGoSupportTicket.Select(null, null, DataViewRowState.Added);
                if ((rowArray32 != null) && (0 < rowArray32.Length))
                {
                    num += this._doyinGoSupportTicketTableAdapter.Update(rowArray32);
                    allAddedRows.AddRange(rowArray32);
                }
            }
            if (this._supportDepartmentMasterTableAdapter != null)
            {
                DataRow[] rowArray33 = dataSet.SupportDepartmentMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray33 != null) && (0 < rowArray33.Length))
                {
                    num += this._supportDepartmentMasterTableAdapter.Update(rowArray33);
                    allAddedRows.AddRange(rowArray33);
                }
            }
            if (this._freePackageSettingsTableAdapter != null)
            {
                DataRow[] rowArray34 = dataSet.FreePackageSettings.Select(null, null, DataViewRowState.Added);
                if ((rowArray34 != null) && (0 < rowArray34.Length))
                {
                    num += this._freePackageSettingsTableAdapter.Update(rowArray34);
                    allAddedRows.AddRange(rowArray34);
                }
            }
            if (this._companyPackageMasterTableAdapter != null)
            {
                DataRow[] rowArray35 = dataSet.CompanyPackageMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray35 != null) && (0 < rowArray35.Length))
                {
                    num += this._companyPackageMasterTableAdapter.Update(rowArray35);
                    allAddedRows.AddRange(rowArray35);
                }
            }
            if (this._cloudPackageMasterTableAdapter != null)
            {
                DataRow[] rowArray36 = dataSet.CloudPackageMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray36 != null) && (0 < rowArray36.Length))
                {
                    num += this._cloudPackageMasterTableAdapter.Update(rowArray36);
                    allAddedRows.AddRange(rowArray36);
                }
            }
            if (this._companyPaymentMasterTableAdapter != null)
            {
                DataRow[] rowArray37 = dataSet.CompanyPaymentMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray37 != null) && (0 < rowArray37.Length))
                {
                    num += this._companyPaymentMasterTableAdapter.Update(rowArray37);
                    allAddedRows.AddRange(rowArray37);
                }
            }
            if (this._companyPaypalMasterTableAdapter != null)
            {
                DataRow[] rowArray38 = dataSet.CompanyPaypalMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray38 != null) && (0 < rowArray38.Length))
                {
                    num += this._companyPaypalMasterTableAdapter.Update(rowArray38);
                    allAddedRows.AddRange(rowArray38);
                }
            }
            if (this._paymentGatewayPaypalMasterTableAdapter != null)
            {
                DataRow[] rowArray39 = dataSet.PaymentGatewayPaypalMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray39 != null) && (0 < rowArray39.Length))
                {
                    num += this._paymentGatewayPaypalMasterTableAdapter.Update(rowArray39);
                    allAddedRows.AddRange(rowArray39);
                }
            }
            if (this._paymentGatewayMasterTableAdapter != null)
            {
                DataRow[] rowArray40 = dataSet.PaymentGatewayMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray40 != null) && (0 < rowArray40.Length))
                {
                    num += this._paymentGatewayMasterTableAdapter.Update(rowArray40);
                    allAddedRows.AddRange(rowArray40);
                }
            }
            if (this._subCategoryMasterTableAdapter != null)
            {
                DataRow[] rowArray41 = dataSet.SubCategoryMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray41 != null) && (0 < rowArray41.Length))
                {
                    num += this._subCategoryMasterTableAdapter.Update(rowArray41);
                    allAddedRows.AddRange(rowArray41);
                }
            }
            if (this._termServiceContentTableAdapter != null)
            {
                DataRow[] rowArray42 = dataSet.TermServiceContent.Select(null, null, DataViewRowState.Added);
                if ((rowArray42 != null) && (0 < rowArray42.Length))
                {
                    num += this._termServiceContentTableAdapter.Update(rowArray42);
                    allAddedRows.AddRange(rowArray42);
                }
            }
            if (this._categoryMasterTableAdapter != null)
            {
                DataRow[] rowArray43 = dataSet.CategoryMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray43 != null) && (0 < rowArray43.Length))
                {
                    num += this._categoryMasterTableAdapter.Update(rowArray43);
                    allAddedRows.AddRange(rowArray43);
                }
            }
            if (this._recurringTaskDetailTableAdapter != null)
            {
                DataRow[] rowArray44 = dataSet.RecurringTaskDetail.Select(null, null, DataViewRowState.Added);
                if ((rowArray44 != null) && (0 < rowArray44.Length))
                {
                    num += this._recurringTaskDetailTableAdapter.Update(rowArray44);
                    allAddedRows.AddRange(rowArray44);
                }
            }
            if (this._companyLoginMasterTableAdapter != null)
            {
                DataRow[] rowArray45 = dataSet.CompanyLoginMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray45 != null) && (0 < rowArray45.Length))
                {
                    num += this._companyLoginMasterTableAdapter.Update(rowArray45);
                    allAddedRows.AddRange(rowArray45);
                }
            }
            if (this._moduleFormMasterTableAdapter != null)
            {
                DataRow[] rowArray46 = dataSet.ModuleFormMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray46 != null) && (0 < rowArray46.Length))
                {
                    num += this._moduleFormMasterTableAdapter.Update(rowArray46);
                    allAddedRows.AddRange(rowArray46);
                }
            }
            if (this._masterAdminRightsMasterTableAdapter != null)
            {
                DataRow[] rowArray47 = dataSet.MasterAdminRightsMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray47 != null) && (0 < rowArray47.Length))
                {
                    num += this._masterAdminRightsMasterTableAdapter.Update(rowArray47);
                    allAddedRows.AddRange(rowArray47);
                }
            }
            if (this._formMasterTableAdapter != null)
            {
                DataRow[] rowArray48 = dataSet.FormMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray48 != null) && (0 < rowArray48.Length))
                {
                    num += this._formMasterTableAdapter.Update(rowArray48);
                    allAddedRows.AddRange(rowArray48);
                }
            }
            if (this._companyPackageDetailsTableAdapter != null)
            {
                DataRow[] rowArray49 = dataSet.CompanyPackageDetails.Select(null, null, DataViewRowState.Added);
                if ((rowArray49 != null) && (0 < rowArray49.Length))
                {
                    num += this._companyPackageDetailsTableAdapter.Update(rowArray49);
                    allAddedRows.AddRange(rowArray49);
                }
            }
            if (this._packageMasterTableAdapter != null)
            {
                DataRow[] rowArray50 = dataSet.PackageMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray50 != null) && (0 < rowArray50.Length))
                {
                    num += this._packageMasterTableAdapter.Update(rowArray50);
                    allAddedRows.AddRange(rowArray50);
                }
            }
            if (this._packageDetailsTableAdapter != null)
            {
                DataRow[] rowArray51 = dataSet.PackageDetails.Select(null, null, DataViewRowState.Added);
                if ((rowArray51 != null) && (0 < rowArray51.Length))
                {
                    num += this._packageDetailsTableAdapter.Update(rowArray51);
                    allAddedRows.AddRange(rowArray51);
                }
            }
            if (this._moduleMasterTableAdapter != null)
            {
                DataRow[] rowArray52 = dataSet.ModuleMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray52 != null) && (0 < rowArray52.Length))
                {
                    num += this._moduleMasterTableAdapter.Update(rowArray52);
                    allAddedRows.AddRange(rowArray52);
                }
            }
            if (this._masterAdminLoginMasterTableAdapter != null)
            {
                DataRow[] rowArray53 = dataSet.MasterAdminLoginMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray53 != null) && (0 < rowArray53.Length))
                {
                    num += this._masterAdminLoginMasterTableAdapter.Update(rowArray53);
                    allAddedRows.AddRange(rowArray53);
                }
            }
            if (this._footerContentTableAdapter != null)
            {
                DataRow[] rowArray54 = dataSet.FooterContent.Select(null, null, DataViewRowState.Added);
                if ((rowArray54 != null) && (0 < rowArray54.Length))
                {
                    num += this._footerContentTableAdapter.Update(rowArray54);
                    allAddedRows.AddRange(rowArray54);
                }
            }
            if (this._inquiryMasterTableAdapter != null)
            {
                DataRow[] rowArray55 = dataSet.InquiryMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray55 != null) && (0 < rowArray55.Length))
                {
                    num += this._inquiryMasterTableAdapter.Update(rowArray55);
                    allAddedRows.AddRange(rowArray55);
                }
            }
            if (this._testimonialsMasterTableAdapter != null)
            {
                DataRow[] rowArray56 = dataSet.TestimonialsMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray56 != null) && (0 < rowArray56.Length))
                {
                    num += this._testimonialsMasterTableAdapter.Update(rowArray56);
                    allAddedRows.AddRange(rowArray56);
                }
            }
            if (this._clientMasterTableAdapter != null)
            {
                DataRow[] rowArray57 = dataSet.ClientMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray57 != null) && (0 < rowArray57.Length))
                {
                    num += this._clientMasterTableAdapter.Update(rowArray57);
                    allAddedRows.AddRange(rowArray57);
                }
            }
            if (this._currencyMasterTableAdapter != null)
            {
                DataRow[] rowArray58 = dataSet.CurrencyMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray58 != null) && (0 < rowArray58.Length))
                {
                    num += this._currencyMasterTableAdapter.Update(rowArray58);
                    allAddedRows.AddRange(rowArray58);
                }
            }
            if (this._cityMasterTableAdapter != null)
            {
                DataRow[] rowArray59 = dataSet.CityMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray59 != null) && (0 < rowArray59.Length))
                {
                    num += this._cityMasterTableAdapter.Update(rowArray59);
                    allAddedRows.AddRange(rowArray59);
                }
            }
            if (this._stateMasterTableAdapter != null)
            {
                DataRow[] rowArray60 = dataSet.StateMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray60 != null) && (0 < rowArray60.Length))
                {
                    num += this._stateMasterTableAdapter.Update(rowArray60);
                    allAddedRows.AddRange(rowArray60);
                }
            }
            if (this._countryMasterTableAdapter != null)
            {
                DataRow[] rowArray61 = dataSet.CountryMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray61 != null) && (0 < rowArray61.Length))
                {
                    num += this._countryMasterTableAdapter.Update(rowArray61);
                    allAddedRows.AddRange(rowArray61);
                }
            }
            if (this._featureMasterTableAdapter != null)
            {
                DataRow[] rowArray62 = dataSet.FeatureMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray62 != null) && (0 < rowArray62.Length))
                {
                    num += this._featureMasterTableAdapter.Update(rowArray62);
                    allAddedRows.AddRange(rowArray62);
                }
            }
            if (this._contactMasterTableAdapter != null)
            {
                DataRow[] rowArray63 = dataSet.ContactMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray63 != null) && (0 < rowArray63.Length))
                {
                    num += this._contactMasterTableAdapter.Update(rowArray63);
                    allAddedRows.AddRange(rowArray63);
                }
            }
            if (this._homePageSliderTableAdapter != null)
            {
                DataRow[] rowArray64 = dataSet.HomePageSlider.Select(null, null, DataViewRowState.Added);
                if ((rowArray64 != null) && (0 < rowArray64.Length))
                {
                    num += this._homePageSliderTableAdapter.Update(rowArray64);
                    allAddedRows.AddRange(rowArray64);
                }
            }
            if (this._fAQMasterTableAdapter != null)
            {
                DataRow[] rowArray65 = dataSet.FAQMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray65 != null) && (0 < rowArray65.Length))
                {
                    num += this._fAQMasterTableAdapter.Update(rowArray65);
                    allAddedRows.AddRange(rowArray65);
                }
            }
            if (this._fAQCategoryMasterTableAdapter != null)
            {
                DataRow[] rowArray66 = dataSet.FAQCategoryMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray66 != null) && (0 < rowArray66.Length))
                {
                    num += this._fAQCategoryMasterTableAdapter.Update(rowArray66);
                    allAddedRows.AddRange(rowArray66);
                }
            }
            if (this._homeMasterTableAdapter != null)
            {
                DataRow[] rowArray67 = dataSet.HomeMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray67 != null) && (0 < rowArray67.Length))
                {
                    num += this._homeMasterTableAdapter.Update(rowArray67);
                    allAddedRows.AddRange(rowArray67);
                }
            }
            if (this._featureContentMasterTableAdapter != null)
            {
                DataRow[] rowArray68 = dataSet.FeatureContentMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray68 != null) && (0 < rowArray68.Length))
                {
                    num += this._featureContentMasterTableAdapter.Update(rowArray68);
                    allAddedRows.AddRange(rowArray68);
                }
            }
            if (this._featureCategoryMasterTableAdapter != null)
            {
                DataRow[] rowArray69 = dataSet.FeatureCategoryMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray69 != null) && (0 < rowArray69.Length))
                {
                    num += this._featureCategoryMasterTableAdapter.Update(rowArray69);
                    allAddedRows.AddRange(rowArray69);
                }
            }
            if (this._aboutCategoryMasterTableAdapter != null)
            {
                DataRow[] rowArray70 = dataSet.AboutCategoryMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray70 != null) && (0 < rowArray70.Length))
                {
                    num += this._aboutCategoryMasterTableAdapter.Update(rowArray70);
                    allAddedRows.AddRange(rowArray70);
                }
            }
            if (this._companyAdminRightsMasterTableAdapter != null)
            {
                DataRow[] rowArray71 = dataSet.CompanyAdminRightsMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray71 != null) && (0 < rowArray71.Length))
                {
                    num += this._companyAdminRightsMasterTableAdapter.Update(rowArray71);
                    allAddedRows.AddRange(rowArray71);
                }
            }
            if (this._packageUpgradeRequestMasterTableAdapter != null)
            {
                DataRow[] rowArray72 = dataSet.PackageUpgradeRequestMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray72 != null) && (0 < rowArray72.Length))
                {
                    num += this._packageUpgradeRequestMasterTableAdapter.Update(rowArray72);
                    allAddedRows.AddRange(rowArray72);
                }
            }
            if (this._bussinessMasterTableAdapter != null)
            {
                DataRow[] rowArray73 = dataSet.BussinessMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray73 != null) && (0 < rowArray73.Length))
                {
                    num += this._bussinessMasterTableAdapter.Update(rowArray73);
                    allAddedRows.AddRange(rowArray73);
                }
            }
            if (this._currentAccountMasterTableAdapter != null)
            {
                DataRow[] rowArray74 = dataSet.CurrentAccountMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray74 != null) && (0 < rowArray74.Length))
                {
                    num += this._currentAccountMasterTableAdapter.Update(rowArray74);
                    allAddedRows.AddRange(rowArray74);
                }
            }
            if (this._invoiceDefaultTermsMasterTableAdapter != null)
            {
                DataRow[] rowArray75 = dataSet.InvoiceDefaultTermsMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray75 != null) && (0 < rowArray75.Length))
                {
                    num += this._invoiceDefaultTermsMasterTableAdapter.Update(rowArray75);
                    allAddedRows.AddRange(rowArray75);
                }
            }
            if (this._estimateDefaultTermsMasterTableAdapter != null)
            {
                DataRow[] rowArray76 = dataSet.EstimateDefaultTermsMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray76 != null) && (0 < rowArray76.Length))
                {
                    num += this._estimateDefaultTermsMasterTableAdapter.Update(rowArray76);
                    allAddedRows.AddRange(rowArray76);
                }
            }
            if (this._creditDefaultTermsMasterTableAdapter != null)
            {
                DataRow[] rowArray77 = dataSet.CreditDefaultTermsMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray77 != null) && (0 < rowArray77.Length))
                {
                    num += this._creditDefaultTermsMasterTableAdapter.Update(rowArray77);
                    allAddedRows.AddRange(rowArray77);
                }
            }
            if (this._companyClientMasterTableAdapter != null)
            {
                DataRow[] rowArray78 = dataSet.CompanyClientMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray78 != null) && (0 < rowArray78.Length))
                {
                    num += this._companyClientMasterTableAdapter.Update(rowArray78);
                    allAddedRows.AddRange(rowArray78);
                }
            }
            if (this._companyClientContactDetailTableAdapter != null)
            {
                DataRow[] rowArray79 = dataSet.CompanyClientContactDetail.Select(null, null, DataViewRowState.Added);
                if ((rowArray79 != null) && (0 < rowArray79.Length))
                {
                    num += this._companyClientContactDetailTableAdapter.Update(rowArray79);
                    allAddedRows.AddRange(rowArray79);
                }
            }
            if (this._creditItemDetailTableAdapter != null)
            {
                DataRow[] rowArray80 = dataSet.CreditItemDetail.Select(null, null, DataViewRowState.Added);
                if ((rowArray80 != null) && (0 < rowArray80.Length))
                {
                    num += this._creditItemDetailTableAdapter.Update(rowArray80);
                    allAddedRows.AddRange(rowArray80);
                }
            }
            if (this._creditTaskDetailTableAdapter != null)
            {
                DataRow[] rowArray81 = dataSet.CreditTaskDetail.Select(null, null, DataViewRowState.Added);
                if ((rowArray81 != null) && (0 < rowArray81.Length))
                {
                    num += this._creditTaskDetailTableAdapter.Update(rowArray81);
                    allAddedRows.AddRange(rowArray81);
                }
            }
            if (this._estimateItemDetailTableAdapter != null)
            {
                DataRow[] rowArray82 = dataSet.EstimateItemDetail.Select(null, null, DataViewRowState.Added);
                if ((rowArray82 != null) && (0 < rowArray82.Length))
                {
                    num += this._estimateItemDetailTableAdapter.Update(rowArray82);
                    allAddedRows.AddRange(rowArray82);
                }
            }
            if (this._estimateTaskDetailTableAdapter != null)
            {
                DataRow[] rowArray83 = dataSet.EstimateTaskDetail.Select(null, null, DataViewRowState.Added);
                if ((rowArray83 != null) && (0 < rowArray83.Length))
                {
                    num += this._estimateTaskDetailTableAdapter.Update(rowArray83);
                    allAddedRows.AddRange(rowArray83);
                }
            }
            if (this._paymentMasterTableAdapter != null)
            {
                DataRow[] rowArray84 = dataSet.PaymentMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray84 != null) && (0 < rowArray84.Length))
                {
                    num += this._paymentMasterTableAdapter.Update(rowArray84);
                    allAddedRows.AddRange(rowArray84);
                }
            }
            if (this._companyMasterTableAdapter != null)
            {
                DataRow[] rowArray85 = dataSet.CompanyMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray85 != null) && (0 < rowArray85.Length))
                {
                    num += this._companyMasterTableAdapter.Update(rowArray85);
                    allAddedRows.AddRange(rowArray85);
                }
            }
            if (this._invoiceTaskDetailTableAdapter != null)
            {
                DataRow[] rowArray86 = dataSet.InvoiceTaskDetail.Select(null, null, DataViewRowState.Added);
                if ((rowArray86 != null) && (0 < rowArray86.Length))
                {
                    num += this._invoiceTaskDetailTableAdapter.Update(rowArray86);
                    allAddedRows.AddRange(rowArray86);
                }
            }
            if (this._invoiceItemDetailTableAdapter != null)
            {
                DataRow[] rowArray87 = dataSet.InvoiceItemDetail.Select(null, null, DataViewRowState.Added);
                if ((rowArray87 != null) && (0 < rowArray87.Length))
                {
                    num += this._invoiceItemDetailTableAdapter.Update(rowArray87);
                    allAddedRows.AddRange(rowArray87);
                }
            }
            if (this._recurringItemDetailTableAdapter != null)
            {
                DataRow[] rowArray88 = dataSet.RecurringItemDetail.Select(null, null, DataViewRowState.Added);
                if ((rowArray88 != null) && (0 < rowArray88.Length))
                {
                    num += this._recurringItemDetailTableAdapter.Update(rowArray88);
                    allAddedRows.AddRange(rowArray88);
                }
            }
            if (this._securityQuestionMasterTableAdapter != null)
            {
                DataRow[] rowArray89 = dataSet.SecurityQuestionMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray89 != null) && (0 < rowArray89.Length))
                {
                    num += this._securityQuestionMasterTableAdapter.Update(rowArray89);
                    allAddedRows.AddRange(rowArray89);
                }
            }
            if (this._projectMasterTableAdapter != null)
            {
                DataRow[] rowArray90 = dataSet.ProjectMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray90 != null) && (0 < rowArray90.Length))
                {
                    num += this._projectMasterTableAdapter.Update(rowArray90);
                    allAddedRows.AddRange(rowArray90);
                }
            }
            if (this._projectTaskDetailTableAdapter != null)
            {
                DataRow[] rowArray91 = dataSet.ProjectTaskDetail.Select(null, null, DataViewRowState.Added);
                if ((rowArray91 != null) && (0 < rowArray91.Length))
                {
                    num += this._projectTaskDetailTableAdapter.Update(rowArray91);
                    allAddedRows.AddRange(rowArray91);
                }
            }
            if (this._staffProjectDetailTableAdapter != null)
            {
                DataRow[] rowArray92 = dataSet.StaffProjectDetail.Select(null, null, DataViewRowState.Added);
                if ((rowArray92 != null) && (0 < rowArray92.Length))
                {
                    num += this._staffProjectDetailTableAdapter.Update(rowArray92);
                    allAddedRows.AddRange(rowArray92);
                }
            }
            if (this._contractorProjectDetailTableAdapter != null)
            {
                DataRow[] rowArray93 = dataSet.ContractorProjectDetail.Select(null, null, DataViewRowState.Added);
                if ((rowArray93 != null) && (0 < rowArray93.Length))
                {
                    num += this._contractorProjectDetailTableAdapter.Update(rowArray93);
                    allAddedRows.AddRange(rowArray93);
                }
            }
            if (this._taxMasterTableAdapter != null)
            {
                DataRow[] rowArray94 = dataSet.TaxMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray94 != null) && (0 < rowArray94.Length))
                {
                    num += this._taxMasterTableAdapter.Update(rowArray94);
                    allAddedRows.AddRange(rowArray94);
                }
            }
            if (this._itemMasterTableAdapter != null)
            {
                DataRow[] rowArray95 = dataSet.ItemMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray95 != null) && (0 < rowArray95.Length))
                {
                    num += this._itemMasterTableAdapter.Update(rowArray95);
                    allAddedRows.AddRange(rowArray95);
                }
            }
            if (this._contractorMasterTableAdapter != null)
            {
                DataRow[] rowArray96 = dataSet.ContractorMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray96 != null) && (0 < rowArray96.Length))
                {
                    num += this._contractorMasterTableAdapter.Update(rowArray96);
                    allAddedRows.AddRange(rowArray96);
                }
            }
            if (this._taskMasterTableAdapter != null)
            {
                DataRow[] rowArray97 = dataSet.TaskMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray97 != null) && (0 < rowArray97.Length))
                {
                    num += this._taskMasterTableAdapter.Update(rowArray97);
                    allAddedRows.AddRange(rowArray97);
                }
            }
            if (this._staffMasterTableAdapter != null)
            {
                DataRow[] rowArray98 = dataSet.StaffMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray98 != null) && (0 < rowArray98.Length))
                {
                    num += this._staffMasterTableAdapter.Update(rowArray98);
                    allAddedRows.AddRange(rowArray98);
                }
            }
            if (this._packageFeatureMasterTableAdapter != null)
            {
                DataRow[] rowArray99 = dataSet.PackageFeatureMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray99 != null) && (0 < rowArray99.Length))
                {
                    num += this._packageFeatureMasterTableAdapter.Update(rowArray99);
                    allAddedRows.AddRange(rowArray99);
                }
            }
            if (this._cloudPackageDetailsTableAdapter != null)
            {
                DataRow[] rowArray100 = dataSet.CloudPackageDetails.Select(null, null, DataViewRowState.Added);
                if ((rowArray100 != null) && (0 < rowArray100.Length))
                {
                    num += this._cloudPackageDetailsTableAdapter.Update(rowArray100);
                    allAddedRows.AddRange(rowArray100);
                }
            }
            if (this._packageModuleMasterTableAdapter != null)
            {
                DataRow[] rowArray101 = dataSet.PackageModuleMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray101 != null) && (0 < rowArray101.Length))
                {
                    num += this._packageModuleMasterTableAdapter.Update(rowArray101);
                    allAddedRows.AddRange(rowArray101);
                }
            }
            if (this._runningFromMasterTableAdapter != null)
            {
                DataRow[] rowArray102 = dataSet.RunningFromMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray102 != null) && (0 < rowArray102.Length))
                {
                    num += this._runningFromMasterTableAdapter.Update(rowArray102);
                    allAddedRows.AddRange(rowArray102);
                }
            }
            if (this._industryMasterTableAdapter != null)
            {
                DataRow[] rowArray103 = dataSet.IndustryMaster.Select(null, null, DataViewRowState.Added);
                if ((rowArray103 != null) && (0 < rowArray103.Length))
                {
                    num += this._industryMasterTableAdapter.Update(rowArray103);
                    allAddedRows.AddRange(rowArray103);
                }
            }
            if (this._staffClientAssignDetailTableAdapter != null)
            {
                DataRow[] rowArray104 = dataSet.StaffClientAssignDetail.Select(null, null, DataViewRowState.Added);
                if ((rowArray104 != null) && (0 < rowArray104.Length))
                {
                    num += this._staffClientAssignDetailTableAdapter.Update(rowArray104);
                    allAddedRows.AddRange(rowArray104);
                }
            }
            if (this._privacyPolicyContentTableAdapter != null)
            {
                DataRow[] rowArray105 = dataSet.PrivacyPolicyContent.Select(null, null, DataViewRowState.Added);
                if ((rowArray105 != null) && (0 < rowArray105.Length))
                {
                    num += this._privacyPolicyContentTableAdapter.Update(rowArray105);
                    allAddedRows.AddRange(rowArray105);
                }
            }
            return num;
        }
        
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        private int UpdateUpdatedRows(CloudAccountDA dataSet, List<DataRow> allChangedRows, List<DataRow> allAddedRows)
        {
            int num = 0;
            if (this._aboutContentMasterTableAdapter != null)
            {
                DataRow[] updatedRows = dataSet.AboutContentMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                updatedRows = this.GetRealUpdatedRows(updatedRows, allAddedRows);
                if ((updatedRows != null) && (0 < updatedRows.Length))
                {
                    num += this._aboutContentMasterTableAdapter.Update(updatedRows);
                    allChangedRows.AddRange(updatedRows);
                }
            }
            if (this._autoBillEmailTemplateTableAdapter != null)
            {
                DataRow[] realUpdatedRows = dataSet.AutoBillEmailTemplate.Select(null, null, DataViewRowState.ModifiedCurrent);
                realUpdatedRows = this.GetRealUpdatedRows(realUpdatedRows, allAddedRows);
                if ((realUpdatedRows != null) && (0 < realUpdatedRows.Length))
                {
                    num += this._autoBillEmailTemplateTableAdapter.Update(realUpdatedRows);
                    allChangedRows.AddRange(realUpdatedRows);
                }
            }
            if (this._latePaymentReminderTemplateTableAdapter != null)
            {
                DataRow[] rowArray3 = dataSet.LatePaymentReminderTemplate.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray3 = this.GetRealUpdatedRows(rowArray3, allAddedRows);
                if ((rowArray3 != null) && (0 < rowArray3.Length))
                {
                    num += this._latePaymentReminderTemplateTableAdapter.Update(rowArray3);
                    allChangedRows.AddRange(rowArray3);
                }
            }
            if (this._newPaymentEmailTemplateTableAdapter != null)
            {
                DataRow[] rowArray4 = dataSet.NewPaymentEmailTemplate.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray4 = this.GetRealUpdatedRows(rowArray4, allAddedRows);
                if ((rowArray4 != null) && (0 < rowArray4.Length))
                {
                    num += this._newPaymentEmailTemplateTableAdapter.Update(rowArray4);
                    allChangedRows.AddRange(rowArray4);
                }
            }
            if (this._emailNotificationsTableAdapter != null)
            {
                DataRow[] rowArray5 = dataSet.EmailNotifications.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray5 = this.GetRealUpdatedRows(rowArray5, allAddedRows);
                if ((rowArray5 != null) && (0 < rowArray5.Length))
                {
                    num += this._emailNotificationsTableAdapter.Update(rowArray5);
                    allChangedRows.AddRange(rowArray5);
                }
            }
            if (this._sMTPSettingsTableAdapter != null)
            {
                DataRow[] rowArray6 = dataSet.SMTPSettings.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray6 = this.GetRealUpdatedRows(rowArray6, allAddedRows);
                if ((rowArray6 != null) && (0 < rowArray6.Length))
                {
                    num += this._sMTPSettingsTableAdapter.Update(rowArray6);
                    allChangedRows.AddRange(rowArray6);
                }
            }
            if (this._newClientEmailTemplateTableAdapter != null)
            {
                DataRow[] rowArray7 = dataSet.NewClientEmailTemplate.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray7 = this.GetRealUpdatedRows(rowArray7, allAddedRows);
                if ((rowArray7 != null) && (0 < rowArray7.Length))
                {
                    num += this._newClientEmailTemplateTableAdapter.Update(rowArray7);
                    allChangedRows.AddRange(rowArray7);
                }
            }
            if (this._newStaffEmailTemplateTableAdapter != null)
            {
                DataRow[] rowArray8 = dataSet.NewStaffEmailTemplate.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray8 = this.GetRealUpdatedRows(rowArray8, allAddedRows);
                if ((rowArray8 != null) && (0 < rowArray8.Length))
                {
                    num += this._newStaffEmailTemplateTableAdapter.Update(rowArray8);
                    allChangedRows.AddRange(rowArray8);
                }
            }
            if (this._newCreditEmailTemplateTableAdapter != null)
            {
                DataRow[] rowArray9 = dataSet.NewCreditEmailTemplate.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray9 = this.GetRealUpdatedRows(rowArray9, allAddedRows);
                if ((rowArray9 != null) && (0 < rowArray9.Length))
                {
                    num += this._newCreditEmailTemplateTableAdapter.Update(rowArray9);
                    allChangedRows.AddRange(rowArray9);
                }
            }
            if (this._newEstimateEmailTemplateTableAdapter != null)
            {
                DataRow[] rowArray10 = dataSet.NewEstimateEmailTemplate.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray10 = this.GetRealUpdatedRows(rowArray10, allAddedRows);
                if ((rowArray10 != null) && (0 < rowArray10.Length))
                {
                    num += this._newEstimateEmailTemplateTableAdapter.Update(rowArray10);
                    allChangedRows.AddRange(rowArray10);
                }
            }
            if (this._newInvoiceEmailTemplateTableAdapter != null)
            {
                DataRow[] rowArray11 = dataSet.NewInvoiceEmailTemplate.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray11 = this.GetRealUpdatedRows(rowArray11, allAddedRows);
                if ((rowArray11 != null) && (0 < rowArray11.Length))
                {
                    num += this._newInvoiceEmailTemplateTableAdapter.Update(rowArray11);
                    allChangedRows.AddRange(rowArray11);
                }
            }
            if (this._miscellaneousMasterTableAdapter != null)
            {
                DataRow[] rowArray12 = dataSet.MiscellaneousMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray12 = this.GetRealUpdatedRows(rowArray12, allAddedRows);
                if ((rowArray12 != null) && (0 < rowArray12.Length))
                {
                    num += this._miscellaneousMasterTableAdapter.Update(rowArray12);
                    allChangedRows.AddRange(rowArray12);
                }
            }
            if (this._templateSettingsTableAdapter != null)
            {
                DataRow[] rowArray13 = dataSet.TemplateSettings.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray13 = this.GetRealUpdatedRows(rowArray13, allAddedRows);
                if ((rowArray13 != null) && (0 < rowArray13.Length))
                {
                    num += this._templateSettingsTableAdapter.Update(rowArray13);
                    allChangedRows.AddRange(rowArray13);
                }
            }
            if (this._templateMasterTableAdapter != null)
            {
                DataRow[] rowArray14 = dataSet.TemplateMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray14 = this.GetRealUpdatedRows(rowArray14, allAddedRows);
                if ((rowArray14 != null) && (0 < rowArray14.Length))
                {
                    num += this._templateMasterTableAdapter.Update(rowArray14);
                    allChangedRows.AddRange(rowArray14);
                }
            }
            if (this._clientPermissionMasterTableAdapter != null)
            {
                DataRow[] rowArray15 = dataSet.ClientPermissionMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray15 = this.GetRealUpdatedRows(rowArray15, allAddedRows);
                if ((rowArray15 != null) && (0 < rowArray15.Length))
                {
                    num += this._clientPermissionMasterTableAdapter.Update(rowArray15);
                    allChangedRows.AddRange(rowArray15);
                }
            }
            if (this._staffPermissionMasterTableAdapter != null)
            {
                DataRow[] rowArray16 = dataSet.StaffPermissionMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray16 = this.GetRealUpdatedRows(rowArray16, allAddedRows);
                if ((rowArray16 != null) && (0 < rowArray16.Length))
                {
                    num += this._staffPermissionMasterTableAdapter.Update(rowArray16);
                    allChangedRows.AddRange(rowArray16);
                }
            }
            if (this._adminPermissionMasterTableAdapter != null)
            {
                DataRow[] rowArray17 = dataSet.AdminPermissionMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray17 = this.GetRealUpdatedRows(rowArray17, allAddedRows);
                if ((rowArray17 != null) && (0 < rowArray17.Length))
                {
                    num += this._adminPermissionMasterTableAdapter.Update(rowArray17);
                    allChangedRows.AddRange(rowArray17);
                }
            }
            if (this._estimateMasterTableAdapter != null)
            {
                DataRow[] rowArray18 = dataSet.EstimateMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray18 = this.GetRealUpdatedRows(rowArray18, allAddedRows);
                if ((rowArray18 != null) && (0 < rowArray18.Length))
                {
                    num += this._estimateMasterTableAdapter.Update(rowArray18);
                    allChangedRows.AddRange(rowArray18);
                }
            }
            if (this._invoiceMasterTableAdapter != null)
            {
                DataRow[] rowArray19 = dataSet.InvoiceMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray19 = this.GetRealUpdatedRows(rowArray19, allAddedRows);
                if ((rowArray19 != null) && (0 < rowArray19.Length))
                {
                    num += this._invoiceMasterTableAdapter.Update(rowArray19);
                    allChangedRows.AddRange(rowArray19);
                }
            }
            if (this._recurringMasterTableAdapter != null)
            {
                DataRow[] rowArray20 = dataSet.RecurringMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray20 = this.GetRealUpdatedRows(rowArray20, allAddedRows);
                if ((rowArray20 != null) && (0 < rowArray20.Length))
                {
                    num += this._recurringMasterTableAdapter.Update(rowArray20);
                    allChangedRows.AddRange(rowArray20);
                }
            }
            if (this._frequencyMasterTableAdapter != null)
            {
                DataRow[] rowArray21 = dataSet.FrequencyMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray21 = this.GetRealUpdatedRows(rowArray21, allAddedRows);
                if ((rowArray21 != null) && (0 < rowArray21.Length))
                {
                    num += this._frequencyMasterTableAdapter.Update(rowArray21);
                    allChangedRows.AddRange(rowArray21);
                }
            }
            if (this._accountantClientDetailTableAdapter != null)
            {
                DataRow[] rowArray22 = dataSet.AccountantClientDetail.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray22 = this.GetRealUpdatedRows(rowArray22, allAddedRows);
                if ((rowArray22 != null) && (0 < rowArray22.Length))
                {
                    num += this._accountantClientDetailTableAdapter.Update(rowArray22);
                    allChangedRows.AddRange(rowArray22);
                }
            }
            if (this._accountantMasterTableAdapter != null)
            {
                DataRow[] rowArray23 = dataSet.AccountantMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray23 = this.GetRealUpdatedRows(rowArray23, allAddedRows);
                if ((rowArray23 != null) && (0 < rowArray23.Length))
                {
                    num += this._accountantMasterTableAdapter.Update(rowArray23);
                    allChangedRows.AddRange(rowArray23);
                }
            }
            if (this._creditHistoryDetailTableAdapter != null)
            {
                DataRow[] rowArray24 = dataSet.CreditHistoryDetail.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray24 = this.GetRealUpdatedRows(rowArray24, allAddedRows);
                if ((rowArray24 != null) && (0 < rowArray24.Length))
                {
                    num += this._creditHistoryDetailTableAdapter.Update(rowArray24);
                    allChangedRows.AddRange(rowArray24);
                }
            }
            if (this._creditMasterTableAdapter != null)
            {
                DataRow[] rowArray25 = dataSet.CreditMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray25 = this.GetRealUpdatedRows(rowArray25, allAddedRows);
                if ((rowArray25 != null) && (0 < rowArray25.Length))
                {
                    num += this._creditMasterTableAdapter.Update(rowArray25);
                    allChangedRows.AddRange(rowArray25);
                }
            }
            if (this._timesheetMasterTableAdapter != null)
            {
                DataRow[] rowArray26 = dataSet.TimesheetMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray26 = this.GetRealUpdatedRows(rowArray26, allAddedRows);
                if ((rowArray26 != null) && (0 < rowArray26.Length))
                {
                    num += this._timesheetMasterTableAdapter.Update(rowArray26);
                    allChangedRows.AddRange(rowArray26);
                }
            }
            if (this._expenseMasterTableAdapter != null)
            {
                DataRow[] rowArray27 = dataSet.ExpenseMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray27 = this.GetRealUpdatedRows(rowArray27, allAddedRows);
                if ((rowArray27 != null) && (0 < rowArray27.Length))
                {
                    num += this._expenseMasterTableAdapter.Update(rowArray27);
                    allChangedRows.AddRange(rowArray27);
                }
            }
            if (this._invoiceDisputeHistoryTableAdapter != null)
            {
                DataRow[] rowArray28 = dataSet.InvoiceDisputeHistory.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray28 = this.GetRealUpdatedRows(rowArray28, allAddedRows);
                if ((rowArray28 != null) && (0 < rowArray28.Length))
                {
                    num += this._invoiceDisputeHistoryTableAdapter.Update(rowArray28);
                    allChangedRows.AddRange(rowArray28);
                }
            }
            if (this._estimateDisputeHistoryTableAdapter != null)
            {
                DataRow[] rowArray29 = dataSet.EstimateDisputeHistory.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray29 = this.GetRealUpdatedRows(rowArray29, allAddedRows);
                if ((rowArray29 != null) && (0 < rowArray29.Length))
                {
                    num += this._estimateDisputeHistoryTableAdapter.Update(rowArray29);
                    allChangedRows.AddRange(rowArray29);
                }
            }
            if (this._doyinGoSupportDiscussionTableAdapter != null)
            {
                DataRow[] rowArray30 = dataSet.DoyinGoSupportDiscussion.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray30 = this.GetRealUpdatedRows(rowArray30, allAddedRows);
                if ((rowArray30 != null) && (0 < rowArray30.Length))
                {
                    num += this._doyinGoSupportDiscussionTableAdapter.Update(rowArray30);
                    allChangedRows.AddRange(rowArray30);
                }
            }
            if (this._doyinGoTicketAttachmentTableAdapter != null)
            {
                DataRow[] rowArray31 = dataSet.DoyinGoTicketAttachment.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray31 = this.GetRealUpdatedRows(rowArray31, allAddedRows);
                if ((rowArray31 != null) && (0 < rowArray31.Length))
                {
                    num += this._doyinGoTicketAttachmentTableAdapter.Update(rowArray31);
                    allChangedRows.AddRange(rowArray31);
                }
            }
            if (this._doyinGoSupportTicketTableAdapter != null)
            {
                DataRow[] rowArray32 = dataSet.DoyinGoSupportTicket.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray32 = this.GetRealUpdatedRows(rowArray32, allAddedRows);
                if ((rowArray32 != null) && (0 < rowArray32.Length))
                {
                    num += this._doyinGoSupportTicketTableAdapter.Update(rowArray32);
                    allChangedRows.AddRange(rowArray32);
                }
            }
            if (this._supportDepartmentMasterTableAdapter != null)
            {
                DataRow[] rowArray33 = dataSet.SupportDepartmentMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray33 = this.GetRealUpdatedRows(rowArray33, allAddedRows);
                if ((rowArray33 != null) && (0 < rowArray33.Length))
                {
                    num += this._supportDepartmentMasterTableAdapter.Update(rowArray33);
                    allChangedRows.AddRange(rowArray33);
                }
            }
            if (this._freePackageSettingsTableAdapter != null)
            {
                DataRow[] rowArray34 = dataSet.FreePackageSettings.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray34 = this.GetRealUpdatedRows(rowArray34, allAddedRows);
                if ((rowArray34 != null) && (0 < rowArray34.Length))
                {
                    num += this._freePackageSettingsTableAdapter.Update(rowArray34);
                    allChangedRows.AddRange(rowArray34);
                }
            }
            if (this._companyPackageMasterTableAdapter != null)
            {
                DataRow[] rowArray35 = dataSet.CompanyPackageMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray35 = this.GetRealUpdatedRows(rowArray35, allAddedRows);
                if ((rowArray35 != null) && (0 < rowArray35.Length))
                {
                    num += this._companyPackageMasterTableAdapter.Update(rowArray35);
                    allChangedRows.AddRange(rowArray35);
                }
            }
            if (this._cloudPackageMasterTableAdapter != null)
            {
                DataRow[] rowArray36 = dataSet.CloudPackageMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray36 = this.GetRealUpdatedRows(rowArray36, allAddedRows);
                if ((rowArray36 != null) && (0 < rowArray36.Length))
                {
                    num += this._cloudPackageMasterTableAdapter.Update(rowArray36);
                    allChangedRows.AddRange(rowArray36);
                }
            }
            if (this._companyPaymentMasterTableAdapter != null)
            {
                DataRow[] rowArray37 = dataSet.CompanyPaymentMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray37 = this.GetRealUpdatedRows(rowArray37, allAddedRows);
                if ((rowArray37 != null) && (0 < rowArray37.Length))
                {
                    num += this._companyPaymentMasterTableAdapter.Update(rowArray37);
                    allChangedRows.AddRange(rowArray37);
                }
            }
            if (this._companyPaypalMasterTableAdapter != null)
            {
                DataRow[] rowArray38 = dataSet.CompanyPaypalMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray38 = this.GetRealUpdatedRows(rowArray38, allAddedRows);
                if ((rowArray38 != null) && (0 < rowArray38.Length))
                {
                    num += this._companyPaypalMasterTableAdapter.Update(rowArray38);
                    allChangedRows.AddRange(rowArray38);
                }
            }
            if (this._paymentGatewayPaypalMasterTableAdapter != null)
            {
                DataRow[] rowArray39 = dataSet.PaymentGatewayPaypalMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray39 = this.GetRealUpdatedRows(rowArray39, allAddedRows);
                if ((rowArray39 != null) && (0 < rowArray39.Length))
                {
                    num += this._paymentGatewayPaypalMasterTableAdapter.Update(rowArray39);
                    allChangedRows.AddRange(rowArray39);
                }
            }
            if (this._paymentGatewayMasterTableAdapter != null)
            {
                DataRow[] rowArray40 = dataSet.PaymentGatewayMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray40 = this.GetRealUpdatedRows(rowArray40, allAddedRows);
                if ((rowArray40 != null) && (0 < rowArray40.Length))
                {
                    num += this._paymentGatewayMasterTableAdapter.Update(rowArray40);
                    allChangedRows.AddRange(rowArray40);
                }
            }
            if (this._subCategoryMasterTableAdapter != null)
            {
                DataRow[] rowArray41 = dataSet.SubCategoryMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray41 = this.GetRealUpdatedRows(rowArray41, allAddedRows);
                if ((rowArray41 != null) && (0 < rowArray41.Length))
                {
                    num += this._subCategoryMasterTableAdapter.Update(rowArray41);
                    allChangedRows.AddRange(rowArray41);
                }
            }
            if (this._termServiceContentTableAdapter != null)
            {
                DataRow[] rowArray42 = dataSet.TermServiceContent.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray42 = this.GetRealUpdatedRows(rowArray42, allAddedRows);
                if ((rowArray42 != null) && (0 < rowArray42.Length))
                {
                    num += this._termServiceContentTableAdapter.Update(rowArray42);
                    allChangedRows.AddRange(rowArray42);
                }
            }
            if (this._categoryMasterTableAdapter != null)
            {
                DataRow[] rowArray43 = dataSet.CategoryMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray43 = this.GetRealUpdatedRows(rowArray43, allAddedRows);
                if ((rowArray43 != null) && (0 < rowArray43.Length))
                {
                    num += this._categoryMasterTableAdapter.Update(rowArray43);
                    allChangedRows.AddRange(rowArray43);
                }
            }
            if (this._recurringTaskDetailTableAdapter != null)
            {
                DataRow[] rowArray44 = dataSet.RecurringTaskDetail.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray44 = this.GetRealUpdatedRows(rowArray44, allAddedRows);
                if ((rowArray44 != null) && (0 < rowArray44.Length))
                {
                    num += this._recurringTaskDetailTableAdapter.Update(rowArray44);
                    allChangedRows.AddRange(rowArray44);
                }
            }
            if (this._companyLoginMasterTableAdapter != null)
            {
                DataRow[] rowArray45 = dataSet.CompanyLoginMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray45 = this.GetRealUpdatedRows(rowArray45, allAddedRows);
                if ((rowArray45 != null) && (0 < rowArray45.Length))
                {
                    num += this._companyLoginMasterTableAdapter.Update(rowArray45);
                    allChangedRows.AddRange(rowArray45);
                }
            }
            if (this._moduleFormMasterTableAdapter != null)
            {
                DataRow[] rowArray46 = dataSet.ModuleFormMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray46 = this.GetRealUpdatedRows(rowArray46, allAddedRows);
                if ((rowArray46 != null) && (0 < rowArray46.Length))
                {
                    num += this._moduleFormMasterTableAdapter.Update(rowArray46);
                    allChangedRows.AddRange(rowArray46);
                }
            }
            if (this._masterAdminRightsMasterTableAdapter != null)
            {
                DataRow[] rowArray47 = dataSet.MasterAdminRightsMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray47 = this.GetRealUpdatedRows(rowArray47, allAddedRows);
                if ((rowArray47 != null) && (0 < rowArray47.Length))
                {
                    num += this._masterAdminRightsMasterTableAdapter.Update(rowArray47);
                    allChangedRows.AddRange(rowArray47);
                }
            }
            if (this._formMasterTableAdapter != null)
            {
                DataRow[] rowArray48 = dataSet.FormMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray48 = this.GetRealUpdatedRows(rowArray48, allAddedRows);
                if ((rowArray48 != null) && (0 < rowArray48.Length))
                {
                    num += this._formMasterTableAdapter.Update(rowArray48);
                    allChangedRows.AddRange(rowArray48);
                }
            }
            if (this._companyPackageDetailsTableAdapter != null)
            {
                DataRow[] rowArray49 = dataSet.CompanyPackageDetails.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray49 = this.GetRealUpdatedRows(rowArray49, allAddedRows);
                if ((rowArray49 != null) && (0 < rowArray49.Length))
                {
                    num += this._companyPackageDetailsTableAdapter.Update(rowArray49);
                    allChangedRows.AddRange(rowArray49);
                }
            }
            if (this._packageMasterTableAdapter != null)
            {
                DataRow[] rowArray50 = dataSet.PackageMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray50 = this.GetRealUpdatedRows(rowArray50, allAddedRows);
                if ((rowArray50 != null) && (0 < rowArray50.Length))
                {
                    num += this._packageMasterTableAdapter.Update(rowArray50);
                    allChangedRows.AddRange(rowArray50);
                }
            }
            if (this._packageDetailsTableAdapter != null)
            {
                DataRow[] rowArray51 = dataSet.PackageDetails.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray51 = this.GetRealUpdatedRows(rowArray51, allAddedRows);
                if ((rowArray51 != null) && (0 < rowArray51.Length))
                {
                    num += this._packageDetailsTableAdapter.Update(rowArray51);
                    allChangedRows.AddRange(rowArray51);
                }
            }
            if (this._moduleMasterTableAdapter != null)
            {
                DataRow[] rowArray52 = dataSet.ModuleMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray52 = this.GetRealUpdatedRows(rowArray52, allAddedRows);
                if ((rowArray52 != null) && (0 < rowArray52.Length))
                {
                    num += this._moduleMasterTableAdapter.Update(rowArray52);
                    allChangedRows.AddRange(rowArray52);
                }
            }
            if (this._masterAdminLoginMasterTableAdapter != null)
            {
                DataRow[] rowArray53 = dataSet.MasterAdminLoginMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray53 = this.GetRealUpdatedRows(rowArray53, allAddedRows);
                if ((rowArray53 != null) && (0 < rowArray53.Length))
                {
                    num += this._masterAdminLoginMasterTableAdapter.Update(rowArray53);
                    allChangedRows.AddRange(rowArray53);
                }
            }
            if (this._footerContentTableAdapter != null)
            {
                DataRow[] rowArray54 = dataSet.FooterContent.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray54 = this.GetRealUpdatedRows(rowArray54, allAddedRows);
                if ((rowArray54 != null) && (0 < rowArray54.Length))
                {
                    num += this._footerContentTableAdapter.Update(rowArray54);
                    allChangedRows.AddRange(rowArray54);
                }
            }
            if (this._inquiryMasterTableAdapter != null)
            {
                DataRow[] rowArray55 = dataSet.InquiryMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray55 = this.GetRealUpdatedRows(rowArray55, allAddedRows);
                if ((rowArray55 != null) && (0 < rowArray55.Length))
                {
                    num += this._inquiryMasterTableAdapter.Update(rowArray55);
                    allChangedRows.AddRange(rowArray55);
                }
            }
            if (this._testimonialsMasterTableAdapter != null)
            {
                DataRow[] rowArray56 = dataSet.TestimonialsMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray56 = this.GetRealUpdatedRows(rowArray56, allAddedRows);
                if ((rowArray56 != null) && (0 < rowArray56.Length))
                {
                    num += this._testimonialsMasterTableAdapter.Update(rowArray56);
                    allChangedRows.AddRange(rowArray56);
                }
            }
            if (this._clientMasterTableAdapter != null)
            {
                DataRow[] rowArray57 = dataSet.ClientMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray57 = this.GetRealUpdatedRows(rowArray57, allAddedRows);
                if ((rowArray57 != null) && (0 < rowArray57.Length))
                {
                    num += this._clientMasterTableAdapter.Update(rowArray57);
                    allChangedRows.AddRange(rowArray57);
                }
            }
            if (this._currencyMasterTableAdapter != null)
            {
                DataRow[] rowArray58 = dataSet.CurrencyMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray58 = this.GetRealUpdatedRows(rowArray58, allAddedRows);
                if ((rowArray58 != null) && (0 < rowArray58.Length))
                {
                    num += this._currencyMasterTableAdapter.Update(rowArray58);
                    allChangedRows.AddRange(rowArray58);
                }
            }
            if (this._cityMasterTableAdapter != null)
            {
                DataRow[] rowArray59 = dataSet.CityMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray59 = this.GetRealUpdatedRows(rowArray59, allAddedRows);
                if ((rowArray59 != null) && (0 < rowArray59.Length))
                {
                    num += this._cityMasterTableAdapter.Update(rowArray59);
                    allChangedRows.AddRange(rowArray59);
                }
            }
            if (this._stateMasterTableAdapter != null)
            {
                DataRow[] rowArray60 = dataSet.StateMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray60 = this.GetRealUpdatedRows(rowArray60, allAddedRows);
                if ((rowArray60 != null) && (0 < rowArray60.Length))
                {
                    num += this._stateMasterTableAdapter.Update(rowArray60);
                    allChangedRows.AddRange(rowArray60);
                }
            }
            if (this._countryMasterTableAdapter != null)
            {
                DataRow[] rowArray61 = dataSet.CountryMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray61 = this.GetRealUpdatedRows(rowArray61, allAddedRows);
                if ((rowArray61 != null) && (0 < rowArray61.Length))
                {
                    num += this._countryMasterTableAdapter.Update(rowArray61);
                    allChangedRows.AddRange(rowArray61);
                }
            }
            if (this._featureMasterTableAdapter != null)
            {
                DataRow[] rowArray62 = dataSet.FeatureMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray62 = this.GetRealUpdatedRows(rowArray62, allAddedRows);
                if ((rowArray62 != null) && (0 < rowArray62.Length))
                {
                    num += this._featureMasterTableAdapter.Update(rowArray62);
                    allChangedRows.AddRange(rowArray62);
                }
            }
            if (this._contactMasterTableAdapter != null)
            {
                DataRow[] rowArray63 = dataSet.ContactMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray63 = this.GetRealUpdatedRows(rowArray63, allAddedRows);
                if ((rowArray63 != null) && (0 < rowArray63.Length))
                {
                    num += this._contactMasterTableAdapter.Update(rowArray63);
                    allChangedRows.AddRange(rowArray63);
                }
            }
            if (this._homePageSliderTableAdapter != null)
            {
                DataRow[] rowArray64 = dataSet.HomePageSlider.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray64 = this.GetRealUpdatedRows(rowArray64, allAddedRows);
                if ((rowArray64 != null) && (0 < rowArray64.Length))
                {
                    num += this._homePageSliderTableAdapter.Update(rowArray64);
                    allChangedRows.AddRange(rowArray64);
                }
            }
            if (this._fAQMasterTableAdapter != null)
            {
                DataRow[] rowArray65 = dataSet.FAQMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray65 = this.GetRealUpdatedRows(rowArray65, allAddedRows);
                if ((rowArray65 != null) && (0 < rowArray65.Length))
                {
                    num += this._fAQMasterTableAdapter.Update(rowArray65);
                    allChangedRows.AddRange(rowArray65);
                }
            }
            if (this._fAQCategoryMasterTableAdapter != null)
            {
                DataRow[] rowArray66 = dataSet.FAQCategoryMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray66 = this.GetRealUpdatedRows(rowArray66, allAddedRows);
                if ((rowArray66 != null) && (0 < rowArray66.Length))
                {
                    num += this._fAQCategoryMasterTableAdapter.Update(rowArray66);
                    allChangedRows.AddRange(rowArray66);
                }
            }
            if (this._homeMasterTableAdapter != null)
            {
                DataRow[] rowArray67 = dataSet.HomeMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray67 = this.GetRealUpdatedRows(rowArray67, allAddedRows);
                if ((rowArray67 != null) && (0 < rowArray67.Length))
                {
                    num += this._homeMasterTableAdapter.Update(rowArray67);
                    allChangedRows.AddRange(rowArray67);
                }
            }
            if (this._featureContentMasterTableAdapter != null)
            {
                DataRow[] rowArray68 = dataSet.FeatureContentMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray68 = this.GetRealUpdatedRows(rowArray68, allAddedRows);
                if ((rowArray68 != null) && (0 < rowArray68.Length))
                {
                    num += this._featureContentMasterTableAdapter.Update(rowArray68);
                    allChangedRows.AddRange(rowArray68);
                }
            }
            if (this._featureCategoryMasterTableAdapter != null)
            {
                DataRow[] rowArray69 = dataSet.FeatureCategoryMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray69 = this.GetRealUpdatedRows(rowArray69, allAddedRows);
                if ((rowArray69 != null) && (0 < rowArray69.Length))
                {
                    num += this._featureCategoryMasterTableAdapter.Update(rowArray69);
                    allChangedRows.AddRange(rowArray69);
                }
            }
            if (this._aboutCategoryMasterTableAdapter != null)
            {
                DataRow[] rowArray70 = dataSet.AboutCategoryMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray70 = this.GetRealUpdatedRows(rowArray70, allAddedRows);
                if ((rowArray70 != null) && (0 < rowArray70.Length))
                {
                    num += this._aboutCategoryMasterTableAdapter.Update(rowArray70);
                    allChangedRows.AddRange(rowArray70);
                }
            }
            if (this._companyAdminRightsMasterTableAdapter != null)
            {
                DataRow[] rowArray71 = dataSet.CompanyAdminRightsMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray71 = this.GetRealUpdatedRows(rowArray71, allAddedRows);
                if ((rowArray71 != null) && (0 < rowArray71.Length))
                {
                    num += this._companyAdminRightsMasterTableAdapter.Update(rowArray71);
                    allChangedRows.AddRange(rowArray71);
                }
            }
            if (this._packageUpgradeRequestMasterTableAdapter != null)
            {
                DataRow[] rowArray72 = dataSet.PackageUpgradeRequestMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray72 = this.GetRealUpdatedRows(rowArray72, allAddedRows);
                if ((rowArray72 != null) && (0 < rowArray72.Length))
                {
                    num += this._packageUpgradeRequestMasterTableAdapter.Update(rowArray72);
                    allChangedRows.AddRange(rowArray72);
                }
            }
            if (this._bussinessMasterTableAdapter != null)
            {
                DataRow[] rowArray73 = dataSet.BussinessMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray73 = this.GetRealUpdatedRows(rowArray73, allAddedRows);
                if ((rowArray73 != null) && (0 < rowArray73.Length))
                {
                    num += this._bussinessMasterTableAdapter.Update(rowArray73);
                    allChangedRows.AddRange(rowArray73);
                }
            }
            if (this._currentAccountMasterTableAdapter != null)
            {
                DataRow[] rowArray74 = dataSet.CurrentAccountMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray74 = this.GetRealUpdatedRows(rowArray74, allAddedRows);
                if ((rowArray74 != null) && (0 < rowArray74.Length))
                {
                    num += this._currentAccountMasterTableAdapter.Update(rowArray74);
                    allChangedRows.AddRange(rowArray74);
                }
            }
            if (this._invoiceDefaultTermsMasterTableAdapter != null)
            {
                DataRow[] rowArray75 = dataSet.InvoiceDefaultTermsMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray75 = this.GetRealUpdatedRows(rowArray75, allAddedRows);
                if ((rowArray75 != null) && (0 < rowArray75.Length))
                {
                    num += this._invoiceDefaultTermsMasterTableAdapter.Update(rowArray75);
                    allChangedRows.AddRange(rowArray75);
                }
            }
            if (this._estimateDefaultTermsMasterTableAdapter != null)
            {
                DataRow[] rowArray76 = dataSet.EstimateDefaultTermsMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray76 = this.GetRealUpdatedRows(rowArray76, allAddedRows);
                if ((rowArray76 != null) && (0 < rowArray76.Length))
                {
                    num += this._estimateDefaultTermsMasterTableAdapter.Update(rowArray76);
                    allChangedRows.AddRange(rowArray76);
                }
            }
            if (this._creditDefaultTermsMasterTableAdapter != null)
            {
                DataRow[] rowArray77 = dataSet.CreditDefaultTermsMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray77 = this.GetRealUpdatedRows(rowArray77, allAddedRows);
                if ((rowArray77 != null) && (0 < rowArray77.Length))
                {
                    num += this._creditDefaultTermsMasterTableAdapter.Update(rowArray77);
                    allChangedRows.AddRange(rowArray77);
                }
            }
            if (this._companyClientMasterTableAdapter != null)
            {
                DataRow[] rowArray78 = dataSet.CompanyClientMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray78 = this.GetRealUpdatedRows(rowArray78, allAddedRows);
                if ((rowArray78 != null) && (0 < rowArray78.Length))
                {
                    num += this._companyClientMasterTableAdapter.Update(rowArray78);
                    allChangedRows.AddRange(rowArray78);
                }
            }
            if (this._companyClientContactDetailTableAdapter != null)
            {
                DataRow[] rowArray79 = dataSet.CompanyClientContactDetail.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray79 = this.GetRealUpdatedRows(rowArray79, allAddedRows);
                if ((rowArray79 != null) && (0 < rowArray79.Length))
                {
                    num += this._companyClientContactDetailTableAdapter.Update(rowArray79);
                    allChangedRows.AddRange(rowArray79);
                }
            }
            if (this._creditItemDetailTableAdapter != null)
            {
                DataRow[] rowArray80 = dataSet.CreditItemDetail.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray80 = this.GetRealUpdatedRows(rowArray80, allAddedRows);
                if ((rowArray80 != null) && (0 < rowArray80.Length))
                {
                    num += this._creditItemDetailTableAdapter.Update(rowArray80);
                    allChangedRows.AddRange(rowArray80);
                }
            }
            if (this._creditTaskDetailTableAdapter != null)
            {
                DataRow[] rowArray81 = dataSet.CreditTaskDetail.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray81 = this.GetRealUpdatedRows(rowArray81, allAddedRows);
                if ((rowArray81 != null) && (0 < rowArray81.Length))
                {
                    num += this._creditTaskDetailTableAdapter.Update(rowArray81);
                    allChangedRows.AddRange(rowArray81);
                }
            }
            if (this._estimateItemDetailTableAdapter != null)
            {
                DataRow[] rowArray82 = dataSet.EstimateItemDetail.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray82 = this.GetRealUpdatedRows(rowArray82, allAddedRows);
                if ((rowArray82 != null) && (0 < rowArray82.Length))
                {
                    num += this._estimateItemDetailTableAdapter.Update(rowArray82);
                    allChangedRows.AddRange(rowArray82);
                }
            }
            if (this._estimateTaskDetailTableAdapter != null)
            {
                DataRow[] rowArray83 = dataSet.EstimateTaskDetail.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray83 = this.GetRealUpdatedRows(rowArray83, allAddedRows);
                if ((rowArray83 != null) && (0 < rowArray83.Length))
                {
                    num += this._estimateTaskDetailTableAdapter.Update(rowArray83);
                    allChangedRows.AddRange(rowArray83);
                }
            }
            if (this._paymentMasterTableAdapter != null)
            {
                DataRow[] rowArray84 = dataSet.PaymentMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray84 = this.GetRealUpdatedRows(rowArray84, allAddedRows);
                if ((rowArray84 != null) && (0 < rowArray84.Length))
                {
                    num += this._paymentMasterTableAdapter.Update(rowArray84);
                    allChangedRows.AddRange(rowArray84);
                }
            }
            if (this._companyMasterTableAdapter != null)
            {
                DataRow[] rowArray85 = dataSet.CompanyMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray85 = this.GetRealUpdatedRows(rowArray85, allAddedRows);
                if ((rowArray85 != null) && (0 < rowArray85.Length))
                {
                    num += this._companyMasterTableAdapter.Update(rowArray85);
                    allChangedRows.AddRange(rowArray85);
                }
            }
            if (this._invoiceTaskDetailTableAdapter != null)
            {
                DataRow[] rowArray86 = dataSet.InvoiceTaskDetail.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray86 = this.GetRealUpdatedRows(rowArray86, allAddedRows);
                if ((rowArray86 != null) && (0 < rowArray86.Length))
                {
                    num += this._invoiceTaskDetailTableAdapter.Update(rowArray86);
                    allChangedRows.AddRange(rowArray86);
                }
            }
            if (this._invoiceItemDetailTableAdapter != null)
            {
                DataRow[] rowArray87 = dataSet.InvoiceItemDetail.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray87 = this.GetRealUpdatedRows(rowArray87, allAddedRows);
                if ((rowArray87 != null) && (0 < rowArray87.Length))
                {
                    num += this._invoiceItemDetailTableAdapter.Update(rowArray87);
                    allChangedRows.AddRange(rowArray87);
                }
            }
            if (this._recurringItemDetailTableAdapter != null)
            {
                DataRow[] rowArray88 = dataSet.RecurringItemDetail.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray88 = this.GetRealUpdatedRows(rowArray88, allAddedRows);
                if ((rowArray88 != null) && (0 < rowArray88.Length))
                {
                    num += this._recurringItemDetailTableAdapter.Update(rowArray88);
                    allChangedRows.AddRange(rowArray88);
                }
            }
            if (this._securityQuestionMasterTableAdapter != null)
            {
                DataRow[] rowArray89 = dataSet.SecurityQuestionMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray89 = this.GetRealUpdatedRows(rowArray89, allAddedRows);
                if ((rowArray89 != null) && (0 < rowArray89.Length))
                {
                    num += this._securityQuestionMasterTableAdapter.Update(rowArray89);
                    allChangedRows.AddRange(rowArray89);
                }
            }
            if (this._projectMasterTableAdapter != null)
            {
                DataRow[] rowArray90 = dataSet.ProjectMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray90 = this.GetRealUpdatedRows(rowArray90, allAddedRows);
                if ((rowArray90 != null) && (0 < rowArray90.Length))
                {
                    num += this._projectMasterTableAdapter.Update(rowArray90);
                    allChangedRows.AddRange(rowArray90);
                }
            }
            if (this._projectTaskDetailTableAdapter != null)
            {
                DataRow[] rowArray91 = dataSet.ProjectTaskDetail.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray91 = this.GetRealUpdatedRows(rowArray91, allAddedRows);
                if ((rowArray91 != null) && (0 < rowArray91.Length))
                {
                    num += this._projectTaskDetailTableAdapter.Update(rowArray91);
                    allChangedRows.AddRange(rowArray91);
                }
            }
            if (this._staffProjectDetailTableAdapter != null)
            {
                DataRow[] rowArray92 = dataSet.StaffProjectDetail.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray92 = this.GetRealUpdatedRows(rowArray92, allAddedRows);
                if ((rowArray92 != null) && (0 < rowArray92.Length))
                {
                    num += this._staffProjectDetailTableAdapter.Update(rowArray92);
                    allChangedRows.AddRange(rowArray92);
                }
            }
            if (this._contractorProjectDetailTableAdapter != null)
            {
                DataRow[] rowArray93 = dataSet.ContractorProjectDetail.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray93 = this.GetRealUpdatedRows(rowArray93, allAddedRows);
                if ((rowArray93 != null) && (0 < rowArray93.Length))
                {
                    num += this._contractorProjectDetailTableAdapter.Update(rowArray93);
                    allChangedRows.AddRange(rowArray93);
                }
            }
            if (this._taxMasterTableAdapter != null)
            {
                DataRow[] rowArray94 = dataSet.TaxMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray94 = this.GetRealUpdatedRows(rowArray94, allAddedRows);
                if ((rowArray94 != null) && (0 < rowArray94.Length))
                {
                    num += this._taxMasterTableAdapter.Update(rowArray94);
                    allChangedRows.AddRange(rowArray94);
                }
            }
            if (this._itemMasterTableAdapter != null)
            {
                DataRow[] rowArray95 = dataSet.ItemMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray95 = this.GetRealUpdatedRows(rowArray95, allAddedRows);
                if ((rowArray95 != null) && (0 < rowArray95.Length))
                {
                    num += this._itemMasterTableAdapter.Update(rowArray95);
                    allChangedRows.AddRange(rowArray95);
                }
            }
            if (this._contractorMasterTableAdapter != null)
            {
                DataRow[] rowArray96 = dataSet.ContractorMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray96 = this.GetRealUpdatedRows(rowArray96, allAddedRows);
                if ((rowArray96 != null) && (0 < rowArray96.Length))
                {
                    num += this._contractorMasterTableAdapter.Update(rowArray96);
                    allChangedRows.AddRange(rowArray96);
                }
            }
            if (this._taskMasterTableAdapter != null)
            {
                DataRow[] rowArray97 = dataSet.TaskMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray97 = this.GetRealUpdatedRows(rowArray97, allAddedRows);
                if ((rowArray97 != null) && (0 < rowArray97.Length))
                {
                    num += this._taskMasterTableAdapter.Update(rowArray97);
                    allChangedRows.AddRange(rowArray97);
                }
            }
            if (this._staffMasterTableAdapter != null)
            {
                DataRow[] rowArray98 = dataSet.StaffMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray98 = this.GetRealUpdatedRows(rowArray98, allAddedRows);
                if ((rowArray98 != null) && (0 < rowArray98.Length))
                {
                    num += this._staffMasterTableAdapter.Update(rowArray98);
                    allChangedRows.AddRange(rowArray98);
                }
            }
            if (this._packageFeatureMasterTableAdapter != null)
            {
                DataRow[] rowArray99 = dataSet.PackageFeatureMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray99 = this.GetRealUpdatedRows(rowArray99, allAddedRows);
                if ((rowArray99 != null) && (0 < rowArray99.Length))
                {
                    num += this._packageFeatureMasterTableAdapter.Update(rowArray99);
                    allChangedRows.AddRange(rowArray99);
                }
            }
            if (this._cloudPackageDetailsTableAdapter != null)
            {
                DataRow[] rowArray100 = dataSet.CloudPackageDetails.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray100 = this.GetRealUpdatedRows(rowArray100, allAddedRows);
                if ((rowArray100 != null) && (0 < rowArray100.Length))
                {
                    num += this._cloudPackageDetailsTableAdapter.Update(rowArray100);
                    allChangedRows.AddRange(rowArray100);
                }
            }
            if (this._packageModuleMasterTableAdapter != null)
            {
                DataRow[] rowArray101 = dataSet.PackageModuleMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray101 = this.GetRealUpdatedRows(rowArray101, allAddedRows);
                if ((rowArray101 != null) && (0 < rowArray101.Length))
                {
                    num += this._packageModuleMasterTableAdapter.Update(rowArray101);
                    allChangedRows.AddRange(rowArray101);
                }
            }
            if (this._runningFromMasterTableAdapter != null)
            {
                DataRow[] rowArray102 = dataSet.RunningFromMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray102 = this.GetRealUpdatedRows(rowArray102, allAddedRows);
                if ((rowArray102 != null) && (0 < rowArray102.Length))
                {
                    num += this._runningFromMasterTableAdapter.Update(rowArray102);
                    allChangedRows.AddRange(rowArray102);
                }
            }
            if (this._industryMasterTableAdapter != null)
            {
                DataRow[] rowArray103 = dataSet.IndustryMaster.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray103 = this.GetRealUpdatedRows(rowArray103, allAddedRows);
                if ((rowArray103 != null) && (0 < rowArray103.Length))
                {
                    num += this._industryMasterTableAdapter.Update(rowArray103);
                    allChangedRows.AddRange(rowArray103);
                }
            }
            if (this._staffClientAssignDetailTableAdapter != null)
            {
                DataRow[] rowArray104 = dataSet.StaffClientAssignDetail.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray104 = this.GetRealUpdatedRows(rowArray104, allAddedRows);
                if ((rowArray104 != null) && (0 < rowArray104.Length))
                {
                    num += this._staffClientAssignDetailTableAdapter.Update(rowArray104);
                    allChangedRows.AddRange(rowArray104);
                }
            }
            if (this._privacyPolicyContentTableAdapter != null)
            {
                DataRow[] rowArray105 = dataSet.PrivacyPolicyContent.Select(null, null, DataViewRowState.ModifiedCurrent);
                rowArray105 = this.GetRealUpdatedRows(rowArray105, allAddedRows);
                if ((rowArray105 != null) && (0 < rowArray105.Length))
                {
                    num += this._privacyPolicyContentTableAdapter.Update(rowArray105);
                    allChangedRows.AddRange(rowArray105);
                }
            }
            return num;
        }
        
        [Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DABL.DAL.CloudAccountDATableAdapters.AboutCategoryMasterTableAdapter AboutCategoryMasterTableAdapter
        {
            get
            {
                return this._aboutCategoryMasterTableAdapter;
            }
            set
            {
                this._aboutCategoryMasterTableAdapter = value;
            }
        }
        
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor")]
        public DABL.DAL.CloudAccountDATableAdapters.AboutContentMasterTableAdapter AboutContentMasterTableAdapter
        {
            get
            {
                return this._aboutContentMasterTableAdapter;
            }
            set
            {
                this._aboutContentMasterTableAdapter = value;
            }
        }
        
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor")]
        public DABL.DAL.CloudAccountDATableAdapters.AccountantClientDetailTableAdapter AccountantClientDetailTableAdapter
        {
            get
            {
                return this._accountantClientDetailTableAdapter;
            }
            set
            {
                this._accountantClientDetailTableAdapter = value;
            }
        }
        
        [DebuggerNonUserCode, Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DABL.DAL.CloudAccountDATableAdapters.AccountantMasterTableAdapter AccountantMasterTableAdapter
        {
            get
            {
                return this._accountantMasterTableAdapter;
            }
            set
            {
                this._accountantMasterTableAdapter = value;
            }
        }
        
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), DebuggerNonUserCode]
        public DABL.DAL.CloudAccountDATableAdapters.AdminPermissionMasterTableAdapter AdminPermissionMasterTableAdapter
        {
            get
            {
                return this._adminPermissionMasterTableAdapter;
            }
            set
            {
                this._adminPermissionMasterTableAdapter = value;
            }
        }
        
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), DebuggerNonUserCode]
        public DABL.DAL.CloudAccountDATableAdapters.AutoBillEmailTemplateTableAdapter AutoBillEmailTemplateTableAdapter
        {
            get
            {
                return this._autoBillEmailTemplateTableAdapter;
            }
            set
            {
                this._autoBillEmailTemplateTableAdapter = value;
            }
        }
        
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        public bool BackupDataSetBeforeUpdate
        {
            get
            {
                return this._backupDataSetBeforeUpdate;
            }
            set
            {
                this._backupDataSetBeforeUpdate = value;
            }
        }
        
        [Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DABL.DAL.CloudAccountDATableAdapters.BussinessMasterTableAdapter BussinessMasterTableAdapter
        {
            get
            {
                return this._bussinessMasterTableAdapter;
            }
            set
            {
                this._bussinessMasterTableAdapter = value;
            }
        }
        
        [Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DABL.DAL.CloudAccountDATableAdapters.CategoryMasterTableAdapter CategoryMasterTableAdapter
        {
            get
            {
                return this._categoryMasterTableAdapter;
            }
            set
            {
                this._categoryMasterTableAdapter = value;
            }
        }
        
        [DebuggerNonUserCode, Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DABL.DAL.CloudAccountDATableAdapters.CityMasterTableAdapter CityMasterTableAdapter
        {
            get
            {
                return this._cityMasterTableAdapter;
            }
            set
            {
                this._cityMasterTableAdapter = value;
            }
        }
        
        [DebuggerNonUserCode, Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DABL.DAL.CloudAccountDATableAdapters.ClientMasterTableAdapter ClientMasterTableAdapter
        {
            get
            {
                return this._clientMasterTableAdapter;
            }
            set
            {
                this._clientMasterTableAdapter = value;
            }
        }
        
        [Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DABL.DAL.CloudAccountDATableAdapters.ClientPermissionMasterTableAdapter ClientPermissionMasterTableAdapter
        {
            get
            {
                return this._clientPermissionMasterTableAdapter;
            }
            set
            {
                this._clientPermissionMasterTableAdapter = value;
            }
        }
        
        [DebuggerNonUserCode, Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DABL.DAL.CloudAccountDATableAdapters.CloudPackageDetailsTableAdapter CloudPackageDetailsTableAdapter
        {
            get
            {
                return this._cloudPackageDetailsTableAdapter;
            }
            set
            {
                this._cloudPackageDetailsTableAdapter = value;
            }
        }
        
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor")]
        public DABL.DAL.CloudAccountDATableAdapters.CloudPackageMasterTableAdapter CloudPackageMasterTableAdapter
        {
            get
            {
                return this._cloudPackageMasterTableAdapter;
            }
            set
            {
                this._cloudPackageMasterTableAdapter = value;
            }
        }
        
        [DebuggerNonUserCode, Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DABL.DAL.CloudAccountDATableAdapters.CompanyAdminRightsMasterTableAdapter CompanyAdminRightsMasterTableAdapter
        {
            get
            {
                return this._companyAdminRightsMasterTableAdapter;
            }
            set
            {
                this._companyAdminRightsMasterTableAdapter = value;
            }
        }
        
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor")]
        public DABL.DAL.CloudAccountDATableAdapters.CompanyClientContactDetailTableAdapter CompanyClientContactDetailTableAdapter
        {
            get
            {
                return this._companyClientContactDetailTableAdapter;
            }
            set
            {
                this._companyClientContactDetailTableAdapter = value;
            }
        }
        
        [Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DABL.DAL.CloudAccountDATableAdapters.CompanyClientMasterTableAdapter CompanyClientMasterTableAdapter
        {
            get
            {
                return this._companyClientMasterTableAdapter;
            }
            set
            {
                this._companyClientMasterTableAdapter = value;
            }
        }
        
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor")]
        public DABL.DAL.CloudAccountDATableAdapters.CompanyLoginMasterTableAdapter CompanyLoginMasterTableAdapter
        {
            get
            {
                return this._companyLoginMasterTableAdapter;
            }
            set
            {
                this._companyLoginMasterTableAdapter = value;
            }
        }
        
        [Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        public DABL.DAL.CloudAccountDATableAdapters.CompanyMasterTableAdapter CompanyMasterTableAdapter
        {
            get
            {
                return this._companyMasterTableAdapter;
            }
            set
            {
                this._companyMasterTableAdapter = value;
            }
        }
        
        [Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        public DABL.DAL.CloudAccountDATableAdapters.CompanyPackageDetailsTableAdapter CompanyPackageDetailsTableAdapter
        {
            get
            {
                return this._companyPackageDetailsTableAdapter;
            }
            set
            {
                this._companyPackageDetailsTableAdapter = value;
            }
        }
        
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor")]
        public DABL.DAL.CloudAccountDATableAdapters.CompanyPackageMasterTableAdapter CompanyPackageMasterTableAdapter
        {
            get
            {
                return this._companyPackageMasterTableAdapter;
            }
            set
            {
                this._companyPackageMasterTableAdapter = value;
            }
        }
        
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor")]
        public DABL.DAL.CloudAccountDATableAdapters.CompanyPaymentMasterTableAdapter CompanyPaymentMasterTableAdapter
        {
            get
            {
                return this._companyPaymentMasterTableAdapter;
            }
            set
            {
                this._companyPaymentMasterTableAdapter = value;
            }
        }
        
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), DebuggerNonUserCode]
        public DABL.DAL.CloudAccountDATableAdapters.CompanyPaypalMasterTableAdapter CompanyPaypalMasterTableAdapter
        {
            get
            {
                return this._companyPaypalMasterTableAdapter;
            }
            set
            {
                this._companyPaypalMasterTableAdapter = value;
            }
        }
        
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DebuggerNonUserCode]
        public IDbConnection Connection
        {
            get
            {
                if (this._connection != null)
                {
                    return this._connection;
                }
                if ((this._aboutContentMasterTableAdapter != null) && (this._aboutContentMasterTableAdapter.Connection != null))
                {
                    return this._aboutContentMasterTableAdapter.Connection;
                }
                if ((this._aboutCategoryMasterTableAdapter != null) && (this._aboutCategoryMasterTableAdapter.Connection != null))
                {
                    return this._aboutCategoryMasterTableAdapter.Connection;
                }
                if ((this._featureCategoryMasterTableAdapter != null) && (this._featureCategoryMasterTableAdapter.Connection != null))
                {
                    return this._featureCategoryMasterTableAdapter.Connection;
                }
                if ((this._featureContentMasterTableAdapter != null) && (this._featureContentMasterTableAdapter.Connection != null))
                {
                    return this._featureContentMasterTableAdapter.Connection;
                }
                if ((this._homeMasterTableAdapter != null) && (this._homeMasterTableAdapter.Connection != null))
                {
                    return this._homeMasterTableAdapter.Connection;
                }
                if ((this._fAQCategoryMasterTableAdapter != null) && (this._fAQCategoryMasterTableAdapter.Connection != null))
                {
                    return this._fAQCategoryMasterTableAdapter.Connection;
                }
                if ((this._fAQMasterTableAdapter != null) && (this._fAQMasterTableAdapter.Connection != null))
                {
                    return this._fAQMasterTableAdapter.Connection;
                }
                if ((this._homePageSliderTableAdapter != null) && (this._homePageSliderTableAdapter.Connection != null))
                {
                    return this._homePageSliderTableAdapter.Connection;
                }
                if ((this._contactMasterTableAdapter != null) && (this._contactMasterTableAdapter.Connection != null))
                {
                    return this._contactMasterTableAdapter.Connection;
                }
                if ((this._featureMasterTableAdapter != null) && (this._featureMasterTableAdapter.Connection != null))
                {
                    return this._featureMasterTableAdapter.Connection;
                }
                if ((this._countryMasterTableAdapter != null) && (this._countryMasterTableAdapter.Connection != null))
                {
                    return this._countryMasterTableAdapter.Connection;
                }
                if ((this._stateMasterTableAdapter != null) && (this._stateMasterTableAdapter.Connection != null))
                {
                    return this._stateMasterTableAdapter.Connection;
                }
                if ((this._cityMasterTableAdapter != null) && (this._cityMasterTableAdapter.Connection != null))
                {
                    return this._cityMasterTableAdapter.Connection;
                }
                if ((this._currencyMasterTableAdapter != null) && (this._currencyMasterTableAdapter.Connection != null))
                {
                    return this._currencyMasterTableAdapter.Connection;
                }
                if ((this._clientMasterTableAdapter != null) && (this._clientMasterTableAdapter.Connection != null))
                {
                    return this._clientMasterTableAdapter.Connection;
                }
                if ((this._testimonialsMasterTableAdapter != null) && (this._testimonialsMasterTableAdapter.Connection != null))
                {
                    return this._testimonialsMasterTableAdapter.Connection;
                }
                if ((this._inquiryMasterTableAdapter != null) && (this._inquiryMasterTableAdapter.Connection != null))
                {
                    return this._inquiryMasterTableAdapter.Connection;
                }
                if ((this._footerContentTableAdapter != null) && (this._footerContentTableAdapter.Connection != null))
                {
                    return this._footerContentTableAdapter.Connection;
                }
                if ((this._masterAdminLoginMasterTableAdapter != null) && (this._masterAdminLoginMasterTableAdapter.Connection != null))
                {
                    return this._masterAdminLoginMasterTableAdapter.Connection;
                }
                if ((this._moduleMasterTableAdapter != null) && (this._moduleMasterTableAdapter.Connection != null))
                {
                    return this._moduleMasterTableAdapter.Connection;
                }
                if ((this._packageDetailsTableAdapter != null) && (this._packageDetailsTableAdapter.Connection != null))
                {
                    return this._packageDetailsTableAdapter.Connection;
                }
                if ((this._packageMasterTableAdapter != null) && (this._packageMasterTableAdapter.Connection != null))
                {
                    return this._packageMasterTableAdapter.Connection;
                }
                if ((this._companyPackageDetailsTableAdapter != null) && (this._companyPackageDetailsTableAdapter.Connection != null))
                {
                    return this._companyPackageDetailsTableAdapter.Connection;
                }
                if ((this._formMasterTableAdapter != null) && (this._formMasterTableAdapter.Connection != null))
                {
                    return this._formMasterTableAdapter.Connection;
                }
                if ((this._masterAdminRightsMasterTableAdapter != null) && (this._masterAdminRightsMasterTableAdapter.Connection != null))
                {
                    return this._masterAdminRightsMasterTableAdapter.Connection;
                }
                if ((this._moduleFormMasterTableAdapter != null) && (this._moduleFormMasterTableAdapter.Connection != null))
                {
                    return this._moduleFormMasterTableAdapter.Connection;
                }
                if ((this._companyLoginMasterTableAdapter != null) && (this._companyLoginMasterTableAdapter.Connection != null))
                {
                    return this._companyLoginMasterTableAdapter.Connection;
                }
                if ((this._companyAdminRightsMasterTableAdapter != null) && (this._companyAdminRightsMasterTableAdapter.Connection != null))
                {
                    return this._companyAdminRightsMasterTableAdapter.Connection;
                }
                if ((this._packageUpgradeRequestMasterTableAdapter != null) && (this._packageUpgradeRequestMasterTableAdapter.Connection != null))
                {
                    return this._packageUpgradeRequestMasterTableAdapter.Connection;
                }
                if ((this._bussinessMasterTableAdapter != null) && (this._bussinessMasterTableAdapter.Connection != null))
                {
                    return this._bussinessMasterTableAdapter.Connection;
                }
                if ((this._currentAccountMasterTableAdapter != null) && (this._currentAccountMasterTableAdapter.Connection != null))
                {
                    return this._currentAccountMasterTableAdapter.Connection;
                }
                if ((this._industryMasterTableAdapter != null) && (this._industryMasterTableAdapter.Connection != null))
                {
                    return this._industryMasterTableAdapter.Connection;
                }
                if ((this._runningFromMasterTableAdapter != null) && (this._runningFromMasterTableAdapter.Connection != null))
                {
                    return this._runningFromMasterTableAdapter.Connection;
                }
                if ((this._packageModuleMasterTableAdapter != null) && (this._packageModuleMasterTableAdapter.Connection != null))
                {
                    return this._packageModuleMasterTableAdapter.Connection;
                }
                if ((this._cloudPackageDetailsTableAdapter != null) && (this._cloudPackageDetailsTableAdapter.Connection != null))
                {
                    return this._cloudPackageDetailsTableAdapter.Connection;
                }
                if ((this._packageFeatureMasterTableAdapter != null) && (this._packageFeatureMasterTableAdapter.Connection != null))
                {
                    return this._packageFeatureMasterTableAdapter.Connection;
                }
                if ((this._staffMasterTableAdapter != null) && (this._staffMasterTableAdapter.Connection != null))
                {
                    return this._staffMasterTableAdapter.Connection;
                }
                if ((this._taskMasterTableAdapter != null) && (this._taskMasterTableAdapter.Connection != null))
                {
                    return this._taskMasterTableAdapter.Connection;
                }
                if ((this._contractorMasterTableAdapter != null) && (this._contractorMasterTableAdapter.Connection != null))
                {
                    return this._contractorMasterTableAdapter.Connection;
                }
                if ((this._itemMasterTableAdapter != null) && (this._itemMasterTableAdapter.Connection != null))
                {
                    return this._itemMasterTableAdapter.Connection;
                }
                if ((this._taxMasterTableAdapter != null) && (this._taxMasterTableAdapter.Connection != null))
                {
                    return this._taxMasterTableAdapter.Connection;
                }
                if ((this._contractorProjectDetailTableAdapter != null) && (this._contractorProjectDetailTableAdapter.Connection != null))
                {
                    return this._contractorProjectDetailTableAdapter.Connection;
                }
                if ((this._staffProjectDetailTableAdapter != null) && (this._staffProjectDetailTableAdapter.Connection != null))
                {
                    return this._staffProjectDetailTableAdapter.Connection;
                }
                if ((this._projectTaskDetailTableAdapter != null) && (this._projectTaskDetailTableAdapter.Connection != null))
                {
                    return this._projectTaskDetailTableAdapter.Connection;
                }
                if ((this._projectMasterTableAdapter != null) && (this._projectMasterTableAdapter.Connection != null))
                {
                    return this._projectMasterTableAdapter.Connection;
                }
                if ((this._staffClientAssignDetailTableAdapter != null) && (this._staffClientAssignDetailTableAdapter.Connection != null))
                {
                    return this._staffClientAssignDetailTableAdapter.Connection;
                }
                if ((this._securityQuestionMasterTableAdapter != null) && (this._securityQuestionMasterTableAdapter.Connection != null))
                {
                    return this._securityQuestionMasterTableAdapter.Connection;
                }
                if ((this._invoiceItemDetailTableAdapter != null) && (this._invoiceItemDetailTableAdapter.Connection != null))
                {
                    return this._invoiceItemDetailTableAdapter.Connection;
                }
                if ((this._invoiceTaskDetailTableAdapter != null) && (this._invoiceTaskDetailTableAdapter.Connection != null))
                {
                    return this._invoiceTaskDetailTableAdapter.Connection;
                }
                if ((this._companyMasterTableAdapter != null) && (this._companyMasterTableAdapter.Connection != null))
                {
                    return this._companyMasterTableAdapter.Connection;
                }
                if ((this._paymentMasterTableAdapter != null) && (this._paymentMasterTableAdapter.Connection != null))
                {
                    return this._paymentMasterTableAdapter.Connection;
                }
                if ((this._estimateTaskDetailTableAdapter != null) && (this._estimateTaskDetailTableAdapter.Connection != null))
                {
                    return this._estimateTaskDetailTableAdapter.Connection;
                }
                if ((this._estimateItemDetailTableAdapter != null) && (this._estimateItemDetailTableAdapter.Connection != null))
                {
                    return this._estimateItemDetailTableAdapter.Connection;
                }
                if ((this._creditTaskDetailTableAdapter != null) && (this._creditTaskDetailTableAdapter.Connection != null))
                {
                    return this._creditTaskDetailTableAdapter.Connection;
                }
                if ((this._creditItemDetailTableAdapter != null) && (this._creditItemDetailTableAdapter.Connection != null))
                {
                    return this._creditItemDetailTableAdapter.Connection;
                }
                if ((this._companyClientContactDetailTableAdapter != null) && (this._companyClientContactDetailTableAdapter.Connection != null))
                {
                    return this._companyClientContactDetailTableAdapter.Connection;
                }
                if ((this._companyClientMasterTableAdapter != null) && (this._companyClientMasterTableAdapter.Connection != null))
                {
                    return this._companyClientMasterTableAdapter.Connection;
                }
                if ((this._creditDefaultTermsMasterTableAdapter != null) && (this._creditDefaultTermsMasterTableAdapter.Connection != null))
                {
                    return this._creditDefaultTermsMasterTableAdapter.Connection;
                }
                if ((this._estimateDefaultTermsMasterTableAdapter != null) && (this._estimateDefaultTermsMasterTableAdapter.Connection != null))
                {
                    return this._estimateDefaultTermsMasterTableAdapter.Connection;
                }
                if ((this._invoiceDefaultTermsMasterTableAdapter != null) && (this._invoiceDefaultTermsMasterTableAdapter.Connection != null))
                {
                    return this._invoiceDefaultTermsMasterTableAdapter.Connection;
                }
                if ((this._recurringTaskDetailTableAdapter != null) && (this._recurringTaskDetailTableAdapter.Connection != null))
                {
                    return this._recurringTaskDetailTableAdapter.Connection;
                }
                if ((this._recurringItemDetailTableAdapter != null) && (this._recurringItemDetailTableAdapter.Connection != null))
                {
                    return this._recurringItemDetailTableAdapter.Connection;
                }
                if ((this._categoryMasterTableAdapter != null) && (this._categoryMasterTableAdapter.Connection != null))
                {
                    return this._categoryMasterTableAdapter.Connection;
                }
                if ((this._subCategoryMasterTableAdapter != null) && (this._subCategoryMasterTableAdapter.Connection != null))
                {
                    return this._subCategoryMasterTableAdapter.Connection;
                }
                if ((this._expenseMasterTableAdapter != null) && (this._expenseMasterTableAdapter.Connection != null))
                {
                    return this._expenseMasterTableAdapter.Connection;
                }
                if ((this._timesheetMasterTableAdapter != null) && (this._timesheetMasterTableAdapter.Connection != null))
                {
                    return this._timesheetMasterTableAdapter.Connection;
                }
                if ((this._creditMasterTableAdapter != null) && (this._creditMasterTableAdapter.Connection != null))
                {
                    return this._creditMasterTableAdapter.Connection;
                }
                if ((this._creditHistoryDetailTableAdapter != null) && (this._creditHistoryDetailTableAdapter.Connection != null))
                {
                    return this._creditHistoryDetailTableAdapter.Connection;
                }
                if ((this._accountantMasterTableAdapter != null) && (this._accountantMasterTableAdapter.Connection != null))
                {
                    return this._accountantMasterTableAdapter.Connection;
                }
                if ((this._accountantClientDetailTableAdapter != null) && (this._accountantClientDetailTableAdapter.Connection != null))
                {
                    return this._accountantClientDetailTableAdapter.Connection;
                }
                if ((this._frequencyMasterTableAdapter != null) && (this._frequencyMasterTableAdapter.Connection != null))
                {
                    return this._frequencyMasterTableAdapter.Connection;
                }
                if ((this._recurringMasterTableAdapter != null) && (this._recurringMasterTableAdapter.Connection != null))
                {
                    return this._recurringMasterTableAdapter.Connection;
                }
                if ((this._invoiceMasterTableAdapter != null) && (this._invoiceMasterTableAdapter.Connection != null))
                {
                    return this._invoiceMasterTableAdapter.Connection;
                }
                if ((this._estimateMasterTableAdapter != null) && (this._estimateMasterTableAdapter.Connection != null))
                {
                    return this._estimateMasterTableAdapter.Connection;
                }
                if ((this._adminPermissionMasterTableAdapter != null) && (this._adminPermissionMasterTableAdapter.Connection != null))
                {
                    return this._adminPermissionMasterTableAdapter.Connection;
                }
                if ((this._staffPermissionMasterTableAdapter != null) && (this._staffPermissionMasterTableAdapter.Connection != null))
                {
                    return this._staffPermissionMasterTableAdapter.Connection;
                }
                if ((this._clientPermissionMasterTableAdapter != null) && (this._clientPermissionMasterTableAdapter.Connection != null))
                {
                    return this._clientPermissionMasterTableAdapter.Connection;
                }
                if ((this._templateMasterTableAdapter != null) && (this._templateMasterTableAdapter.Connection != null))
                {
                    return this._templateMasterTableAdapter.Connection;
                }
                if ((this._templateSettingsTableAdapter != null) && (this._templateSettingsTableAdapter.Connection != null))
                {
                    return this._templateSettingsTableAdapter.Connection;
                }
                if ((this._miscellaneousMasterTableAdapter != null) && (this._miscellaneousMasterTableAdapter.Connection != null))
                {
                    return this._miscellaneousMasterTableAdapter.Connection;
                }
                if ((this._newInvoiceEmailTemplateTableAdapter != null) && (this._newInvoiceEmailTemplateTableAdapter.Connection != null))
                {
                    return this._newInvoiceEmailTemplateTableAdapter.Connection;
                }
                if ((this._newEstimateEmailTemplateTableAdapter != null) && (this._newEstimateEmailTemplateTableAdapter.Connection != null))
                {
                    return this._newEstimateEmailTemplateTableAdapter.Connection;
                }
                if ((this._newCreditEmailTemplateTableAdapter != null) && (this._newCreditEmailTemplateTableAdapter.Connection != null))
                {
                    return this._newCreditEmailTemplateTableAdapter.Connection;
                }
                if ((this._newStaffEmailTemplateTableAdapter != null) && (this._newStaffEmailTemplateTableAdapter.Connection != null))
                {
                    return this._newStaffEmailTemplateTableAdapter.Connection;
                }
                if ((this._newClientEmailTemplateTableAdapter != null) && (this._newClientEmailTemplateTableAdapter.Connection != null))
                {
                    return this._newClientEmailTemplateTableAdapter.Connection;
                }
                if ((this._sMTPSettingsTableAdapter != null) && (this._sMTPSettingsTableAdapter.Connection != null))
                {
                    return this._sMTPSettingsTableAdapter.Connection;
                }
                if ((this._emailNotificationsTableAdapter != null) && (this._emailNotificationsTableAdapter.Connection != null))
                {
                    return this._emailNotificationsTableAdapter.Connection;
                }
                if ((this._newPaymentEmailTemplateTableAdapter != null) && (this._newPaymentEmailTemplateTableAdapter.Connection != null))
                {
                    return this._newPaymentEmailTemplateTableAdapter.Connection;
                }
                if ((this._latePaymentReminderTemplateTableAdapter != null) && (this._latePaymentReminderTemplateTableAdapter.Connection != null))
                {
                    return this._latePaymentReminderTemplateTableAdapter.Connection;
                }
                if ((this._autoBillEmailTemplateTableAdapter != null) && (this._autoBillEmailTemplateTableAdapter.Connection != null))
                {
                    return this._autoBillEmailTemplateTableAdapter.Connection;
                }
                if ((this._invoiceDisputeHistoryTableAdapter != null) && (this._invoiceDisputeHistoryTableAdapter.Connection != null))
                {
                    return this._invoiceDisputeHistoryTableAdapter.Connection;
                }
                if ((this._estimateDisputeHistoryTableAdapter != null) && (this._estimateDisputeHistoryTableAdapter.Connection != null))
                {
                    return this._estimateDisputeHistoryTableAdapter.Connection;
                }
                if ((this._paymentGatewayMasterTableAdapter != null) && (this._paymentGatewayMasterTableAdapter.Connection != null))
                {
                    return this._paymentGatewayMasterTableAdapter.Connection;
                }
                if ((this._paymentGatewayPaypalMasterTableAdapter != null) && (this._paymentGatewayPaypalMasterTableAdapter.Connection != null))
                {
                    return this._paymentGatewayPaypalMasterTableAdapter.Connection;
                }
                if ((this._companyPaypalMasterTableAdapter != null) && (this._companyPaypalMasterTableAdapter.Connection != null))
                {
                    return this._companyPaypalMasterTableAdapter.Connection;
                }
                if ((this._companyPaymentMasterTableAdapter != null) && (this._companyPaymentMasterTableAdapter.Connection != null))
                {
                    return this._companyPaymentMasterTableAdapter.Connection;
                }
                if ((this._cloudPackageMasterTableAdapter != null) && (this._cloudPackageMasterTableAdapter.Connection != null))
                {
                    return this._cloudPackageMasterTableAdapter.Connection;
                }
                if ((this._companyPackageMasterTableAdapter != null) && (this._companyPackageMasterTableAdapter.Connection != null))
                {
                    return this._companyPackageMasterTableAdapter.Connection;
                }
                if ((this._freePackageSettingsTableAdapter != null) && (this._freePackageSettingsTableAdapter.Connection != null))
                {
                    return this._freePackageSettingsTableAdapter.Connection;
                }
                if ((this._supportDepartmentMasterTableAdapter != null) && (this._supportDepartmentMasterTableAdapter.Connection != null))
                {
                    return this._supportDepartmentMasterTableAdapter.Connection;
                }
                if ((this._doyinGoSupportTicketTableAdapter != null) && (this._doyinGoSupportTicketTableAdapter.Connection != null))
                {
                    return this._doyinGoSupportTicketTableAdapter.Connection;
                }
                if ((this._doyinGoTicketAttachmentTableAdapter != null) && (this._doyinGoTicketAttachmentTableAdapter.Connection != null))
                {
                    return this._doyinGoTicketAttachmentTableAdapter.Connection;
                }
                if ((this._doyinGoSupportDiscussionTableAdapter != null) && (this._doyinGoSupportDiscussionTableAdapter.Connection != null))
                {
                    return this._doyinGoSupportDiscussionTableAdapter.Connection;
                }
                if ((this._termServiceContentTableAdapter != null) && (this._termServiceContentTableAdapter.Connection != null))
                {
                    return this._termServiceContentTableAdapter.Connection;
                }
                if ((this._privacyPolicyContentTableAdapter != null) && (this._privacyPolicyContentTableAdapter.Connection != null))
                {
                    return this._privacyPolicyContentTableAdapter.Connection;
                }
                return null;
            }
            set
            {
                this._connection = value;
            }
        }
        
        [DebuggerNonUserCode, Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DABL.DAL.CloudAccountDATableAdapters.ContactMasterTableAdapter ContactMasterTableAdapter
        {
            get
            {
                return this._contactMasterTableAdapter;
            }
            set
            {
                this._contactMasterTableAdapter = value;
            }
        }
        
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor")]
        public DABL.DAL.CloudAccountDATableAdapters.ContractorMasterTableAdapter ContractorMasterTableAdapter
        {
            get
            {
                return this._contractorMasterTableAdapter;
            }
            set
            {
                this._contractorMasterTableAdapter = value;
            }
        }
        
        [Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DABL.DAL.CloudAccountDATableAdapters.ContractorProjectDetailTableAdapter ContractorProjectDetailTableAdapter
        {
            get
            {
                return this._contractorProjectDetailTableAdapter;
            }
            set
            {
                this._contractorProjectDetailTableAdapter = value;
            }
        }
        
        [Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        public DABL.DAL.CloudAccountDATableAdapters.CountryMasterTableAdapter CountryMasterTableAdapter
        {
            get
            {
                return this._countryMasterTableAdapter;
            }
            set
            {
                this._countryMasterTableAdapter = value;
            }
        }
        
        [Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        public DABL.DAL.CloudAccountDATableAdapters.CreditDefaultTermsMasterTableAdapter CreditDefaultTermsMasterTableAdapter
        {
            get
            {
                return this._creditDefaultTermsMasterTableAdapter;
            }
            set
            {
                this._creditDefaultTermsMasterTableAdapter = value;
            }
        }
        
        [DebuggerNonUserCode, Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DABL.DAL.CloudAccountDATableAdapters.CreditHistoryDetailTableAdapter CreditHistoryDetailTableAdapter
        {
            get
            {
                return this._creditHistoryDetailTableAdapter;
            }
            set
            {
                this._creditHistoryDetailTableAdapter = value;
            }
        }
        
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), DebuggerNonUserCode]
        public DABL.DAL.CloudAccountDATableAdapters.CreditItemDetailTableAdapter CreditItemDetailTableAdapter
        {
            get
            {
                return this._creditItemDetailTableAdapter;
            }
            set
            {
                this._creditItemDetailTableAdapter = value;
            }
        }
        
        [DebuggerNonUserCode, Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DABL.DAL.CloudAccountDATableAdapters.CreditMasterTableAdapter CreditMasterTableAdapter
        {
            get
            {
                return this._creditMasterTableAdapter;
            }
            set
            {
                this._creditMasterTableAdapter = value;
            }
        }
        
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), DebuggerNonUserCode]
        public DABL.DAL.CloudAccountDATableAdapters.CreditTaskDetailTableAdapter CreditTaskDetailTableAdapter
        {
            get
            {
                return this._creditTaskDetailTableAdapter;
            }
            set
            {
                this._creditTaskDetailTableAdapter = value;
            }
        }
        
        [Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DABL.DAL.CloudAccountDATableAdapters.CurrencyMasterTableAdapter CurrencyMasterTableAdapter
        {
            get
            {
                return this._currencyMasterTableAdapter;
            }
            set
            {
                this._currencyMasterTableAdapter = value;
            }
        }
        
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor")]
        public DABL.DAL.CloudAccountDATableAdapters.CurrentAccountMasterTableAdapter CurrentAccountMasterTableAdapter
        {
            get
            {
                return this._currentAccountMasterTableAdapter;
            }
            set
            {
                this._currentAccountMasterTableAdapter = value;
            }
        }
        
        [Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DABL.DAL.CloudAccountDATableAdapters.DoyinGoSupportDiscussionTableAdapter DoyinGoSupportDiscussionTableAdapter
        {
            get
            {
                return this._doyinGoSupportDiscussionTableAdapter;
            }
            set
            {
                this._doyinGoSupportDiscussionTableAdapter = value;
            }
        }
        
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor")]
        public DABL.DAL.CloudAccountDATableAdapters.DoyinGoSupportTicketTableAdapter DoyinGoSupportTicketTableAdapter
        {
            get
            {
                return this._doyinGoSupportTicketTableAdapter;
            }
            set
            {
                this._doyinGoSupportTicketTableAdapter = value;
            }
        }
        
        [Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DABL.DAL.CloudAccountDATableAdapters.DoyinGoTicketAttachmentTableAdapter DoyinGoTicketAttachmentTableAdapter
        {
            get
            {
                return this._doyinGoTicketAttachmentTableAdapter;
            }
            set
            {
                this._doyinGoTicketAttachmentTableAdapter = value;
            }
        }
        
        [Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        public DABL.DAL.CloudAccountDATableAdapters.EmailNotificationsTableAdapter EmailNotificationsTableAdapter
        {
            get
            {
                return this._emailNotificationsTableAdapter;
            }
            set
            {
                this._emailNotificationsTableAdapter = value;
            }
        }
        
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor")]
        public DABL.DAL.CloudAccountDATableAdapters.EstimateDefaultTermsMasterTableAdapter EstimateDefaultTermsMasterTableAdapter
        {
            get
            {
                return this._estimateDefaultTermsMasterTableAdapter;
            }
            set
            {
                this._estimateDefaultTermsMasterTableAdapter = value;
            }
        }
        
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), DebuggerNonUserCode]
        public DABL.DAL.CloudAccountDATableAdapters.EstimateDisputeHistoryTableAdapter EstimateDisputeHistoryTableAdapter
        {
            get
            {
                return this._estimateDisputeHistoryTableAdapter;
            }
            set
            {
                this._estimateDisputeHistoryTableAdapter = value;
            }
        }
        
        [Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DABL.DAL.CloudAccountDATableAdapters.EstimateItemDetailTableAdapter EstimateItemDetailTableAdapter
        {
            get
            {
                return this._estimateItemDetailTableAdapter;
            }
            set
            {
                this._estimateItemDetailTableAdapter = value;
            }
        }
        
        [Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DABL.DAL.CloudAccountDATableAdapters.EstimateMasterTableAdapter EstimateMasterTableAdapter
        {
            get
            {
                return this._estimateMasterTableAdapter;
            }
            set
            {
                this._estimateMasterTableAdapter = value;
            }
        }
        
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor")]
        public DABL.DAL.CloudAccountDATableAdapters.EstimateTaskDetailTableAdapter EstimateTaskDetailTableAdapter
        {
            get
            {
                return this._estimateTaskDetailTableAdapter;
            }
            set
            {
                this._estimateTaskDetailTableAdapter = value;
            }
        }
        
        [Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DABL.DAL.CloudAccountDATableAdapters.ExpenseMasterTableAdapter ExpenseMasterTableAdapter
        {
            get
            {
                return this._expenseMasterTableAdapter;
            }
            set
            {
                this._expenseMasterTableAdapter = value;
            }
        }
        
        [DebuggerNonUserCode, Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DABL.DAL.CloudAccountDATableAdapters.FAQCategoryMasterTableAdapter FAQCategoryMasterTableAdapter
        {
            get
            {
                return this._fAQCategoryMasterTableAdapter;
            }
            set
            {
                this._fAQCategoryMasterTableAdapter = value;
            }
        }
        
        [Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DABL.DAL.CloudAccountDATableAdapters.FAQMasterTableAdapter FAQMasterTableAdapter
        {
            get
            {
                return this._fAQMasterTableAdapter;
            }
            set
            {
                this._fAQMasterTableAdapter = value;
            }
        }
        
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor")]
        public DABL.DAL.CloudAccountDATableAdapters.FeatureCategoryMasterTableAdapter FeatureCategoryMasterTableAdapter
        {
            get
            {
                return this._featureCategoryMasterTableAdapter;
            }
            set
            {
                this._featureCategoryMasterTableAdapter = value;
            }
        }
        
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor")]
        public DABL.DAL.CloudAccountDATableAdapters.FeatureContentMasterTableAdapter FeatureContentMasterTableAdapter
        {
            get
            {
                return this._featureContentMasterTableAdapter;
            }
            set
            {
                this._featureContentMasterTableAdapter = value;
            }
        }
        
        [Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DABL.DAL.CloudAccountDATableAdapters.FeatureMasterTableAdapter FeatureMasterTableAdapter
        {
            get
            {
                return this._featureMasterTableAdapter;
            }
            set
            {
                this._featureMasterTableAdapter = value;
            }
        }
        
        [DebuggerNonUserCode, Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DABL.DAL.CloudAccountDATableAdapters.FooterContentTableAdapter FooterContentTableAdapter
        {
            get
            {
                return this._footerContentTableAdapter;
            }
            set
            {
                this._footerContentTableAdapter = value;
            }
        }
        
        [Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        public DABL.DAL.CloudAccountDATableAdapters.FormMasterTableAdapter FormMasterTableAdapter
        {
            get
            {
                return this._formMasterTableAdapter;
            }
            set
            {
                this._formMasterTableAdapter = value;
            }
        }
        
        [DebuggerNonUserCode, Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DABL.DAL.CloudAccountDATableAdapters.FreePackageSettingsTableAdapter FreePackageSettingsTableAdapter
        {
            get
            {
                return this._freePackageSettingsTableAdapter;
            }
            set
            {
                this._freePackageSettingsTableAdapter = value;
            }
        }
        
        [Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        public DABL.DAL.CloudAccountDATableAdapters.FrequencyMasterTableAdapter FrequencyMasterTableAdapter
        {
            get
            {
                return this._frequencyMasterTableAdapter;
            }
            set
            {
                this._frequencyMasterTableAdapter = value;
            }
        }
        
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor")]
        public DABL.DAL.CloudAccountDATableAdapters.HomeMasterTableAdapter HomeMasterTableAdapter
        {
            get
            {
                return this._homeMasterTableAdapter;
            }
            set
            {
                this._homeMasterTableAdapter = value;
            }
        }
        
        [DebuggerNonUserCode, Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DABL.DAL.CloudAccountDATableAdapters.HomePageSliderTableAdapter HomePageSliderTableAdapter
        {
            get
            {
                return this._homePageSliderTableAdapter;
            }
            set
            {
                this._homePageSliderTableAdapter = value;
            }
        }
        
        [Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DABL.DAL.CloudAccountDATableAdapters.IndustryMasterTableAdapter IndustryMasterTableAdapter
        {
            get
            {
                return this._industryMasterTableAdapter;
            }
            set
            {
                this._industryMasterTableAdapter = value;
            }
        }
        
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor")]
        public DABL.DAL.CloudAccountDATableAdapters.InquiryMasterTableAdapter InquiryMasterTableAdapter
        {
            get
            {
                return this._inquiryMasterTableAdapter;
            }
            set
            {
                this._inquiryMasterTableAdapter = value;
            }
        }
        
        [DebuggerNonUserCode, Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DABL.DAL.CloudAccountDATableAdapters.InvoiceDefaultTermsMasterTableAdapter InvoiceDefaultTermsMasterTableAdapter
        {
            get
            {
                return this._invoiceDefaultTermsMasterTableAdapter;
            }
            set
            {
                this._invoiceDefaultTermsMasterTableAdapter = value;
            }
        }
        
        [Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        public DABL.DAL.CloudAccountDATableAdapters.InvoiceDisputeHistoryTableAdapter InvoiceDisputeHistoryTableAdapter
        {
            get
            {
                return this._invoiceDisputeHistoryTableAdapter;
            }
            set
            {
                this._invoiceDisputeHistoryTableAdapter = value;
            }
        }
        
        [Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DABL.DAL.CloudAccountDATableAdapters.InvoiceItemDetailTableAdapter InvoiceItemDetailTableAdapter
        {
            get
            {
                return this._invoiceItemDetailTableAdapter;
            }
            set
            {
                this._invoiceItemDetailTableAdapter = value;
            }
        }
        
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), DebuggerNonUserCode]
        public DABL.DAL.CloudAccountDATableAdapters.InvoiceMasterTableAdapter InvoiceMasterTableAdapter
        {
            get
            {
                return this._invoiceMasterTableAdapter;
            }
            set
            {
                this._invoiceMasterTableAdapter = value;
            }
        }
        
        [Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        public DABL.DAL.CloudAccountDATableAdapters.InvoiceTaskDetailTableAdapter InvoiceTaskDetailTableAdapter
        {
            get
            {
                return this._invoiceTaskDetailTableAdapter;
            }
            set
            {
                this._invoiceTaskDetailTableAdapter = value;
            }
        }
        
        [DebuggerNonUserCode, Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DABL.DAL.CloudAccountDATableAdapters.ItemMasterTableAdapter ItemMasterTableAdapter
        {
            get
            {
                return this._itemMasterTableAdapter;
            }
            set
            {
                this._itemMasterTableAdapter = value;
            }
        }
        
        [Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DABL.DAL.CloudAccountDATableAdapters.LatePaymentReminderTemplateTableAdapter LatePaymentReminderTemplateTableAdapter
        {
            get
            {
                return this._latePaymentReminderTemplateTableAdapter;
            }
            set
            {
                this._latePaymentReminderTemplateTableAdapter = value;
            }
        }
        
        [DebuggerNonUserCode, Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DABL.DAL.CloudAccountDATableAdapters.MasterAdminLoginMasterTableAdapter MasterAdminLoginMasterTableAdapter
        {
            get
            {
                return this._masterAdminLoginMasterTableAdapter;
            }
            set
            {
                this._masterAdminLoginMasterTableAdapter = value;
            }
        }
        
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor")]
        public DABL.DAL.CloudAccountDATableAdapters.MasterAdminRightsMasterTableAdapter MasterAdminRightsMasterTableAdapter
        {
            get
            {
                return this._masterAdminRightsMasterTableAdapter;
            }
            set
            {
                this._masterAdminRightsMasterTableAdapter = value;
            }
        }
        
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor")]
        public DABL.DAL.CloudAccountDATableAdapters.MiscellaneousMasterTableAdapter MiscellaneousMasterTableAdapter
        {
            get
            {
                return this._miscellaneousMasterTableAdapter;
            }
            set
            {
                this._miscellaneousMasterTableAdapter = value;
            }
        }
        
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor")]
        public DABL.DAL.CloudAccountDATableAdapters.ModuleFormMasterTableAdapter ModuleFormMasterTableAdapter
        {
            get
            {
                return this._moduleFormMasterTableAdapter;
            }
            set
            {
                this._moduleFormMasterTableAdapter = value;
            }
        }
        
        [Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DABL.DAL.CloudAccountDATableAdapters.ModuleMasterTableAdapter ModuleMasterTableAdapter
        {
            get
            {
                return this._moduleMasterTableAdapter;
            }
            set
            {
                this._moduleMasterTableAdapter = value;
            }
        }
        
        [DebuggerNonUserCode, Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DABL.DAL.CloudAccountDATableAdapters.NewClientEmailTemplateTableAdapter NewClientEmailTemplateTableAdapter
        {
            get
            {
                return this._newClientEmailTemplateTableAdapter;
            }
            set
            {
                this._newClientEmailTemplateTableAdapter = value;
            }
        }
        
        [Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DABL.DAL.CloudAccountDATableAdapters.NewCreditEmailTemplateTableAdapter NewCreditEmailTemplateTableAdapter
        {
            get
            {
                return this._newCreditEmailTemplateTableAdapter;
            }
            set
            {
                this._newCreditEmailTemplateTableAdapter = value;
            }
        }
        
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), DebuggerNonUserCode]
        public DABL.DAL.CloudAccountDATableAdapters.NewEstimateEmailTemplateTableAdapter NewEstimateEmailTemplateTableAdapter
        {
            get
            {
                return this._newEstimateEmailTemplateTableAdapter;
            }
            set
            {
                this._newEstimateEmailTemplateTableAdapter = value;
            }
        }
        
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor")]
        public DABL.DAL.CloudAccountDATableAdapters.NewInvoiceEmailTemplateTableAdapter NewInvoiceEmailTemplateTableAdapter
        {
            get
            {
                return this._newInvoiceEmailTemplateTableAdapter;
            }
            set
            {
                this._newInvoiceEmailTemplateTableAdapter = value;
            }
        }
        
        [DebuggerNonUserCode, Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DABL.DAL.CloudAccountDATableAdapters.NewPaymentEmailTemplateTableAdapter NewPaymentEmailTemplateTableAdapter
        {
            get
            {
                return this._newPaymentEmailTemplateTableAdapter;
            }
            set
            {
                this._newPaymentEmailTemplateTableAdapter = value;
            }
        }
        
        [DebuggerNonUserCode, Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DABL.DAL.CloudAccountDATableAdapters.NewStaffEmailTemplateTableAdapter NewStaffEmailTemplateTableAdapter
        {
            get
            {
                return this._newStaffEmailTemplateTableAdapter;
            }
            set
            {
                this._newStaffEmailTemplateTableAdapter = value;
            }
        }
        
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), DebuggerNonUserCode]
        public DABL.DAL.CloudAccountDATableAdapters.PackageDetailsTableAdapter PackageDetailsTableAdapter
        {
            get
            {
                return this._packageDetailsTableAdapter;
            }
            set
            {
                this._packageDetailsTableAdapter = value;
            }
        }
        
        [DebuggerNonUserCode, Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DABL.DAL.CloudAccountDATableAdapters.PackageFeatureMasterTableAdapter PackageFeatureMasterTableAdapter
        {
            get
            {
                return this._packageFeatureMasterTableAdapter;
            }
            set
            {
                this._packageFeatureMasterTableAdapter = value;
            }
        }
        
        [Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        public DABL.DAL.CloudAccountDATableAdapters.PackageMasterTableAdapter PackageMasterTableAdapter
        {
            get
            {
                return this._packageMasterTableAdapter;
            }
            set
            {
                this._packageMasterTableAdapter = value;
            }
        }
        
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), DebuggerNonUserCode]
        public DABL.DAL.CloudAccountDATableAdapters.PackageModuleMasterTableAdapter PackageModuleMasterTableAdapter
        {
            get
            {
                return this._packageModuleMasterTableAdapter;
            }
            set
            {
                this._packageModuleMasterTableAdapter = value;
            }
        }
        
        [DebuggerNonUserCode, Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DABL.DAL.CloudAccountDATableAdapters.PackageUpgradeRequestMasterTableAdapter PackageUpgradeRequestMasterTableAdapter
        {
            get
            {
                return this._packageUpgradeRequestMasterTableAdapter;
            }
            set
            {
                this._packageUpgradeRequestMasterTableAdapter = value;
            }
        }
        
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor")]
        public DABL.DAL.CloudAccountDATableAdapters.PaymentGatewayMasterTableAdapter PaymentGatewayMasterTableAdapter
        {
            get
            {
                return this._paymentGatewayMasterTableAdapter;
            }
            set
            {
                this._paymentGatewayMasterTableAdapter = value;
            }
        }
        
        [Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DABL.DAL.CloudAccountDATableAdapters.PaymentGatewayPaypalMasterTableAdapter PaymentGatewayPaypalMasterTableAdapter
        {
            get
            {
                return this._paymentGatewayPaypalMasterTableAdapter;
            }
            set
            {
                this._paymentGatewayPaypalMasterTableAdapter = value;
            }
        }
        
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), DebuggerNonUserCode]
        public DABL.DAL.CloudAccountDATableAdapters.PaymentMasterTableAdapter PaymentMasterTableAdapter
        {
            get
            {
                return this._paymentMasterTableAdapter;
            }
            set
            {
                this._paymentMasterTableAdapter = value;
            }
        }
        
        [Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DABL.DAL.CloudAccountDATableAdapters.PrivacyPolicyContentTableAdapter PrivacyPolicyContentTableAdapter
        {
            get
            {
                return this._privacyPolicyContentTableAdapter;
            }
            set
            {
                this._privacyPolicyContentTableAdapter = value;
            }
        }
        
        [DebuggerNonUserCode, Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DABL.DAL.CloudAccountDATableAdapters.ProjectMasterTableAdapter ProjectMasterTableAdapter
        {
            get
            {
                return this._projectMasterTableAdapter;
            }
            set
            {
                this._projectMasterTableAdapter = value;
            }
        }
        
        [Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DABL.DAL.CloudAccountDATableAdapters.ProjectTaskDetailTableAdapter ProjectTaskDetailTableAdapter
        {
            get
            {
                return this._projectTaskDetailTableAdapter;
            }
            set
            {
                this._projectTaskDetailTableAdapter = value;
            }
        }
        
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor")]
        public DABL.DAL.CloudAccountDATableAdapters.RecurringItemDetailTableAdapter RecurringItemDetailTableAdapter
        {
            get
            {
                return this._recurringItemDetailTableAdapter;
            }
            set
            {
                this._recurringItemDetailTableAdapter = value;
            }
        }
        
        [Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DABL.DAL.CloudAccountDATableAdapters.RecurringMasterTableAdapter RecurringMasterTableAdapter
        {
            get
            {
                return this._recurringMasterTableAdapter;
            }
            set
            {
                this._recurringMasterTableAdapter = value;
            }
        }
        
        [DebuggerNonUserCode, Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DABL.DAL.CloudAccountDATableAdapters.RecurringTaskDetailTableAdapter RecurringTaskDetailTableAdapter
        {
            get
            {
                return this._recurringTaskDetailTableAdapter;
            }
            set
            {
                this._recurringTaskDetailTableAdapter = value;
            }
        }
        
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), DebuggerNonUserCode]
        public DABL.DAL.CloudAccountDATableAdapters.RunningFromMasterTableAdapter RunningFromMasterTableAdapter
        {
            get
            {
                return this._runningFromMasterTableAdapter;
            }
            set
            {
                this._runningFromMasterTableAdapter = value;
            }
        }
        
        [Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        public DABL.DAL.CloudAccountDATableAdapters.SecurityQuestionMasterTableAdapter SecurityQuestionMasterTableAdapter
        {
            get
            {
                return this._securityQuestionMasterTableAdapter;
            }
            set
            {
                this._securityQuestionMasterTableAdapter = value;
            }
        }
        
        [Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DABL.DAL.CloudAccountDATableAdapters.SMTPSettingsTableAdapter SMTPSettingsTableAdapter
        {
            get
            {
                return this._sMTPSettingsTableAdapter;
            }
            set
            {
                this._sMTPSettingsTableAdapter = value;
            }
        }
        
        [Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DABL.DAL.CloudAccountDATableAdapters.StaffClientAssignDetailTableAdapter StaffClientAssignDetailTableAdapter
        {
            get
            {
                return this._staffClientAssignDetailTableAdapter;
            }
            set
            {
                this._staffClientAssignDetailTableAdapter = value;
            }
        }
        
        [Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DABL.DAL.CloudAccountDATableAdapters.StaffMasterTableAdapter StaffMasterTableAdapter
        {
            get
            {
                return this._staffMasterTableAdapter;
            }
            set
            {
                this._staffMasterTableAdapter = value;
            }
        }
        
        [Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        public DABL.DAL.CloudAccountDATableAdapters.StaffPermissionMasterTableAdapter StaffPermissionMasterTableAdapter
        {
            get
            {
                return this._staffPermissionMasterTableAdapter;
            }
            set
            {
                this._staffPermissionMasterTableAdapter = value;
            }
        }
        
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), DebuggerNonUserCode]
        public DABL.DAL.CloudAccountDATableAdapters.StaffProjectDetailTableAdapter StaffProjectDetailTableAdapter
        {
            get
            {
                return this._staffProjectDetailTableAdapter;
            }
            set
            {
                this._staffProjectDetailTableAdapter = value;
            }
        }
        
        [Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DABL.DAL.CloudAccountDATableAdapters.StateMasterTableAdapter StateMasterTableAdapter
        {
            get
            {
                return this._stateMasterTableAdapter;
            }
            set
            {
                this._stateMasterTableAdapter = value;
            }
        }
        
        [Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DABL.DAL.CloudAccountDATableAdapters.SubCategoryMasterTableAdapter SubCategoryMasterTableAdapter
        {
            get
            {
                return this._subCategoryMasterTableAdapter;
            }
            set
            {
                this._subCategoryMasterTableAdapter = value;
            }
        }
        
        [DebuggerNonUserCode, Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DABL.DAL.CloudAccountDATableAdapters.SupportDepartmentMasterTableAdapter SupportDepartmentMasterTableAdapter
        {
            get
            {
                return this._supportDepartmentMasterTableAdapter;
            }
            set
            {
                this._supportDepartmentMasterTableAdapter = value;
            }
        }
        
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Browsable(false), DebuggerNonUserCode]
        public int TableAdapterInstanceCount
        {
            get
            {
                int num = 0;
                if (this._aboutContentMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._aboutCategoryMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._featureCategoryMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._featureContentMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._homeMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._fAQCategoryMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._fAQMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._homePageSliderTableAdapter != null)
                {
                    num++;
                }
                if (this._contactMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._featureMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._countryMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._stateMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._cityMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._currencyMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._clientMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._testimonialsMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._inquiryMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._footerContentTableAdapter != null)
                {
                    num++;
                }
                if (this._masterAdminLoginMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._moduleMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._packageDetailsTableAdapter != null)
                {
                    num++;
                }
                if (this._packageMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._companyPackageDetailsTableAdapter != null)
                {
                    num++;
                }
                if (this._formMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._masterAdminRightsMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._moduleFormMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._companyLoginMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._companyAdminRightsMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._packageUpgradeRequestMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._bussinessMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._currentAccountMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._industryMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._runningFromMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._packageModuleMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._cloudPackageDetailsTableAdapter != null)
                {
                    num++;
                }
                if (this._packageFeatureMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._staffMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._taskMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._contractorMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._itemMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._taxMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._contractorProjectDetailTableAdapter != null)
                {
                    num++;
                }
                if (this._staffProjectDetailTableAdapter != null)
                {
                    num++;
                }
                if (this._projectTaskDetailTableAdapter != null)
                {
                    num++;
                }
                if (this._projectMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._staffClientAssignDetailTableAdapter != null)
                {
                    num++;
                }
                if (this._securityQuestionMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._invoiceItemDetailTableAdapter != null)
                {
                    num++;
                }
                if (this._invoiceTaskDetailTableAdapter != null)
                {
                    num++;
                }
                if (this._companyMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._paymentMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._estimateTaskDetailTableAdapter != null)
                {
                    num++;
                }
                if (this._estimateItemDetailTableAdapter != null)
                {
                    num++;
                }
                if (this._creditTaskDetailTableAdapter != null)
                {
                    num++;
                }
                if (this._creditItemDetailTableAdapter != null)
                {
                    num++;
                }
                if (this._companyClientContactDetailTableAdapter != null)
                {
                    num++;
                }
                if (this._companyClientMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._creditDefaultTermsMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._estimateDefaultTermsMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._invoiceDefaultTermsMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._recurringTaskDetailTableAdapter != null)
                {
                    num++;
                }
                if (this._recurringItemDetailTableAdapter != null)
                {
                    num++;
                }
                if (this._categoryMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._subCategoryMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._expenseMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._timesheetMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._creditMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._creditHistoryDetailTableAdapter != null)
                {
                    num++;
                }
                if (this._accountantMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._accountantClientDetailTableAdapter != null)
                {
                    num++;
                }
                if (this._frequencyMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._recurringMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._invoiceMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._estimateMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._adminPermissionMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._staffPermissionMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._clientPermissionMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._templateMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._templateSettingsTableAdapter != null)
                {
                    num++;
                }
                if (this._miscellaneousMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._newInvoiceEmailTemplateTableAdapter != null)
                {
                    num++;
                }
                if (this._newEstimateEmailTemplateTableAdapter != null)
                {
                    num++;
                }
                if (this._newCreditEmailTemplateTableAdapter != null)
                {
                    num++;
                }
                if (this._newStaffEmailTemplateTableAdapter != null)
                {
                    num++;
                }
                if (this._newClientEmailTemplateTableAdapter != null)
                {
                    num++;
                }
                if (this._sMTPSettingsTableAdapter != null)
                {
                    num++;
                }
                if (this._emailNotificationsTableAdapter != null)
                {
                    num++;
                }
                if (this._newPaymentEmailTemplateTableAdapter != null)
                {
                    num++;
                }
                if (this._latePaymentReminderTemplateTableAdapter != null)
                {
                    num++;
                }
                if (this._autoBillEmailTemplateTableAdapter != null)
                {
                    num++;
                }
                if (this._invoiceDisputeHistoryTableAdapter != null)
                {
                    num++;
                }
                if (this._estimateDisputeHistoryTableAdapter != null)
                {
                    num++;
                }
                if (this._paymentGatewayMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._paymentGatewayPaypalMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._companyPaypalMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._companyPaymentMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._cloudPackageMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._companyPackageMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._freePackageSettingsTableAdapter != null)
                {
                    num++;
                }
                if (this._supportDepartmentMasterTableAdapter != null)
                {
                    num++;
                }
                if (this._doyinGoSupportTicketTableAdapter != null)
                {
                    num++;
                }
                if (this._doyinGoTicketAttachmentTableAdapter != null)
                {
                    num++;
                }
                if (this._doyinGoSupportDiscussionTableAdapter != null)
                {
                    num++;
                }
                if (this._termServiceContentTableAdapter != null)
                {
                    num++;
                }
                if (this._privacyPolicyContentTableAdapter != null)
                {
                    num++;
                }
                return num;
            }
        }
        
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor")]
        public DABL.DAL.CloudAccountDATableAdapters.TaskMasterTableAdapter TaskMasterTableAdapter
        {
            get
            {
                return this._taskMasterTableAdapter;
            }
            set
            {
                this._taskMasterTableAdapter = value;
            }
        }
        
        [DebuggerNonUserCode, Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DABL.DAL.CloudAccountDATableAdapters.TaxMasterTableAdapter TaxMasterTableAdapter
        {
            get
            {
                return this._taxMasterTableAdapter;
            }
            set
            {
                this._taxMasterTableAdapter = value;
            }
        }
        
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode, Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor")]
        public DABL.DAL.CloudAccountDATableAdapters.TemplateMasterTableAdapter TemplateMasterTableAdapter
        {
            get
            {
                return this._templateMasterTableAdapter;
            }
            set
            {
                this._templateMasterTableAdapter = value;
            }
        }
        
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor")]
        public DABL.DAL.CloudAccountDATableAdapters.TemplateSettingsTableAdapter TemplateSettingsTableAdapter
        {
            get
            {
                return this._templateSettingsTableAdapter;
            }
            set
            {
                this._templateSettingsTableAdapter = value;
            }
        }
        
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor")]
        public DABL.DAL.CloudAccountDATableAdapters.TermServiceContentTableAdapter TermServiceContentTableAdapter
        {
            get
            {
                return this._termServiceContentTableAdapter;
            }
            set
            {
                this._termServiceContentTableAdapter = value;
            }
        }
        
        [Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor"), DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public DABL.DAL.CloudAccountDATableAdapters.TestimonialsMasterTableAdapter TestimonialsMasterTableAdapter
        {
            get
            {
                return this._testimonialsMasterTableAdapter;
            }
            set
            {
                this._testimonialsMasterTableAdapter = value;
            }
        }
        
        [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), Editor("Microsoft.VSDesigner.DataSource.Design.TableAdapterManagerPropertyEditor, Microsoft.VSDesigner, Version=10.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a", "System.Drawing.Design.UITypeEditor")]
        public DABL.DAL.CloudAccountDATableAdapters.TimesheetMasterTableAdapter TimesheetMasterTableAdapter
        {
            get
            {
                return this._timesheetMasterTableAdapter;
            }
            set
            {
                this._timesheetMasterTableAdapter = value;
            }
        }
        
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
        public UpdateOrderOption UpdateOrder
        {
            get
            {
                return this._updateOrder;
            }
            set
            {
                this._updateOrder = value;
            }
        }
        
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        private class SelfReferenceComparer : IComparer<DataRow>
        {
            private int _childFirst;
            private DataRelation _relation;
            
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            internal SelfReferenceComparer(DataRelation relation, bool childFirst)
            {
                this._relation = relation;
                if (childFirst)
                {
                    this._childFirst = -1;
                }
                else
                {
                    this._childFirst = 1;
                }
            }
            
            [DebuggerNonUserCode, GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
            public int Compare(DataRow row1, DataRow row2)
            {
                if (object.ReferenceEquals(row1, row2))
                {
                    return 0;
                }
                if (row1 == null)
                {
                    return -1;
                }
                if (row2 != null)
                {
                    int distance = 0;
                    DataRow root = this.GetRoot(row1, out distance);
                    int num2 = 0;
                    DataRow objB = this.GetRoot(row2, out num2);
                    if (object.ReferenceEquals(root, objB))
                    {
                        return (this._childFirst * distance.CompareTo(num2));
                    }
                    if (root.Table.Rows.IndexOf(root) < objB.Table.Rows.IndexOf(objB))
                    {
                        return -1;
                    }
                }
                return 1;
            }
            
            [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0"), DebuggerNonUserCode]
            private DataRow GetRoot(DataRow row, out int distance)
            {
                DataRow row3;
                DataRow row2 = row;
                distance = 0;
                IDictionary<DataRow, DataRow> dictionary = new Dictionary<DataRow, DataRow>();
                dictionary[row] = row;
                for (row3 = row.GetParentRow(this._relation, DataRowVersion.Default); (row3 != null) && !dictionary.ContainsKey(row3); row3 = row3.GetParentRow(this._relation, DataRowVersion.Default))
                {
                    distance++;
                    row2 = row3;
                    dictionary[row3] = row3;
                }
                if (distance == 0)
                {
                    dictionary.Clear();
                    dictionary[row] = row;
                    for (row3 = row.GetParentRow(this._relation, DataRowVersion.Original); (row3 != null) && !dictionary.ContainsKey(row3); row3 = row3.GetParentRow(this._relation, DataRowVersion.Original))
                    {
                        distance++;
                        row2 = row3;
                        dictionary[row3] = row3;
                    }
                }
                return row2;
            }
        }
        
        [GeneratedCode("System.Data.Design.TypedDataSetGenerator", "4.0.0.0")]
        public enum UpdateOrderOption
        {
            InsertUpdateDelete,
            UpdateInsertDelete
        }
    }
}
