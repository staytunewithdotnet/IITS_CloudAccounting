// Generated by .NET Reflector from E:\Projects\Doyingo_Migration\Website\bin\DABL.dll
namespace DABL.BLL
{
    using DABL.DAL;
    using DABL.DAL.CloudAccountDATableAdapters;
    using System;
    using System.ComponentModel;
    
    public class TemplateSettingsBLL
    {
        private TemplateSettingsTableAdapter _TemplateSettingsAdapter;
        
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
        public int AddTemplateSettings(int iCompanyID, int iTemplateID, string sInvoiceTitle, string sEstimateTitle, string sCreditTitle, bool bPaymentStub)
        {
            int? templateSettingsID = 0;
            this.Adapter.Insert(ref templateSettingsID, new int?(iCompanyID), new int?(iTemplateID), sInvoiceTitle, sEstimateTitle, sCreditTitle, new bool?(bPaymentStub));
            return templateSettingsID.Value;
        }
        
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool DeleteByCompanyID(int iCompanyID)
        {
            try
            {
                this.Adapter.DeleteByCompanyID(new int?(iCompanyID));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool DeleteByTemplate(int iTemplateID)
        {
            try
            {
                this.Adapter.DeleteByTemplateID(new int?(iTemplateID));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool DeleteTemplateSettings(int iTemplateSettingsID)
        {
            try
            {
                this.Adapter.Delete(new int?(iTemplateSettingsID));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public CloudAccountDA.TemplateSettingsDataTable GetAllDetail()
        {
            return this.Adapter.GetData();
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.TemplateSettingsDataTable GetDataByCompanyID(int iCompanyID)
        {
            return this.Adapter.GetDataByCompanyID(new int?(iCompanyID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.TemplateSettingsDataTable GetDataByTemplateID(int iTemplateID)
        {
            return this.Adapter.GetDataByTemplateID(new int?(iTemplateID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.TemplateSettingsDataTable GetDataByTemplateSettingsID(int iTemplateSettingsID)
        {
            return this.Adapter.GetDataByTemplateSettingsID(new int?(iTemplateSettingsID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Update, true)]
        public bool UpdateTemplateSettings(int iTemplateSettingsID, int iCompanyID, int iTemplateID, string sInvoiceTitle, string sEstimateTitle, string sCreditTitle, bool bPaymentStub)
        {
            try
            {
                this.Adapter.Update(new int?(iTemplateSettingsID), new int?(iCompanyID), new int?(iTemplateID), sInvoiceTitle, sEstimateTitle, sCreditTitle, new bool?(bPaymentStub));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        protected TemplateSettingsTableAdapter Adapter
        {
            get
            {
                if (this._TemplateSettingsAdapter == null)
                {
                    return new TemplateSettingsTableAdapter();
                }
                return this._TemplateSettingsAdapter;
            }
        }
    }
}
