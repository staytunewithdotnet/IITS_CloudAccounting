// Generated by .NET Reflector from E:\Projects\Doyingo_Migration\Website\bin\DABL.dll
namespace DABL.BLL
{
    using DABL.DAL;
    using DABL.DAL.CloudAccountDATableAdapters;
    using System;
    using System.ComponentModel;
    
    public class TestimonialsMasterBLL
    {
        private TestimonialsMasterTableAdapter _TestimonialsMasterAdapter;
        
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
        public int AddTestimonials(string sTestimonialsName, string sTestimonialsCompanyName, string sTestimonialsLocation, string sTestimonialsComment, DateTime? dtTestimonialDate, bool bTestimonialsStatus)
        {
            int? testimonialID = 0;
            this.Adapter.Insert(ref testimonialID, sTestimonialsName, sTestimonialsCompanyName, sTestimonialsLocation, sTestimonialsComment, dtTestimonialDate, new bool?(bTestimonialsStatus));
            return testimonialID.Value;
        }
        
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool DeleteTestimonials(int iTestimonialsID)
        {
            try
            {
                this.Adapter.Delete(new int?(iTestimonialsID));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public CloudAccountDA.TestimonialsMasterDataTable GetAllDataForPage()
        {
            return this.Adapter.GetAllDataForPage();
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public CloudAccountDA.TestimonialsMasterDataTable GetAllDetail()
        {
            return this.Adapter.GetData();
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.TestimonialsMasterDataTable GetDataByTestimonialsID(int iTestimonialsID)
        {
            return this.Adapter.GetDataByTestimonialID(new int?(iTestimonialsID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Update, true)]
        public bool UpdateTestimonials(int iTestimonialsID, string sTestimonialsName, string sTestimonialsCompanyName, string sTestimonialsLocation, string sTestimonialsComment, DateTime? dtTestimonialDate, bool bTestimonialsStatus)
        {
            try
            {
                this.Adapter.Update(new int?(iTestimonialsID), sTestimonialsName, sTestimonialsCompanyName, sTestimonialsLocation, sTestimonialsComment, dtTestimonialDate, new bool?(bTestimonialsStatus));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        protected TestimonialsMasterTableAdapter Adapter
        {
            get
            {
                if (this._TestimonialsMasterAdapter == null)
                {
                    return new TestimonialsMasterTableAdapter();
                }
                return this._TestimonialsMasterAdapter;
            }
        }
    }
}
