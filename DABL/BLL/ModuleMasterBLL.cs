// Generated by .NET Reflector from E:\Projects\Doyingo_Migration\Website\bin\DABL.dll
namespace DABL.BLL
{
    using DABL.DAL;
    using DABL.DAL.CloudAccountDATableAdapters;
    using System;
    using System.ComponentModel;
    
    public class ModuleMasterBLL
    {
        private ModuleMasterTableAdapter _ModuleMasterAdapter;
        
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
        public int AddModule(string sModuleName, string sModuleDesc, bool bModuleStatus)
        {
            int? moduleID = 0;
            this.Adapter.Insert(ref moduleID, sModuleName, sModuleDesc, new bool?(bModuleStatus));
            return moduleID.Value;
        }
        
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool DeleteModule(int iModuleID)
        {
            try
            {
                this.Adapter.Delete(new int?(iModuleID));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public CloudAccountDA.ModuleMasterDataTable GetAllDetail()
        {
            return this.Adapter.GetData();
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.ModuleMasterDataTable GetDataByModuleID(int iModuleID)
        {
            return this.Adapter.GetDataByModuleID(new int?(iModuleID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.ModuleMasterDataTable GetDataByModuleName(string sModuleName)
        {
            return this.Adapter.GetDataByModuleName(sModuleName);
        }
        
        [DataObjectMethod(DataObjectMethodType.Update, true)]
        public bool UpdateModule(int iModuleID, string sModuleName, string sModuleDesc, bool bModuleStatus)
        {
            try
            {
                this.Adapter.Update(new int?(iModuleID), sModuleName, sModuleDesc, new bool?(bModuleStatus));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        protected ModuleMasterTableAdapter Adapter
        {
            get
            {
                if (this._ModuleMasterAdapter == null)
                {
                    return new ModuleMasterTableAdapter();
                }
                return this._ModuleMasterAdapter;
            }
        }
    }
}
