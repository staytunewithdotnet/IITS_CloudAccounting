// Generated by .NET Reflector from E:\Projects\Doyingo_Migration\Website\bin\DABL.dll
namespace DABL.BLL
{
    using DABL.DAL;
    using DABL.DAL.CloudAccountDATableAdapters;
    using System;
    using System.ComponentModel;
    
    public class InvoiceTaskDetailBLL
    {
        private InvoiceTaskDetailTableAdapter _InvoiceTaskDetailAdapter;
        
        [DataObjectMethod(DataObjectMethodType.Insert, false)]
        public int AddInvoiceTask(int iInvoiceID, int iRecurringID)
        {
            int? invoiceTaskDetailID = 0;
            this.Adapter.InsertWithRecurring(ref invoiceTaskDetailID, new int?(iInvoiceID), new int?(iRecurringID));
            return invoiceTaskDetailID.Value;
        }
        
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
        public int AddInvoiceTask(int iInvoiceID, int iTaskID, string sTaskDesc, decimal? dRate, decimal? dHours, int? iTaxID1, int? iTaxID2, decimal? dTotal)
        {
            int? invoiceTaskDetailID = 0;
            this.Adapter.Insert(ref invoiceTaskDetailID, new int?(iInvoiceID), new int?(iTaskID), sTaskDesc, dRate, dHours, iTaxID1, iTaxID2, dTotal);
            return invoiceTaskDetailID.Value;
        }
        
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool DeleteByInvoice(int iInvoiceID)
        {
            try
            {
                this.Adapter.DeleteByInvoiceID(new int?(iInvoiceID));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool DeleteInvoiceTask(int iInvoiceTaskID)
        {
            try
            {
                this.Adapter.Delete(new int?(iInvoiceTaskID));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public CloudAccountDA.InvoiceTaskDetailDataTable GetAllDetail()
        {
            return this.Adapter.GetData();
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.InvoiceTaskDetailDataTable GetDataByInvoiceID(int iInvoiceID)
        {
            return this.Adapter.GetDataByInvoiceID(new int?(iInvoiceID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.InvoiceTaskDetailDataTable GetDataByInvoiceTaskID(int iInvoiceTaskID)
        {
            return this.Adapter.GetDataByInvoiceTaskDetailID(new int?(iInvoiceTaskID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.InvoiceTaskDetailDataTable GetDataByTaskID(int iTaskID)
        {
            return this.Adapter.GetDataByTaskID(new int?(iTaskID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Update, true)]
        public bool UpdateInvoiceTask(int iInvoiceTaskID, int iInvoiceID, int iTaskID, string sTaskDesc, decimal? dRate, decimal? dHours, int? iTaxID1, int? iTaxID2, decimal? dTotal)
        {
            try
            {
                this.Adapter.Update(new int?(iInvoiceTaskID), new int?(iInvoiceID), new int?(iTaskID), sTaskDesc, dRate, dHours, iTaxID1, iTaxID2, dTotal);
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        protected InvoiceTaskDetailTableAdapter Adapter
        {
            get
            {
                if (this._InvoiceTaskDetailAdapter == null)
                {
                    return new InvoiceTaskDetailTableAdapter();
                }
                return this._InvoiceTaskDetailAdapter;
            }
        }
    }
}
