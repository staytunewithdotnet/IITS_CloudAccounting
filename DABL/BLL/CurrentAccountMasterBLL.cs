// Generated by .NET Reflector from E:\Projects\Doyingo_Migration\Website\bin\DABL.dll
namespace DABL.BLL
{
    using DABL.DAL;
    using DABL.DAL.CloudAccountDATableAdapters;
    using System;
    using System.ComponentModel;
    
    public class CurrentAccountMasterBLL
    {
        private CurrentAccountMasterTableAdapter _CurrentAccountMasterAdapter;
        
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
        public int AddCurrentAccount(string sCurrentAccountName, string sCurrentAccountDesc, bool bCurrentAccountStatus)
        {
            int? currentAccountID = 0;
            this.Adapter.Insert(ref currentAccountID, sCurrentAccountName, sCurrentAccountDesc, new bool?(bCurrentAccountStatus));
            return currentAccountID.Value;
        }
        
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool DeleteCurrentAccount(int iCurrentAccountID)
        {
            try
            {
                this.Adapter.Delete(new int?(iCurrentAccountID));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public CloudAccountDA.CurrentAccountMasterDataTable GetAllDetail()
        {
            return this.Adapter.GetData();
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.CurrentAccountMasterDataTable GetDataByCurrentAccountID(int iCurrentAccountID)
        {
            return this.Adapter.GetDataByCurrentAccountID(new int?(iCurrentAccountID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.CurrentAccountMasterDataTable GetDataByCurrentAccountName(string sCurrentAccountName)
        {
            return this.Adapter.GetDataByCurrentAccountName(sCurrentAccountName);
        }
        
        [DataObjectMethod(DataObjectMethodType.Update, true)]
        public bool UpdateCurrentAccount(int iCurrentAccountID, string sCurrentAccountName, string sCurrentAccountDesc, bool bCurrentAccountStatus)
        {
            try
            {
                this.Adapter.Update(new int?(iCurrentAccountID), sCurrentAccountName, sCurrentAccountDesc, new bool?(bCurrentAccountStatus));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        protected CurrentAccountMasterTableAdapter Adapter
        {
            get
            {
                if (this._CurrentAccountMasterAdapter == null)
                {
                    return new CurrentAccountMasterTableAdapter();
                }
                return this._CurrentAccountMasterAdapter;
            }
        }
    }
}
