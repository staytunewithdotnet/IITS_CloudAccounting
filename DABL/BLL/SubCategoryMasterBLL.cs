// Generated by .NET Reflector from E:\Projects\Doyingo_Migration\Website\bin\DABL.dll
namespace DABL.BLL
{
    using DABL.DAL;
    using DABL.DAL.CloudAccountDATableAdapters;
    using System;
    using System.ComponentModel;
    
    public class SubCategoryMasterBLL
    {
        private SubCategoryMasterTableAdapter _SubCategoryMasterAdapter;
        
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
        public int AddSubCategory(int iCategoryID, string sSubCategoryCode, string sSubCategoryName, string sSubCategoryDesc, bool bSubCategoryStatus)
        {
            int? subCategoryID = 0;
            this.Adapter.Insert(ref subCategoryID, new int?(iCategoryID), sSubCategoryCode, sSubCategoryName, sSubCategoryDesc, new bool?(bSubCategoryStatus));
            return subCategoryID.Value;
        }
        
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool DeleteSubCategory(int iSubCategoryID)
        {
            try
            {
                this.Adapter.Delete(new int?(iSubCategoryID));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public CloudAccountDA.SubCategoryMasterDataTable GetAllDetail()
        {
            return this.Adapter.GetData();
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.SubCategoryMasterDataTable GetDataByCategoryID(int iCategoryID)
        {
            return this.Adapter.GetDataByCategoryID(new int?(iCategoryID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.SubCategoryMasterDataTable GetDataByCategorySubCategoryName(int iCategoryID, string sSubCategoryName)
        {
            return this.Adapter.GetDataByCategorySubCategoryName(new int?(iCategoryID), sSubCategoryName);
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.SubCategoryMasterDataTable GetDataByCategorySubCategoryName(int iSubCategoryID, int iCategoryID, string sSubCategoryName)
        {
            return this.Adapter.GetDataByCategorySubCategoryNameUpdate(new int?(iSubCategoryID), new int?(iCategoryID), sSubCategoryName);
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.SubCategoryMasterDataTable GetDataBySubCategoryID(int iSubCategoryID)
        {
            return this.Adapter.GetDataBySubCategoryID(new int?(iSubCategoryID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.SubCategoryMasterDataTable GetDataBySubCategoryName(string sSubCategoryName)
        {
            return this.Adapter.GetDataBySubCategoryName(sSubCategoryName);
        }
        
        [DataObjectMethod(DataObjectMethodType.Update, true)]
        public bool UpdateSubCategory(int iSubCategoryID, int iCategoryID, string sSubCategoryCode, string sSubCategoryName, string sSubCategoryDesc, bool bSubCategoryStatus)
        {
            try
            {
                this.Adapter.Update(new int?(iSubCategoryID), new int?(iCategoryID), sSubCategoryCode, sSubCategoryName, sSubCategoryDesc, new bool?(bSubCategoryStatus));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        protected SubCategoryMasterTableAdapter Adapter
        {
            get
            {
                if (this._SubCategoryMasterAdapter == null)
                {
                    return new SubCategoryMasterTableAdapter();
                }
                return this._SubCategoryMasterAdapter;
            }
        }
    }
}
