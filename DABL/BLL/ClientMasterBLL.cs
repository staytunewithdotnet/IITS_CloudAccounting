// Generated by .NET Reflector from E:\Projects\Doyingo_Migration\Website\bin\DABL.dll
namespace DABL.BLL
{
    using DABL.DAL;
    using DABL.DAL.CloudAccountDATableAdapters;
    using System;
    using System.ComponentModel;
    
    public class ClientMasterBLL
    {
        private ClientMasterTableAdapter _ClientMasterAdapter;
        
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
        public int AddClient(string sClientName, string sClientURL, bool bClientStatus, byte[] byClientLogo)
        {
            int? clientID = 0;
            this.Adapter.Insert(ref clientID, sClientName, sClientURL, new bool?(bClientStatus), byClientLogo);
            return clientID.Value;
        }
        
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool DeleteClient(int iClientID)
        {
            try
            {
                this.Adapter.Delete(new int?(iClientID));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public CloudAccountDA.ClientMasterDataTable GetAllDetail()
        {
            return this.Adapter.GetData();
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.ClientMasterDataTable GetDataByClientID(int iClientID)
        {
            return this.Adapter.GetDataByClientID(new int?(iClientID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.ClientMasterDataTable GetDataByClientName(string sClientName)
        {
            return this.Adapter.GetDataByClientName(sClientName);
        }
        
        [DataObjectMethod(DataObjectMethodType.Update, true)]
        public bool UpdateClient(int iClientID, string sClientName, string sClientURL, bool bClientStatus, byte[] byClientLogo)
        {
            try
            {
                this.Adapter.Update(new int?(iClientID), sClientName, sClientURL, new bool?(bClientStatus), byClientLogo);
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        protected ClientMasterTableAdapter Adapter
        {
            get
            {
                if (this._ClientMasterAdapter == null)
                {
                    return new ClientMasterTableAdapter();
                }
                return this._ClientMasterAdapter;
            }
        }
    }
}
