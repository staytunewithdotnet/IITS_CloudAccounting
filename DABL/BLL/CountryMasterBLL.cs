// Generated by .NET Reflector from E:\Projects\Doyingo_Migration\Website\bin\DABL.dll
namespace DABL.BLL
{
    using DABL.DAL;
    using DABL.DAL.CloudAccountDATableAdapters;
    using System;
    using System.ComponentModel;
    
    public class CountryMasterBLL
    {
        private CountryMasterTableAdapter _CountryMasterAdapter;
        
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
        public int AddCountry(string sCountryCode, string sCountryName, string sCountryDesc, bool bCountryStatus)
        {
            int? countryID = 0;
            this.Adapter.Insert(ref countryID, sCountryCode, sCountryName, sCountryDesc, new bool?(bCountryStatus));
            return countryID.Value;
        }
        
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool DeleteCountry(int iCountryID)
        {
            try
            {
                this.Adapter.Delete(new int?(iCountryID));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public CloudAccountDA.CountryMasterDataTable GetAllDetail()
        {
            return this.Adapter.GetData();
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.CountryMasterDataTable GetDataByCountryID(int iCountryID)
        {
            return this.Adapter.GetDataByCountryID(new int?(iCountryID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.CountryMasterDataTable GetDataByCountryName(string sCountryName)
        {
            return this.Adapter.GetDataByCountryName(sCountryName);
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.CountryMasterDataTable GetDataByCountryName(int iCountryID, string sCountryName)
        {
            return this.Adapter.GetDataByCountryNameUpdate(new int?(iCountryID), sCountryName);
        }
        
        [DataObjectMethod(DataObjectMethodType.Update, true)]
        public bool UpdateCountry(int iCountryID, string sCountryCode, string sCountryName, string sCountryDesc, bool bCountryStatus)
        {
            try
            {
                this.Adapter.Update(new int?(iCountryID), sCountryCode, sCountryName, sCountryDesc, new bool?(bCountryStatus));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        protected CountryMasterTableAdapter Adapter
        {
            get
            {
                if (this._CountryMasterAdapter == null)
                {
                    return new CountryMasterTableAdapter();
                }
                return this._CountryMasterAdapter;
            }
        }
    }
}
