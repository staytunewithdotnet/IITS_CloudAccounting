// Generated by .NET Reflector from E:\Projects\Doyingo_Migration\Website\bin\DABL.dll
namespace DABL.BLL
{
    using DABL.DAL;
    using DABL.DAL.CloudAccountDATableAdapters;
    using System;
    using System.ComponentModel;
    
    public class CompanyAdminRightsMasterBLL
    {
        private CompanyAdminRightsMasterTableAdapter _CompanyAdminRightsMasterAdapter;
        
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
        public int AddCompanyAdminRights(int iCompanyID, int iCompanyLoginID, int iMenuID, int iFormID, string sFormName, bool bAddMode, bool bEditMode, bool bDeleteMode, bool bViewMode)
        {
            int? companyAdminRightsID = 0;
            this.Adapter.Insert(ref companyAdminRightsID, new int?(iCompanyID), new int?(iCompanyLoginID), new int?(iMenuID), new int?(iFormID), sFormName, new bool?(bAddMode), new bool?(bEditMode), new bool?(bDeleteMode), new bool?(bViewMode));
            return companyAdminRightsID.Value;
        }
        
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool DeleteByCompanyAdmin(int iCompanyAdminID)
        {
            try
            {
                this.Adapter.DeleteByCompanyAdmin(new int?(iCompanyAdminID));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool DeleteCompanyAdminRights(int iCompanyAdminRightsID)
        {
            try
            {
                this.Adapter.Delete(new int?(iCompanyAdminRightsID));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public CloudAccountDA.CompanyAdminRightsMasterDataTable GetAllDetail()
        {
            return this.Adapter.GetData();
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.CompanyAdminRightsMasterDataTable GetDataByCompanyAdminRightsID(int iCompanyAdminRightsID)
        {
            return this.Adapter.GetDataByCompanyAdminRightsID(new int?(iCompanyAdminRightsID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.CompanyAdminRightsMasterDataTable GetDataBySelectRightsDetails(int iCompanyID, int iCompanyLoginID, int iMenuID)
        {
            return this.Adapter.GetDataByRightsDetails(new int?(iCompanyID), new int?(iCompanyLoginID), new int?(iMenuID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.CompanyAdminRightsMasterDataTable GetDataByViewPageRights(int iCompanyID, int iCompanyLoginID, string sFormName)
        {
            return this.Adapter.GetDataByViewPageRights(new int?(iCompanyID), new int?(iCompanyLoginID), sFormName);
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.CompanyAdminRightsMasterDataTable GetDataByViewRecords(int iCompanyID, int iCompanyLoginID)
        {
            return this.Adapter.GetDataByViewRecords(new int?(iCompanyID), new int?(iCompanyLoginID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Update, true)]
        public bool UpdateCompanyAdminRights(int iCompanyAdminRightsID, int iCompanyID, int iCompanyLoginID, int iMenuID, int iFormID, string sFormName, bool bAddMode, bool bEditMode, bool bDeleteMode, bool bViewMode)
        {
            try
            {
                this.Adapter.Update(new int?(iCompanyAdminRightsID), new int?(iCompanyID), new int?(iCompanyLoginID), new int?(iMenuID), new int?(iFormID), sFormName, new bool?(bAddMode), new bool?(bEditMode), new bool?(bDeleteMode), new bool?(bViewMode));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        protected CompanyAdminRightsMasterTableAdapter Adapter
        {
            get
            {
                if (this._CompanyAdminRightsMasterAdapter == null)
                {
                    return new CompanyAdminRightsMasterTableAdapter();
                }
                return this._CompanyAdminRightsMasterAdapter;
            }
        }
    }
}
