// Generated by .NET Reflector from E:\Projects\Doyingo_Migration\Website\bin\DABL.dll
namespace DABL.BLL
{
    using DABL.DAL;
    using DABL.DAL.CloudAccountDATableAdapters;
    using System;
    using System.ComponentModel;
    
    public class TemplateMasterBLL
    {
        private TemplateMasterTableAdapter _TemplateMasterAdapter;
        
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
        public int AddTemplate(string sTemplateName, byte[] byTemplateImage, byte[] byTemplatePDF, string sTemplateHTMLFileName, bool bTemplateStatus)
        {
            int? templateID = 0;
            this.Adapter.Insert(ref templateID, sTemplateName, byTemplateImage, byTemplatePDF, sTemplateHTMLFileName, new bool?(bTemplateStatus));
            return templateID.Value;
        }
        
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool DeleteTemplate(int iTemplateID)
        {
            try
            {
                this.Adapter.Delete(new int?(iTemplateID));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public CloudAccountDA.TemplateMasterDataTable GetAllDetail()
        {
            return this.Adapter.GetData();
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.TemplateMasterDataTable GetDataByTemplateID(int iTemplateID)
        {
            return this.Adapter.GetDataByTemplateID(new int?(iTemplateID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.TemplateMasterDataTable GetDataByTemplateName(string sTemplateName)
        {
            return this.Adapter.GetDataByTemplateName(sTemplateName);
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.TemplateMasterDataTable GetDataByTemplateName(int iTemplateID, string sTemplateName)
        {
            return this.Adapter.GetDataByTemplateNameUpdate(new int?(iTemplateID), sTemplateName);
        }
        
        [DataObjectMethod(DataObjectMethodType.Update, true)]
        public bool UpdateTemplate(int iTemplateID, string sTemplateName, byte[] byTemplateImage, byte[] byTemplatePDF, string sTemplateHTMLFileName, bool bTemplateStatus)
        {
            try
            {
                this.Adapter.Update(new int?(iTemplateID), sTemplateName, byTemplateImage, byTemplatePDF, sTemplateHTMLFileName, new bool?(bTemplateStatus));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        protected TemplateMasterTableAdapter Adapter
        {
            get
            {
                if (this._TemplateMasterAdapter == null)
                {
                    return new TemplateMasterTableAdapter();
                }
                return this._TemplateMasterAdapter;
            }
        }
    }
}
