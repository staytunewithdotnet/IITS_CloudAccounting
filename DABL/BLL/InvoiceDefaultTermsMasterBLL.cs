// Generated by .NET Reflector from E:\Projects\Doyingo_Migration\Website\bin\DABL.dll
namespace DABL.BLL
{
    using DABL.DAL;
    using DABL.DAL.CloudAccountDATableAdapters;
    using System;
    using System.ComponentModel;
    
    public class InvoiceDefaultTermsMasterBLL
    {
        private InvoiceDefaultTermsMasterTableAdapter _InvoiceDefaultTermsMasterAdapter;
        
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
        public int AddInvoiceDefaultTerms(int iCompanyID, string sDefaultTerms)
        {
            int? invoiceDefaultTermsID = 0;
            this.Adapter.Insert(ref invoiceDefaultTermsID, new int?(iCompanyID), sDefaultTerms);
            return invoiceDefaultTermsID.Value;
        }
        
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool DeleteByCompany(int iCompanyID)
        {
            try
            {
                this.Adapter.DeleteByCompanyID(new int?(iCompanyID));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool DeleteInvoiceDefaultTerms(int iInvoiceDefaultTermsID)
        {
            try
            {
                this.Adapter.Delete(new int?(iInvoiceDefaultTermsID));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public CloudAccountDA.InvoiceDefaultTermsMasterDataTable GetAllDetail()
        {
            return this.Adapter.GetData();
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.InvoiceDefaultTermsMasterDataTable GetDataByCompanyID(int iCompanyID)
        {
            return this.Adapter.GetDataByCompanyID(new int?(iCompanyID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.InvoiceDefaultTermsMasterDataTable GetDataByInvoiceDefaultTerms(int iInvoiceDefaultTermsID)
        {
            return this.Adapter.GetDataByInvoiceDefaultTermsID(new int?(iInvoiceDefaultTermsID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Update, true)]
        public bool UpdateInvoiceDefaultTerms(int iInvoiceDefaultTermsID, int iCompanyID, string sDefaultTerms)
        {
            try
            {
                this.Adapter.Update(new int?(iInvoiceDefaultTermsID), new int?(iCompanyID), sDefaultTerms);
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        protected InvoiceDefaultTermsMasterTableAdapter Adapter
        {
            get
            {
                if (this._InvoiceDefaultTermsMasterAdapter == null)
                {
                    return new InvoiceDefaultTermsMasterTableAdapter();
                }
                return this._InvoiceDefaultTermsMasterAdapter;
            }
        }
    }
}
