// Generated by .NET Reflector from E:\Projects\Doyingo_Migration\Website\bin\DABL.dll
namespace DABL.BLL
{
    using DABL.DAL;
    using DABL.DAL.CloudAccountDATableAdapters;
    using System;
    using System.ComponentModel;
    
    public class CloudPackageMasterBLL
    {
        private CloudPackageMasterTableAdapter _CloudPackageMasterAdapter;
        
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
        public int AddCloudPackage(string sCloudPackageCode, string sCloudPackageName, decimal? dCloudPackagePriceMonthly, decimal? dCloudPackagePriceYearly, int iCloudPackageCurrency, string sCloudPackageDesc, bool bCloudPackageStatus)
        {
            int? cloudPackageID = 0;
            this.Adapter.Insert(ref cloudPackageID, sCloudPackageCode, sCloudPackageName, dCloudPackagePriceMonthly, dCloudPackagePriceYearly, new int?(iCloudPackageCurrency), sCloudPackageDesc, new bool?(bCloudPackageStatus));
            return cloudPackageID.Value;
        }
        
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool DeleteCloudPackage(int iCloudPackageID)
        {
            try
            {
                this.Adapter.Delete(new int?(iCloudPackageID));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public CloudAccountDA.CloudPackageMasterDataTable GetAllDetail()
        {
            return this.Adapter.GetData();
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.CloudPackageMasterDataTable GetDataByCloudPackageID(int iCloudPackageID)
        {
            return this.Adapter.GetDataByCloudPackageID(new int?(iCloudPackageID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.CloudPackageMasterDataTable GetDataByCloudPackageName(string sCloudPackageName)
        {
            return this.Adapter.GetDataByCloudPackageName(sCloudPackageName);
        }
        
        [DataObjectMethod(DataObjectMethodType.Update, true)]
        public bool UpdateCloudPackage(int iCloudPackageID, string sCloudPackageCode, string sCloudPackageName, decimal? dCloudPackagePriceMonthly, decimal? dCloudPackagePriceYearly, int iCloudPackageCurrency, string sCloudPackageDesc, bool bCloudPackageStatus)
        {
            try
            {
                this.Adapter.Update(new int?(iCloudPackageID), sCloudPackageCode, sCloudPackageName, dCloudPackagePriceMonthly, dCloudPackagePriceYearly, new int?(iCloudPackageCurrency), sCloudPackageDesc, new bool?(bCloudPackageStatus));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        protected CloudPackageMasterTableAdapter Adapter
        {
            get
            {
                if (this._CloudPackageMasterAdapter == null)
                {
                    return new CloudPackageMasterTableAdapter();
                }
                return this._CloudPackageMasterAdapter;
            }
        }
    }
}
