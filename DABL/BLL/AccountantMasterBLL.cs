// Generated by .NET Reflector from E:\Projects\Doyingo_Migration\Website\bin\DABL.dll
namespace DABL.BLL
{
    using DABL.DAL;
    using DABL.DAL.CloudAccountDATableAdapters;
    using System;
    using System.ComponentModel;
    
    public class AccountantMasterBLL
    {
        private AccountantMasterTableAdapter _AccountantMasterAdapter;
        
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
        public int AddAccountant(string sAccountantFirstName, string sAccountantLastName, string sAccountantEmail, string sAccountantPhone, string sCompanyName, string sAddress1, string sAddress2, int? iCountryID, int? iStateID, int? iCityID, string sZipCode, string sAccountantProfession, string sAccountantDesignation)
        {
            int? accountantID = 0;
            this.Adapter.Insert(ref accountantID, sAccountantFirstName, sAccountantLastName, sAccountantEmail, sAccountantPhone, sCompanyName, sAddress1, sAddress2, iCountryID, iStateID, iCityID, sZipCode, sAccountantProfession, sAccountantDesignation);
            return accountantID.Value;
        }
        
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool DeleteAccountant(int iAccountantID)
        {
            try
            {
                this.Adapter.Delete(new int?(iAccountantID));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public CloudAccountDA.AccountantMasterDataTable GetAllDetail()
        {
            return this.Adapter.GetData();
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.AccountantMasterDataTable GetDataByAccountantEmail(string sAccountantEmail)
        {
            return this.Adapter.GetDataByAccountantEmail(sAccountantEmail);
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.AccountantMasterDataTable GetDataByAccountantID(int iAccountantID)
        {
            return this.Adapter.GetDataByAccountantID(new int?(iAccountantID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Update, true)]
        public bool UpdateAccountant(int iAccountantID, string sAccountantFirstName, string sAccountantLastName, string sAccountantEmail, string sAccountantPhone, string sCompanyName, string sAddress1, string sAddress2, int? iCountryID, int? iStateID, int? iCityID, string sZipCode, string sAccountantProfession, string sAccountantDesignation)
        {
            try
            {
                this.Adapter.Update(new int?(iAccountantID), sAccountantFirstName, sAccountantLastName, sAccountantEmail, sAccountantPhone, sCompanyName, sAddress1, sAddress2, iCountryID, iStateID, iCityID, sZipCode, sAccountantProfession, sAccountantDesignation);
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        protected AccountantMasterTableAdapter Adapter
        {
            get
            {
                if (this._AccountantMasterAdapter == null)
                {
                    return new AccountantMasterTableAdapter();
                }
                return this._AccountantMasterAdapter;
            }
        }
    }
}
