// Generated by .NET Reflector from E:\Projects\Doyingo_Migration\Website\bin\DABL.dll
namespace DABL.BLL
{
    using DABL.DAL;
    using DABL.DAL.CloudAccountDATableAdapters;
    using System;
    using System.ComponentModel;
    
    public class ContractorProjectDetailBLL
    {
        private ContractorProjectDetailTableAdapter _ContractorProjectDetailAdapter;
        
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
        public int AddContractorProjectDetail(int iCompanyID, int iContractorID, int iProjectID)
        {
            int? contractorProjectDetailID = 0;
            this.Adapter.Insert(ref contractorProjectDetailID, new int?(iCompanyID), new int?(iContractorID), new int?(iProjectID));
            return contractorProjectDetailID.Value;
        }
        
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool DeleteByCompany(int iCompanyID)
        {
            try
            {
                this.Adapter.DeleteByCompanyID(new int?(iCompanyID));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool DeleteByContractor(int iContractorID)
        {
            try
            {
                this.Adapter.DeleteByContractorID(new int?(iContractorID));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool DeleteByProject(int iProjectID)
        {
            try
            {
                this.Adapter.DeleteByProjectID(new int?(iProjectID));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool DeleteContractorProjectDetail(int iContractorProjectDetailID)
        {
            try
            {
                this.Adapter.Delete(new int?(iContractorProjectDetailID));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public CloudAccountDA.ContractorProjectDetailDataTable GetAllDetail()
        {
            return this.Adapter.GetData();
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.ContractorProjectDetailDataTable GetDataByCompanyID(int iCompanyID)
        {
            return this.Adapter.GetDataByCompanyID(new int?(iCompanyID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.ContractorProjectDetailDataTable GetDataByContractorID(int iContractorID)
        {
            return this.Adapter.GetDataByContractorID(new int?(iContractorID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.ContractorProjectDetailDataTable GetDataByContractorProjectDetailID(int iContractorProjectDetailID)
        {
            return this.Adapter.GetDataByContractorProjectDetailID(new int?(iContractorProjectDetailID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.ContractorProjectDetailDataTable GetDataByProjectID(int iProjectID)
        {
            return this.Adapter.GetDataByProjectID(new int?(iProjectID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Update, true)]
        public bool UpdateContractorProjectDetail(int iContractorProjectDetailID, int iCompanyID, int iContractorID, int iProjectID)
        {
            try
            {
                this.Adapter.Update(new int?(iContractorProjectDetailID), new int?(iCompanyID), new int?(iContractorID), new int?(iProjectID));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        protected ContractorProjectDetailTableAdapter Adapter
        {
            get
            {
                if (this._ContractorProjectDetailAdapter == null)
                {
                    return new ContractorProjectDetailTableAdapter();
                }
                return this._ContractorProjectDetailAdapter;
            }
        }
    }
}
