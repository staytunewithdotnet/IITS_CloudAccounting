// Generated by .NET Reflector from E:\Projects\Doyingo_Migration\Website\bin\DABL.dll
namespace DABL.BLL
{
    using DABL.DAL;
    using DABL.DAL.CloudAccountDATableAdapters;
    using System;
    using System.ComponentModel;
    
    public class StaffMasterBLL
    {
        private StaffMasterTableAdapter _StaffMasterAdapter;
        
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
        public int AddStaff(int iCompanyID, string sEmail, string sFirstName, string sLastName, decimal? dBillingRate, string sUsername, string sAddress1, string sAddress2, int? iCountryID, int? iStateID, int? iCityID, string sZipCode, string sHomePhone, string sMobile, string sBussinessPhone, string sFax, string sNotes, bool bActive, bool bArchived, bool bDeleted)
        {
            int? staffID = 0;
            this.Adapter.Insert(ref staffID, new int?(iCompanyID), sEmail, sFirstName, sLastName, dBillingRate, sUsername, sAddress1, sAddress2, iCountryID, iStateID, iCityID, sZipCode, sHomePhone, sMobile, sBussinessPhone, sFax, sNotes, new bool?(bActive), new bool?(bArchived), new bool?(bDeleted));
            return staffID.Value;
        }
        
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool DeleteByCompany(int iCompanyID)
        {
            try
            {
                this.Adapter.DeleteByCompanyID(new int?(iCompanyID));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool DeleteStaff(int iStaffID)
        {
            try
            {
                this.Adapter.Delete(new int?(iStaffID));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public CloudAccountDA.StaffMasterDataTable GetAllDetail()
        {
            return this.Adapter.GetData();
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.StaffMasterDataTable GetDataByCompanyEmail(int iCompanyID, string sEmail)
        {
            return this.Adapter.GetDataByCompanyIDAndEmail(new int?(iCompanyID), sEmail);
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.StaffMasterDataTable GetDataByCompanyID(int iCompanyID)
        {
            return this.Adapter.GetDataByCompanyID(new int?(iCompanyID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.StaffMasterDataTable GetDataByStaffID(int iStaffID)
        {
            return this.Adapter.GetDataByStaffID(new int?(iStaffID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.StaffMasterDataTable GetDataByStaffUserName(string sUserName)
        {
            return this.Adapter.GetDataByStaffUserName(sUserName);
        }
        
        [DataObjectMethod(DataObjectMethodType.Update, true)]
        public bool UpdateStaff(int iStaffID, int iCompanyID, string sEmail, string sFirstName, string sLastName, decimal? dBillingRate, string sUsername, string sAddress1, string sAddress2, int? iCountryID, int? iStateID, int? iCityID, string sZipCode, string sHomePhone, string sMobile, string sBussinessPhone, string sFax, string sNotes, bool bActive, bool bArchived, bool bDeleted)
        {
            try
            {
                this.Adapter.Update(new int?(iStaffID), new int?(iCompanyID), sEmail, sFirstName, sLastName, dBillingRate, sUsername, sAddress1, sAddress2, iCountryID, iStateID, iCityID, sZipCode, sHomePhone, sMobile, sBussinessPhone, sFax, sNotes, new bool?(bActive), new bool?(bArchived), new bool?(bDeleted));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        [DataObjectMethod(DataObjectMethodType.Update, false)]
        public bool UpdateWhenAnyBit(int iTaskID, bool bActive, bool bDeleted, bool bArchived)
        {
            try
            {
                this.Adapter.UpdateWhenAnyBit(new int?(iTaskID), new bool?(bActive), new bool?(bDeleted), new bool?(bArchived));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        [DataObjectMethod(DataObjectMethodType.Update, false)]
        public bool UpdateWhenDelete(int iStaffID, bool bActive, bool bDeleted)
        {
            try
            {
                this.Adapter.UpdateWhenDelete(new int?(iStaffID), new bool?(bActive), new bool?(bDeleted));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        protected StaffMasterTableAdapter Adapter
        {
            get
            {
                if (this._StaffMasterAdapter == null)
                {
                    return new StaffMasterTableAdapter();
                }
                return this._StaffMasterAdapter;
            }
        }
    }
}
