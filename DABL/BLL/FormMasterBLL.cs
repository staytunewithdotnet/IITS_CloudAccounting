// Generated by .NET Reflector from E:\Projects\Doyingo_Migration\Website\bin\DABL.dll
namespace DABL.BLL
{
    using DABL.DAL;
    using DABL.DAL.CloudAccountDATableAdapters;
    using System;
    using System.ComponentModel;
    
    public class FormMasterBLL
    {
        private FormMasterTableAdapter _FormMasterAdapter;
        
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
        public int AddForm(string sFormName)
        {
            int? formID = 0;
            this.Adapter.Insert(ref formID, sFormName);
            return formID.Value;
        }
        
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool DeleteForm(int iFormID)
        {
            try
            {
                this.Adapter.Delete(new int?(iFormID));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public CloudAccountDA.FormMasterDataTable GetAllDetail()
        {
            return this.Adapter.GetData();
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.FormMasterDataTable GetDataByFormID(int iFormID)
        {
            return this.Adapter.GetDataByFormID(new int?(iFormID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.FormMasterDataTable GetDataByFormName(string sFormName)
        {
            return this.Adapter.GetDataByFormName(sFormName);
        }
        
        [DataObjectMethod(DataObjectMethodType.Update, true)]
        public bool UpdateForm(int iFormID, string sFormName)
        {
            try
            {
                this.Adapter.Update(new int?(iFormID), sFormName);
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        protected FormMasterTableAdapter Adapter
        {
            get
            {
                if (this._FormMasterAdapter == null)
                {
                    return new FormMasterTableAdapter();
                }
                return this._FormMasterAdapter;
            }
        }
    }
}
