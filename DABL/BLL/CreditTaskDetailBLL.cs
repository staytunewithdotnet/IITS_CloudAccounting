// Generated by .NET Reflector from E:\Projects\Doyingo_Migration\Website\bin\DABL.dll
namespace DABL.BLL
{
    using DABL.DAL;
    using DABL.DAL.CloudAccountDATableAdapters;
    using System;
    using System.ComponentModel;
    
    public class CreditTaskDetailBLL
    {
        private CreditTaskDetailTableAdapter _CreditTaskDetailAdapter;
        
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
        public int AddCreditTask(int iCreditID, int iTaskID, string sTaskDesc, decimal? dRate, decimal? dHours, int? iTaxID1, int? iTaxID2, decimal? dTotal)
        {
            int? creditTaskDetailID = 0;
            this.Adapter.Insert(ref creditTaskDetailID, new int?(iCreditID), new int?(iTaskID), sTaskDesc, dRate, dHours, iTaxID1, iTaxID2, dTotal);
            return creditTaskDetailID.Value;
        }
        
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool DeleteByCredit(int iCreditID)
        {
            try
            {
                this.Adapter.DeleteByCreditID(new int?(iCreditID));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool DeleteCreditTask(int iCreditTaskID)
        {
            try
            {
                this.Adapter.Delete(new int?(iCreditTaskID));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public CloudAccountDA.CreditTaskDetailDataTable GetAllDetail()
        {
            return this.Adapter.GetData();
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.CreditTaskDetailDataTable GetDataByCreditID(int iCreditID)
        {
            return this.Adapter.GetDataByCreditID(new int?(iCreditID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.CreditTaskDetailDataTable GetDataByCreditTaskID(int iCreditTaskID)
        {
            return this.Adapter.GetDataByCreditTaskDetailID(new int?(iCreditTaskID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.CreditTaskDetailDataTable GetDataByTaskID(int iTaskID)
        {
            return this.Adapter.GetDataByTaskID(new int?(iTaskID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Update, true)]
        public bool UpdateCreditTask(int iCreditTaskID, int iCreditID, int iTaskID, string sTaskDesc, decimal? dRate, decimal? dHours, int? iTaxID1, int? iTaxID2, decimal? dTotal)
        {
            try
            {
                this.Adapter.Update(new int?(iCreditTaskID), new int?(iCreditID), new int?(iTaskID), sTaskDesc, dRate, dHours, iTaxID1, iTaxID2, dTotal);
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        protected CreditTaskDetailTableAdapter Adapter
        {
            get
            {
                if (this._CreditTaskDetailAdapter == null)
                {
                    return new CreditTaskDetailTableAdapter();
                }
                return this._CreditTaskDetailAdapter;
            }
        }
    }
}
