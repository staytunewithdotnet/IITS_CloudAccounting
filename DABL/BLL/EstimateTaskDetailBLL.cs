// Generated by .NET Reflector from E:\Projects\Doyingo_Migration\Website\bin\DABL.dll
namespace DABL.BLL
{
    using DABL.DAL;
    using DABL.DAL.CloudAccountDATableAdapters;
    using System;
    using System.ComponentModel;
    
    public class EstimateTaskDetailBLL
    {
        private EstimateTaskDetailTableAdapter _EstimateTaskDetailAdapter;
        
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
        public int AddEstimateTask(int iEstimateID, int iTaskID, string sTaskDesc, decimal? dRate, decimal? dHours, int? iTaxID1, int? iTaxID2, decimal? dTotal)
        {
            int? estimateTaskDetailID = 0;
            this.Adapter.Insert(ref estimateTaskDetailID, new int?(iEstimateID), new int?(iTaskID), sTaskDesc, dRate, dHours, iTaxID1, iTaxID2, dTotal);
            return estimateTaskDetailID.Value;
        }
        
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool DeleteByEstimate(int iEstimateID)
        {
            try
            {
                this.Adapter.DeleteByEstimateID(new int?(iEstimateID));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool DeleteEstimateTask(int iEstimateTaskID)
        {
            try
            {
                this.Adapter.Delete(new int?(iEstimateTaskID));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public CloudAccountDA.EstimateTaskDetailDataTable GetAllDetail()
        {
            return this.Adapter.GetData();
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.EstimateTaskDetailDataTable GetDataByEstimateID(int iEstimateID)
        {
            return this.Adapter.GetDataByEstimateID(new int?(iEstimateID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.EstimateTaskDetailDataTable GetDataByEstimateTaskID(int iEstimateTaskID)
        {
            return this.Adapter.GetDataByEstimateTaskDetailID(new int?(iEstimateTaskID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.EstimateTaskDetailDataTable GetDataByTaskID(int iTaskID)
        {
            return this.Adapter.GetDataByTaskID(new int?(iTaskID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Update, true)]
        public bool UpdateEstimateTask(int iEstimateTaskID, int iEstimateID, int iTaskID, string sTaskDesc, decimal? dRate, decimal? dHours, int? iTaxID1, int? iTaxID2, decimal? dTotal)
        {
            try
            {
                this.Adapter.Update(new int?(iEstimateTaskID), new int?(iEstimateID), new int?(iTaskID), sTaskDesc, dRate, dHours, iTaxID1, iTaxID2, dTotal);
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        protected EstimateTaskDetailTableAdapter Adapter
        {
            get
            {
                if (this._EstimateTaskDetailAdapter == null)
                {
                    return new EstimateTaskDetailTableAdapter();
                }
                return this._EstimateTaskDetailAdapter;
            }
        }
    }
}
