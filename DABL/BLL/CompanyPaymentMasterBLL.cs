// Generated by .NET Reflector from E:\Projects\Doyingo_Migration\Website\bin\DABL.dll
namespace DABL.BLL
{
    using DABL.DAL;
    using DABL.DAL.CloudAccountDATableAdapters;
    using System;
    using System.ComponentModel;
    
    public class CompanyPaymentMasterBLL
    {
        private CompanyPaymentMasterTableAdapter _CompanyPaymentMasterAdapter;
        
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
        public int AddCompanyPayment(int iCompanyID, int iCloudPackageID, decimal dPackageAmount, string sStatus, string sResponseCode, string sResponseMessage, string sPaymentMode)
        {
            int? companyPaymentID = 0;
            this.Adapter.Insert(ref companyPaymentID, new int?(iCompanyID), new int?(iCloudPackageID), new decimal?(dPackageAmount), sStatus, sResponseCode, sResponseMessage, new DateTime?(DateTime.Now), sPaymentMode);
            return companyPaymentID.Value;
        }
        
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool DeleteByCompany(int iCompanyID)
        {
            try
            {
                this.Adapter.DeleteByCompanyID(new int?(iCompanyID));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool DeleteCompanyPayment(int iCompanyPaymentID)
        {
            try
            {
                this.Adapter.Delete(new int?(iCompanyPaymentID));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public CloudAccountDA.CompanyPaymentMasterDataTable GetAllDetail()
        {
            return this.Adapter.GetData();
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.CompanyPaymentMasterDataTable GetDataByCloudPackageID(int iCloudPackageID)
        {
            return this.Adapter.GetDataByCloudPackageID(new int?(iCloudPackageID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.CompanyPaymentMasterDataTable GetDataByCompanyID(int iCompanyID)
        {
            return this.Adapter.GetDataByCompanyID(new int?(iCompanyID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.CompanyPaymentMasterDataTable GetDataByCompanyPaymentID(int iCompanyPaymentID)
        {
            return this.Adapter.GetDataByCompanyPaymentID(new int?(iCompanyPaymentID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Update, false)]
        public bool UpdateAfterPayment(int iCompanyPaymentID, string sStatus, string sResponseCode, string sResponseMessage)
        {
            try
            {
                this.Adapter.UpdateAfterPayment(new int?(iCompanyPaymentID), sStatus, sResponseCode, sResponseMessage);
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        [DataObjectMethod(DataObjectMethodType.Update, true)]
        public bool UpdateCompanyPayment(int iCompanyPaymentID, int iCompanyID, int iCloudPackageID, decimal dPackageAmount, string sStatus, string sResponseCode, string sResponseMessage, DateTime dtTransactionDate, string sPaymentMode)
        {
            try
            {
                this.Adapter.Update(new int?(iCompanyPaymentID), new int?(iCompanyID), new int?(iCloudPackageID), new decimal?(dPackageAmount), sStatus, sResponseCode, sResponseMessage, new DateTime?(dtTransactionDate), sPaymentMode);
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        protected CompanyPaymentMasterTableAdapter Adapter
        {
            get
            {
                if (this._CompanyPaymentMasterAdapter == null)
                {
                    return new CompanyPaymentMasterTableAdapter();
                }
                return this._CompanyPaymentMasterAdapter;
            }
        }
    }
}
