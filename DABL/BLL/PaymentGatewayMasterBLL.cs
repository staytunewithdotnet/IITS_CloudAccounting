// Generated by .NET Reflector from E:\Projects\Doyingo_Migration\Website\bin\DABL.dll
namespace DABL.BLL
{
    using DABL.DAL;
    using DABL.DAL.CloudAccountDATableAdapters;
    using System;
    using System.ComponentModel;
    
    public class PaymentGatewayMasterBLL
    {
        private PaymentGatewayMasterTableAdapter _PaymentGatewayMasterAdapter;
        
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
        public int AddPaymentGateway(string sMerchantID, string sMerchantAuthKey, string sTransactionID, string sTransactionAuthKey)
        {
            int? paymentGatewayID = 0;
            this.Adapter.Insert(ref paymentGatewayID, sMerchantID, sMerchantAuthKey, sTransactionID, sTransactionAuthKey);
            return paymentGatewayID.Value;
        }
        
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool DeletePaymentGateway(int iPaymentGatewayID)
        {
            try
            {
                this.Adapter.Delete(new int?(iPaymentGatewayID));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public CloudAccountDA.PaymentGatewayMasterDataTable GetAllDetail()
        {
            return this.Adapter.GetData();
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.PaymentGatewayMasterDataTable GetDataByPaymentGatewayID(int iPaymentGatewayID)
        {
            return this.Adapter.GetDataByPaymentGatewayID(new int?(iPaymentGatewayID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Update, true)]
        public bool UpdatePaymentGateway(int iPaymentGatewayID, string sMerchantID, string sMerchantAuthKey, string sTransactionID, string sTransactionAuthKey)
        {
            try
            {
                this.Adapter.Update(new int?(iPaymentGatewayID), sMerchantID, sMerchantAuthKey, sTransactionID, sTransactionAuthKey);
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        protected PaymentGatewayMasterTableAdapter Adapter
        {
            get
            {
                if (this._PaymentGatewayMasterAdapter == null)
                {
                    return new PaymentGatewayMasterTableAdapter();
                }
                return this._PaymentGatewayMasterAdapter;
            }
        }
    }
}
