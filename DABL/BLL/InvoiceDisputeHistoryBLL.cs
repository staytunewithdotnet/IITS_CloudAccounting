// Generated by .NET Reflector from E:\Projects\Doyingo_Migration\Website\bin\DABL.dll
namespace DABL.BLL
{
    using DABL.DAL;
    using DABL.DAL.CloudAccountDATableAdapters;
    using System;
    using System.ComponentModel;
    
    public class InvoiceDisputeHistoryBLL
    {
        private InvoiceDisputeHistoryTableAdapter _InvoiceDisputeHistoryAdapter;
        
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
        public int AddInvoiceDisputeHistory(int iInvoiceID, string sInvoiceDisputeCreatedBy, int iInvoiceDisputeCreatedID, string sInvoiceDisputeHistoryComment)
        {
            int? invoiceDisputeHistoryID = 0;
            this.Adapter.Insert(ref invoiceDisputeHistoryID, new int?(iInvoiceID), sInvoiceDisputeCreatedBy, new int?(iInvoiceDisputeCreatedID), sInvoiceDisputeHistoryComment, new DateTime?(DateTime.Now));
            return invoiceDisputeHistoryID.Value;
        }
        
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool DeleteByInvoiceID(int iInvoiceID)
        {
            try
            {
                this.Adapter.DeleteByInvoiceID(new int?(iInvoiceID));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool DeleteInvoiceDisputeHistory(int iInvoiceDisputeHistoryID)
        {
            try
            {
                this.Adapter.Delete(new int?(iInvoiceDisputeHistoryID));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public CloudAccountDA.InvoiceDisputeHistoryDataTable GetAllDetail()
        {
            return this.Adapter.GetData();
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.InvoiceDisputeHistoryDataTable GetDataByInvoiceID(int iInvoiceID)
        {
            return this.Adapter.GetDataByInvoiceID(new int?(iInvoiceID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Update, true)]
        public bool UpdateInvoiceDisputeHistory(int iInvoiceDisputeHistoryID, int iInvoiceID, string sInvoiceDisputeCreatedBy, int iInvoiceDisputeCreatedID, string sInvoiceDisputeHistoryComment)
        {
            try
            {
                this.Adapter.Update(new int?(iInvoiceDisputeHistoryID), new int?(iInvoiceID), sInvoiceDisputeCreatedBy, new int?(iInvoiceDisputeCreatedID), sInvoiceDisputeHistoryComment, new DateTime?(DateTime.Now));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        protected InvoiceDisputeHistoryTableAdapter Adapter
        {
            get
            {
                if (this._InvoiceDisputeHistoryAdapter == null)
                {
                    return new InvoiceDisputeHistoryTableAdapter();
                }
                return this._InvoiceDisputeHistoryAdapter;
            }
        }
    }
}
