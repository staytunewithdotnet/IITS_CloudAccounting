// Generated by .NET Reflector from E:\Projects\Doyingo_Migration\Website\bin\DABL.dll
namespace DABL.BLL
{
    using DABL.DAL;
    using DABL.DAL.CloudAccountDATableAdapters;
    using System;
    using System.ComponentModel;
    
    public class CompanyPackageMasterBLL
    {
        private CompanyPackageMasterTableAdapter _CompanyPackageMasterAdapter;
        
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
        public int AddCompanyPackage(int iCompanyID, int iCloudPackageID, DateTime? dtPackageStartDate, DateTime? dtPackageEndDate, string sPackageType, decimal? dPackageAmount, string sPacakgePaymentDetail, DateTime? dtPackagePaymentDate, DateTime? dtPackageAssignDate, bool bActivePackage)
        {
            int? companyPackageID = 0;
            this.Adapter.Insert(ref companyPackageID, new int?(iCompanyID), new int?(iCloudPackageID), dtPackageStartDate, dtPackageEndDate, sPackageType, dPackageAmount, sPacakgePaymentDetail, dtPackagePaymentDate, dtPackageAssignDate, new bool?(bActivePackage));
            return companyPackageID.Value;
        }
        
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool DeleteCompanyPackage(int iCompanyPackageID)
        {
            try
            {
                this.Adapter.Delete(new int?(iCompanyPackageID));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public CloudAccountDA.CompanyPackageMasterDataTable GetAllDetail()
        {
            return this.Adapter.GetData();
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.CompanyPackageMasterDataTable GetDataByCompanyActivePackage(int iCompanyID)
        {
            return this.Adapter.GetDataByCompanyActivePackage(new int?(iCompanyID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.CompanyPackageMasterDataTable GetDataByCompanyID(int iCompanyID)
        {
            return this.Adapter.GetDataByCompanyID(new int?(iCompanyID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.CompanyPackageMasterDataTable GetDataByCompanyPackageID(int iCompanyPackageID)
        {
            return this.Adapter.GetDataByCompanyPackageID(new int?(iCompanyPackageID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Update, true)]
        public bool UpdateCompanyPackage(int iCompanyPackageID, int iCompanyID, int iCloudPackageID, DateTime? dtPackageStartDate, DateTime? dtPackageEndDate, string sPackageType, decimal? dPackageAmount, string sPacakgePaymentDetail, DateTime? dtPackagePaymentDate, DateTime? dtPackageAssignDate, bool bActivePackage)
        {
            try
            {
                this.Adapter.Update(new int?(iCompanyPackageID), new int?(iCompanyID), new int?(iCloudPackageID), dtPackageStartDate, dtPackageEndDate, sPackageType, dPackageAmount, sPacakgePaymentDetail, dtPackagePaymentDate, dtPackageAssignDate, new bool?(bActivePackage));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        [DataObjectMethod(DataObjectMethodType.Update, false)]
        public bool UpdateCompanyPackages(int iCompanyID)
        {
            try
            {
                this.Adapter.UpdateCompanyPackages(new int?(iCompanyID));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        protected CompanyPackageMasterTableAdapter Adapter
        {
            get
            {
                if (this._CompanyPackageMasterAdapter == null)
                {
                    return new CompanyPackageMasterTableAdapter();
                }
                return this._CompanyPackageMasterAdapter;
            }
        }
    }
}
