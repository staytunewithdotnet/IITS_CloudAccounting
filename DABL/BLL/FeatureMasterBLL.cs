// Generated by .NET Reflector from E:\Projects\Doyingo_Migration\Website\bin\DABL.dll
namespace DABL.BLL
{
    using DABL.DAL;
    using DABL.DAL.CloudAccountDATableAdapters;
    using System;
    using System.ComponentModel;
    
    public class FeatureMasterBLL
    {
        private FeatureMasterTableAdapter _FeatureMasterAdapter;
        
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
        public int AddFeature(string sFeatureName, byte[] byFeatureImage, string sFeatureDesc, bool bFeatureStatus, bool bShowOnHomePage)
        {
            int? featureID = 0;
            this.Adapter.Insert(ref featureID, sFeatureName, byFeatureImage, sFeatureDesc, new bool?(bFeatureStatus), new bool?(bShowOnHomePage));
            return featureID.Value;
        }
        
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool DeleteFeature(int iFeatureID)
        {
            try
            {
                this.Adapter.Delete(new int?(iFeatureID));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public CloudAccountDA.FeatureMasterDataTable GetAllDetail()
        {
            return this.Adapter.GetData();
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.FeatureMasterDataTable GetDataByFeatureID(int iFeatureID)
        {
            return this.Adapter.GetDataByFeatureID(new int?(iFeatureID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.FeatureMasterDataTable GetDataByFeatureName(string sFeatureName)
        {
            return this.Adapter.GetDataByFeatureName(sFeatureName);
        }
        
        [DataObjectMethod(DataObjectMethodType.Update, true)]
        public bool UpdateFeature(int iFeatureID, string sFeatureName, byte[] byFeatureImage, string sFeatureDesc, bool bFeatureStatus, bool bShowOnHomePage)
        {
            try
            {
                this.Adapter.Update(new int?(iFeatureID), sFeatureName, byFeatureImage, sFeatureDesc, new bool?(bFeatureStatus), new bool?(bShowOnHomePage));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        protected FeatureMasterTableAdapter Adapter
        {
            get
            {
                if (this._FeatureMasterAdapter == null)
                {
                    return new FeatureMasterTableAdapter();
                }
                return this._FeatureMasterAdapter;
            }
        }
    }
}
