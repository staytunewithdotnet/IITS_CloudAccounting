// Generated by .NET Reflector from E:\Projects\Doyingo_Migration\Website\bin\DABL.dll
namespace DABL.BLL
{
    using DABL.DAL;
    using DABL.DAL.CloudAccountDATableAdapters;
    using System;
    using System.ComponentModel;
    
    public class IndustryMasterBLL
    {
        private IndustryMasterTableAdapter _IndustryMasterAdapter;
        
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
        public int AddIndustry(string sIndustryName, string sIndustryDesc, bool bIndustryStatus)
        {
            int? industryID = 0;
            this.Adapter.Insert(ref industryID, sIndustryName, sIndustryDesc, new bool?(bIndustryStatus));
            return industryID.Value;
        }
        
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool DeleteIndustry(int iIndustryID)
        {
            try
            {
                this.Adapter.Delete(new int?(iIndustryID));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public CloudAccountDA.IndustryMasterDataTable GetAllDetail()
        {
            return this.Adapter.GetData();
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.IndustryMasterDataTable GetDataByIndustryID(int iIndustryID)
        {
            return this.Adapter.GetDataByIndustryID(new int?(iIndustryID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.IndustryMasterDataTable GetDataByIndustryName(string sIndustryName)
        {
            return this.Adapter.GetDataByIndustryName(sIndustryName);
        }
        
        [DataObjectMethod(DataObjectMethodType.Update, true)]
        public bool UpdateIndustry(int iIndustryID, string sIndustryName, string sIndustryDesc, bool bIndustryStatus)
        {
            try
            {
                this.Adapter.Update(new int?(iIndustryID), sIndustryName, sIndustryDesc, new bool?(bIndustryStatus));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        protected IndustryMasterTableAdapter Adapter
        {
            get
            {
                if (this._IndustryMasterAdapter == null)
                {
                    return new IndustryMasterTableAdapter();
                }
                return this._IndustryMasterAdapter;
            }
        }
    }
}
