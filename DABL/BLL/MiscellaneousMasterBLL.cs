// Generated by .NET Reflector from E:\Projects\Doyingo_Migration\Website\bin\DABL.dll
namespace DABL.BLL
{
    using DABL.DAL;
    using DABL.DAL.CloudAccountDATableAdapters;
    using System;
    using System.ComponentModel;
    
    public class MiscellaneousMasterBLL
    {
        private MiscellaneousMasterTableAdapter _MiscellaneousMasterAdapter;
        
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
        public int AddMiscellaneous(int iCompanyID, int iLinesPerPage, string sDateFormat, bool bDirectLinks, bool bDoyiGoBranding, bool bRequestReviews, string sTextBelowYourLogo, bool bRecurringInvoices, bool bCreditAutomatically, string sDefaultColumnHeadings, string sWelcomeMessagesClient, string sWelcomeMessagesStaff, string sDefaultClientAccess, string sDefaultStaffAccess, int iSupportTimeIncrementMinute, int iSupportTimeIncrementHours)
        {
            int? miscellaneousID = 0;
            this.Adapter.Insert(ref miscellaneousID, new int?(iCompanyID), new int?(iLinesPerPage), sDateFormat, new bool?(bDirectLinks), new bool?(bDoyiGoBranding), new bool?(bRequestReviews), sTextBelowYourLogo, new bool?(bRecurringInvoices), new bool?(bCreditAutomatically), sDefaultColumnHeadings, sWelcomeMessagesClient, sWelcomeMessagesStaff, sDefaultClientAccess, sDefaultStaffAccess, new int?(iSupportTimeIncrementMinute), new int?(iSupportTimeIncrementHours));
            return miscellaneousID.Value;
        }
        
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool DeleteByCompanyID(int iCompanyID)
        {
            try
            {
                this.Adapter.DeleteByCompanyID(new int?(iCompanyID));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool DeleteMiscellaneous(int iMiscellaneousID)
        {
            try
            {
                this.Adapter.Delete(new int?(iMiscellaneousID));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public CloudAccountDA.MiscellaneousMasterDataTable GetAllDetail()
        {
            return this.Adapter.GetData();
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.MiscellaneousMasterDataTable GetDataByCompanyID(int iCompanyID)
        {
            return this.Adapter.GetDataByCompanyID(new int?(iCompanyID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.MiscellaneousMasterDataTable GetDataByMiscellaneousID(int iMiscellaneousID)
        {
            return this.Adapter.GetDataByMiscellaneousID(new int?(iMiscellaneousID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Update, true)]
        public bool UpdateMiscellaneous(int iMiscellaneousID, int iCompanyID, int iLinesPerPage, string sDateFormat, bool bDirectLinks, bool bDoyiGoBranding, bool bRequestReviews, string sTextBelowYourLogo, bool bRecurringInvoices, bool bCreditAutomatically, string sDefaultColumnHeadings, string sWelcomeMessagesClient, string sWelcomeMessagesStaff, string sDefaultClientAccess, string sDefaultStaffAccess, int iSupportTimeIncrementMinute, int iSupportTimeIncrementHours)
        {
            try
            {
                this.Adapter.Update(new int?(iMiscellaneousID), new int?(iCompanyID), new int?(iLinesPerPage), sDateFormat, new bool?(bDirectLinks), new bool?(bDoyiGoBranding), new bool?(bRequestReviews), sTextBelowYourLogo, new bool?(bRecurringInvoices), new bool?(bCreditAutomatically), sDefaultColumnHeadings, sWelcomeMessagesClient, sWelcomeMessagesStaff, sDefaultClientAccess, sDefaultStaffAccess, new int?(iSupportTimeIncrementMinute), new int?(iSupportTimeIncrementHours));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        protected MiscellaneousMasterTableAdapter Adapter
        {
            get
            {
                if (this._MiscellaneousMasterAdapter == null)
                {
                    return new MiscellaneousMasterTableAdapter();
                }
                return this._MiscellaneousMasterAdapter;
            }
        }
    }
}
