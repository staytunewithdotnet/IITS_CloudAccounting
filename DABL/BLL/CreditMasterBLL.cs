// Generated by .NET Reflector from E:\Projects\Doyingo_Migration\Website\bin\DABL.dll
namespace DABL.BLL
{
    using DABL.DAL;
    using DABL.DAL.CloudAccountDATableAdapters;
    using System;
    using System.ComponentModel;
    
    public class CreditMasterBLL
    {
        private CreditMasterTableAdapter _CreditMasterAdapter;
        
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
        public int AddCredit(int iCompanyID, int? iClientID, int? iCurrencyID, string sCreditNumber, DateTime? dtCreditDate, string sNotes, string sTerms, string sCreditStatus, decimal? dCreditRemaingTotal, decimal? dCreditTotal)
        {
            int? creditID = 0;
            this.Adapter.Insert(ref creditID, new int?(iCompanyID), iClientID, iCurrencyID, sCreditNumber, dtCreditDate, sNotes, sTerms, sCreditStatus, dCreditRemaingTotal, dCreditTotal);
            return creditID.Value;
        }
        
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool DeleteByClient(int iClientID)
        {
            try
            {
                this.Adapter.DeleteByClientID(new int?(iClientID));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool DeleteByCompany(int iCompanyID)
        {
            try
            {
                this.Adapter.DeleteByCompanyID(new int?(iCompanyID));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool DeleteCredit(int iCreditID)
        {
            try
            {
                this.Adapter.Delete(new int?(iCreditID));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public CloudAccountDA.CreditMasterDataTable GetAllDetail()
        {
            return this.Adapter.GetData();
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.CreditMasterDataTable GetDataByClientID(int iClientID)
        {
            return this.Adapter.GetDataByClientID(new int?(iClientID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.CreditMasterDataTable GetDataByCompanyCredit(int iCompanyID, string sCreditNum)
        {
            return this.Adapter.GetDataByCompanyCreditNumber(new int?(iCompanyID), sCreditNum);
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.CreditMasterDataTable GetDataByCompanyCreditUpdate(int iCompanyID, string sCreditNum, int iCreditID)
        {
            return this.Adapter.GetDataByCompanyCreditNumberUpdate(new int?(iCompanyID), sCreditNum, new int?(iCreditID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.CreditMasterDataTable GetDataByCompanyID(int iCompanyID)
        {
            return this.Adapter.GetDataByCompanyID(new int?(iCompanyID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.CreditMasterDataTable GetDataByCompanyStaffID(int iCompanyID, int iStaffID)
        {
            return this.Adapter.GetDataByCompanyStaffID(new int?(iCompanyID), new int?(iStaffID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.CreditMasterDataTable GetDataByCreditID(int iCreditID)
        {
            return this.Adapter.GetDataByCreditID(new int?(iCreditID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.CreditMasterDataTable GetDataByRemaingCredit(int iClientID)
        {
            return this.Adapter.GetDataByClientIDAndRemaingCredit(new int?(iClientID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Update, true)]
        public bool UpdateCredit(int iCreditID, int iCompanyID, int? iClientID, int? iCurrencyID, string sCreditNumber, DateTime? dtCreditDate, string sNotes, string sTerms, string sCreditStatus, decimal? dCreditRemaingTotal, decimal? dCreditTotal)
        {
            try
            {
                this.Adapter.Update(new int?(iCreditID), new int?(iCompanyID), iClientID, iCurrencyID, sCreditNumber, dtCreditDate, sNotes, sTerms, sCreditStatus, dCreditRemaingTotal, dCreditTotal);
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        [DataObjectMethod(DataObjectMethodType.Update, false)]
        public bool UpdateCreditStatus(int iCreditID, string sCreditStatus)
        {
            try
            {
                this.Adapter.UpdateCreditStatus(new int?(iCreditID), sCreditStatus);
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        [DataObjectMethod(DataObjectMethodType.Update, false)]
        public bool UpdateRemaingCredit(int iCreditID, decimal? dCreditRemaingTotal)
        {
            try
            {
                this.Adapter.UpdateRemaingCredit(new int?(iCreditID), dCreditRemaingTotal);
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        protected CreditMasterTableAdapter Adapter
        {
            get
            {
                if (this._CreditMasterAdapter == null)
                {
                    return new CreditMasterTableAdapter();
                }
                return this._CreditMasterAdapter;
            }
        }
    }
}
