// Generated by .NET Reflector from E:\Projects\Doyingo_Migration\Website\bin\DABL.dll
namespace DABL.BLL
{
    using DABL.DAL;
    using DABL.DAL.CloudAccountDATableAdapters;
    using System;
    using System.ComponentModel;
    
    public class CityMasterBLL
    {
        private CityMasterTableAdapter _CityMasterAdapter;
        
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
        public int AddCity(int iCountryID, int iStateID, string sCityCode, string sCityName, string sCityDesc, bool bCityStatus)
        {
            int? cityID = 0;
            this.Adapter.Insert(ref cityID, new int?(iCountryID), new int?(iStateID), sCityCode, sCityName, sCityDesc, new bool?(bCityStatus));
            return cityID.Value;
        }
        
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool DeleteCity(int iCityID)
        {
            try
            {
                this.Adapter.Delete(new int?(iCityID));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public CloudAccountDA.CityMasterDataTable GetAllDetail()
        {
            return this.Adapter.GetData();
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.CityMasterDataTable GetDataByCityID(int iCityID)
        {
            return this.Adapter.GetDataByCityID(new int?(iCityID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.CityMasterDataTable GetDataByCityName(string sCityName)
        {
            return this.Adapter.GetDataByCityName(sCityName);
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.CityMasterDataTable GetDataByCountryID(int iCountryID)
        {
            return this.Adapter.GetDataByCountryID(new int?(iCountryID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.CityMasterDataTable GetDataByStateCityName(int iStateID, int iCountryID, string sCityName)
        {
            return this.Adapter.GetDataByStateCityName(new int?(iStateID), new int?(iCountryID), sCityName);
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.CityMasterDataTable GetDataByStateCityName(int iCityID, int iStateID, int iCountryID, string sCityName)
        {
            return this.Adapter.GetDataByStateCityNameUpdate(new int?(iCityID), new int?(iStateID), new int?(iCountryID), sCityName);
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.CityMasterDataTable GetDataByStateID(int iStateID)
        {
            return this.Adapter.GetDataByStateID(new int?(iStateID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Update, true)]
        public bool UpdateCity(int iCityID, int iCountryID, int iStateID, string sCityCode, string sCityName, string sCityDesc, bool bCityStatus)
        {
            try
            {
                this.Adapter.Update(new int?(iCityID), new int?(iCountryID), new int?(iStateID), sCityCode, sCityName, sCityDesc, new bool?(bCityStatus));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        protected CityMasterTableAdapter Adapter
        {
            get
            {
                if (this._CityMasterAdapter == null)
                {
                    return new CityMasterTableAdapter();
                }
                return this._CityMasterAdapter;
            }
        }
    }
}
