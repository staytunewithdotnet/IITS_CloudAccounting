// Generated by .NET Reflector from E:\Projects\Doyingo_Migration\Website\bin\DABL.dll
namespace DABL.BLL
{
    using DABL.DAL;
    using DABL.DAL.CloudAccountDATableAdapters;
    using System;
    using System.ComponentModel;
    
    public class CompanyClientContactDetailBLL
    {
        private CompanyClientContactDetailTableAdapter _CompanyClientContactDetailAdapter;
        
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
        public int AddCompanyClientContact(int iCompanyID, int iCompanyClientID, string sEmail, string sFirstName, string sLastName, string sHomePhone, string sMobile, bool bLoginCredentials, string sUserName, bool bLoginInfoSent)
        {
            int? companyClientContactID = 0;
            this.Adapter.Insert(ref companyClientContactID, new int?(iCompanyID), new int?(iCompanyClientID), sEmail, sFirstName, sLastName, sHomePhone, sMobile, new bool?(bLoginCredentials), sUserName, new bool?(bLoginInfoSent));
            return companyClientContactID.Value;
        }
        
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool DeleteByCompany(int iCompanyID)
        {
            try
            {
                this.Adapter.DeleteByCompanyID(new int?(iCompanyID));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        [DataObjectMethod(DataObjectMethodType.Delete, false)]
        public bool DeleteByCompanyClient(int iCompanyClientID)
        {
            try
            {
                this.Adapter.DeleteByCompanyClientID(new int?(iCompanyClientID));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool DeleteCompanyClientContact(int iCompanyClientContactID)
        {
            try
            {
                this.Adapter.Delete(new int?(iCompanyClientContactID));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public CloudAccountDA.CompanyClientContactDetailDataTable GetAllDetail()
        {
            return this.Adapter.GetData();
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.CompanyClientContactDetailDataTable GetDataByCompanyClientContactID(int iCompanyClientContactID)
        {
            return this.Adapter.GetDataByCompanyClientContactID(new int?(iCompanyClientContactID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.CompanyClientContactDetailDataTable GetDataByCompanyClientID(int iCompanyClientID)
        {
            return this.Adapter.GetDataByCompanyClientID(new int?(iCompanyClientID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.CompanyClientContactDetailDataTable GetDataByCompanyEmail(int iCompanyID, string sEmail)
        {
            return this.Adapter.GetDataByCompanyIDAndEmail(new int?(iCompanyID), sEmail);
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.CompanyClientContactDetailDataTable GetDataByCompanyID(int iCompanyID)
        {
            return this.Adapter.GetDataByCompanyID(new int?(iCompanyID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.CompanyClientContactDetailDataTable GetDataByUsername(string sUsername)
        {
            return this.Adapter.GetDataByUsername(sUsername);
        }
        
        [DataObjectMethod(DataObjectMethodType.Update, true)]
        public bool UpdateCompanyClientContact(int iCompanyClientContactID, int iCompanyID, int iCompanyClientID, string sEmail, string sFirstName, string sLastName, string sHomePhone, string sMobile, bool bLoginCredentials, string sUserName, bool bLoginInfoSent)
        {
            try
            {
                this.Adapter.Update(new int?(iCompanyClientContactID), new int?(iCompanyID), new int?(iCompanyClientID), sEmail, sFirstName, sLastName, sHomePhone, sMobile, new bool?(bLoginCredentials), sUserName, new bool?(bLoginInfoSent));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        protected CompanyClientContactDetailTableAdapter Adapter
        {
            get
            {
                if (this._CompanyClientContactDetailAdapter == null)
                {
                    return new CompanyClientContactDetailTableAdapter();
                }
                return this._CompanyClientContactDetailAdapter;
            }
        }
    }
}
