// Generated by .NET Reflector from E:\Projects\Doyingo_Migration\Website\bin\DABL.dll
namespace DABL.BLL
{
    using DABL.DAL;
    using DABL.DAL.CloudAccountDATableAdapters;
    using System;
    using System.ComponentModel;
    
    public class ContactMasterBLL
    {
        private ContactMasterTableAdapter _ContactMasterAdapter;
        
        [DataObjectMethod(DataObjectMethodType.Insert, true)]
        public int AddContact(string sCompanyName, string sContactPersone, string sAddress1, string sAddress2, string sAddress3, string sAddress4, string sZipCode, string sCity, string sState, string sCountry, string sPhone1, string sPhone2, string sFax1, string sFax2, string sMobile1, string sMobile2, string sEmail1, string sEmail2, string sWebsite, string sGoogleMapCode, bool bContactStatus)
        {
            int? contactID = 0;
            this.Adapter.Insert(ref contactID, sCompanyName, sContactPersone, sAddress1, sAddress2, sAddress3, sAddress4, sZipCode, sCity, sState, sCountry, sPhone1, sPhone2, sFax1, sFax2, sMobile1, sMobile2, sEmail1, sEmail2, sWebsite, sGoogleMapCode, new bool?(bContactStatus));
            return contactID.Value;
        }
        
        [DataObjectMethod(DataObjectMethodType.Delete, true)]
        public bool DeleteContact(int iContactID)
        {
            try
            {
                this.Adapter.Delete(new int?(iContactID));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, true)]
        public CloudAccountDA.ContactMasterDataTable GetAllDetail()
        {
            return this.Adapter.GetData();
        }
        
        [DataObjectMethod(DataObjectMethodType.Select, false)]
        public CloudAccountDA.ContactMasterDataTable GetDataByContactID(int iContactID)
        {
            return this.Adapter.GetDataByContactID(new int?(iContactID));
        }
        
        [DataObjectMethod(DataObjectMethodType.Update, true)]
        public bool UpdateContact(int iContactID, string sCompanyName, string sContactPersone, string sAddress1, string sAddress2, string sAddress3, string sAddress4, string sZipCode, string sCity, string sState, string sCountry, string sPhone1, string sPhone2, string sFax1, string sFax2, string sMobile1, string sMobile2, string sEmail1, string sEmail2, string sWebsite, string sGoogleMapCode, bool bContactStatus)
        {
            try
            {
                this.Adapter.Update(new int?(iContactID), sCompanyName, sContactPersone, sAddress1, sAddress2, sAddress3, sAddress4, sZipCode, sCity, sState, sCountry, sPhone1, sPhone2, sFax1, sFax2, sMobile1, sMobile2, sEmail1, sEmail2, sWebsite, sGoogleMapCode, new bool?(bContactStatus));
                return true;
            }
            catch (Exception)
            {
                return false;
            }
        }
        
        protected ContactMasterTableAdapter Adapter
        {
            get
            {
                if (this._ContactMasterAdapter == null)
                {
                    return new ContactMasterTableAdapter();
                }
                return this._ContactMasterAdapter;
            }
        }
    }
}
